{"version":3,"file":"main.js","mappings":";;;;;;;;;;;;;;;;;;;;;AAKkF;;;;;;;;;AAMlF,IAAI,eAAe,GAAC,EAAE,CAAC;AACvB,IAAI,IAAI,GAAC,EAAE,CAAC;AACZ,IAAI,KAAK,GAAC,EAAE,CAAC;AACb,IAAI,OAAO,GAAC,EAAE,CAAC;AACf,IAAI,OAAO,GAAC,EAAE,CAAC;AAMR,MAAM,cAAc;IAQzB,YACU,YAAmB,EAAU,WAAiB,EAC9C,EAAe,EACf,gBAAgC,EAChC,eAA8B,EAC9B,SAAwB,EACxB,KAAsB,EACtB,WAA8B;QAN9B,iBAAY,GAAZ,YAAY,CAAO;QAAU,gBAAW,GAAX,WAAW,CAAM;QAC9C,OAAE,GAAF,EAAE,CAAa;QACf,qBAAgB,GAAhB,gBAAgB,CAAgB;QAChC,oBAAe,GAAf,eAAe,CAAe;QAC9B,cAAS,GAAT,SAAS,CAAe;QACxB,UAAK,GAAL,KAAK,CAAiB;QACtB,gBAAW,GAAX,WAAW,CAAmB;QAZxC,wBAAmB,GAAY,KAAK,CAAC;QAcnC,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;QACpC,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,EAAC,QAAQ,EAAC,UAAU,EAAC,OAAO,EAAC,WAAW,EAAC,CAAC;QACrE,IAAI,CAAC,eAAe,CAAC,uBAAuB,EAAE,CAAC;QAC/C,eAAe,CAAC,mBAAmB,EAAE,CAAC;QAEtC,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;IAED,QAAQ;QAEN,IAAI,CAAC,eAAe,EAAE,CAAC;IAEzB,CAAC;IACD,eAAe;QACb,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC7B,QAAQ,EAAE,CAAC,EAAE,CAAC;YACd,KAAK,EAAE,CAAC,EAAE,CAAC;YACX,aAAa,EAAE,CAAC,EAAE,CAAC;YACnB,QAAQ,EAAE,CAAC,EAAE,CAAC;YACd,aAAa,EAAE,CAAC,EAAE,CAAC;YACnB,IAAI,EAAE,CAAC,EAAE,CAAC;YACV,YAAY,EAAE,CAAC,EAAE,CAAC;YAClB,QAAQ,EAAE,CAAC,EAAE,CAAC;YACd,UAAU,EAAE,CAAC,EAAE,CAAC;YAChB,QAAQ,EAAE,CAAC,EAAE,CAAC;YACd,SAAS,EAAE,CAAC,EAAE,CAAC;YACf,IAAI,EAAE,CAAC,EAAE,CAAC;YACV,OAAO,EAAE,CAAC,EAAE,CAAC;YACb,OAAO,EAAE,CAAC,EAAE,CAAC;YACb,KAAK,EAAE,CAAC,EAAE,CAAC;YACX,WAAW,EAAE,CAAC,EAAE,CAAC;YACjB,OAAO,EAAE,CAAC,EAAE,CAAC;SACd,CAAC,CAAC;IACL,CAAC;IACD,cAAc;QACZ,IAAI,SAAS,CAAC,WAAW,EAAE;YACzB,SAAS,CAAC,WAAW,CAAC,kBAAkB,CACtC,CAAC,QAAa,EAAE,EAAE;gBAChB,IAAI,QAAQ,EAAE;oBACZ,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC;oBACzC,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC;oBAC3C,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,GAAG,EAAE;wBAC9B,IAAI,QAAQ,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;wBAC1C,IAAI,MAAM,GAAG;4BACX,GAAG,EAAE,IAAI,CAAC,QAAQ;4BAClB,GAAG,EAAE,IAAI,CAAC,SAAS;yBACpB,CAAC;wBAEF,QAAQ,CAAC,OAAO,CACd;4BACE,QAAQ,EAAE,MAAM;yBACjB,EACD,UAAU,OAAW,EAAE,MAAU;4BAC/B,IAAI,MAAM,IAAI,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,EAAE,EAAE;gCAC3C,IAAI,OAAO,CAAC,CAAC,CAAC,EAAE;oCAEd,eAAe,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,iBAAiB,CAAC;oCAC/C,IAAI,GAAC,OAAO,CAAC,CAAC,CAAC,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;oCAChD,KAAK,GAAC,OAAO,CAAC,CAAC,CAAC,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;oCACjD,OAAO,GAAC,OAAO,CAAC,CAAC,CAAC,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;oCACnD,OAAO,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;iCACtD;6BACF;iCAAM;gCACL,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;6BAC1B;wBACH,CAAC,CACF,CAAC;oBACJ,CAAC,CAAC,CAAC;oBACH,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC;iBACjC;qBAAM;oBACL,IAAI,CAAC,SAAS,EAAE,CAAC;oBACjB,OAAO;iBACR;YACH,CAAC,EACD,CAAC,GAAG,EAAE,EAAE;gBACN,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,sCAAsC,EAAE;oBAC9D,QAAQ,EAAE,YAAY;iBACvB,CAAC,CAAC;YACL,CAAC,CACF,CAAC;SACH;aAAM;YACL,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,wCAAwC,EAAE;gBACxD,QAAQ,EAAE,YAAY;aACvB,CAAC,CAAC;SACJ;IACH,CAAC;IACD,eAAe;IACf,gBAAgB;QACd,IAAI,CAAC,gBAAgB,CAAC,IAAI,EAAE,CAAC;QAC7B,IAAI,IAAI,CAAC,mBAAmB,EAAE;YAC5B,IAAI,CAAC,WAAW;iBACb,MAAM,CAAC,kFAA+B,CAAC;iBACvC,IAAI,CAAC,CAAC,IAAS,EAAE,EAAE;gBAClB,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBACtD,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBACpD,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;gBAC5D,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,eAAe,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;gBACjE,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBACxD,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;gBAC5D,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;gBAC9D,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC,QAAQ,CAAC,eAAe,CAAC,CAAC;gBAEjE,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;gBAC/C,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;gBACrD,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;gBACjD,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;gBACrD,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;gBACzD,IAAI,CAAC,gBAAgB;qBAClB,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC;qBACrB,SAAS,CAAC,CAAC,IAAS,EAAE,EAAE;oBACvB,YAAY,CAAC,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAE,CAAC;oBACpD,QAAQ,CAAC,IAAI,GAAG,GAAG,CAAC;gBACtB,CAAC,CAAC,CAAC;YACP,CAAC,CAAC,CAAC;SACN;aAAM;YACL,IAAI,CAAC,cAAc,EAAE,CAAC;SACvB;IACH,CAAC;IACD,kBAAkB;QAChB,IAAI,CAAC,WAAW;aACb,MAAM,CAAC,oFAAiC,CAAC;aACzC,IAAI,CAAC,CAAC,IAAS,EAAE,EAAE;YAClB,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACtD,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACpD,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YAC5D,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,eAAe,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YACjE,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACxD,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YAC5D,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YAC9D,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC,QAAQ,CAAC,eAAe,CAAC,CAAC;YACjE,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;YACzD,IAAI,CAAC,gBAAgB;iBAClB,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC;iBACrB,SAAS,CAAC,CAAC,IAAS,EAAE,EAAE;gBACvB,YAAY,CAAC,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAE,CAAC;gBACpD,QAAQ,CAAC,IAAI,GAAG,GAAG,CAAC;YACtB,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC;IACD,iBAAiB;IAEjB,SAAS;QACP,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,wCAAwC,EAAE;YACxD,QAAQ,EAAE,YAAY;SACvB,CAAC,CAAC;IACL,CAAC;;4EAlKU,cAAc;4GAAd,cAAc;QCrB3B,oEAAiC;QACjC,yEAA2B;QAEA,oEAAgF;QAAC,4DAAM;QAE9G,yEAA0B;QACjB,kEAAM;QAAA,4DAAK;QAChB,yEAA0B;QACH,mIAAS,sBAAkB,IAAC;QAC3C,8DAAmF;QAAnF,0EAAmF;QAE3E,uEAAoQ;QAIxQ,4DAAI;QAGZ,+DAAmD;QAAnD,0EAAmD;QAAhC,oIAAS,wBAAoB,IAAC;QAC7C,8DACsF;QADtF,2EACsF;QAE9E,4GAEJ;QAAA,4DAAQ;QACR,sFAAqL;QACjL,uEAA8C;QAElD,4DAAiB;QACjB,uEACM;QAGV,4DAAM;QAGd,+DAAuB;QAAvB,2EAAuB;QACnB,0KACJ;QAAA,4DAAM;QACN,2EAAsB;QACE,sEAAU;QAAA,4DAAM;QACpC,2EAAoB;QAAA,gEAAI;QAAA,4DAAM;;;;;;;;;;;;;;;;;;;;;;;;;;AChCgC;AAEV;;;;;;;;;;ICLtD,uEAAuE;IACnE,qEAA2C;IAC/C,4DAAI;;;IADK,0DAAwB;IAAxB,0LAAwB;;;IAUrC,0EAA0D;IACxD,uEAAW;IAAA,mEAAoC;IAAA,kEAAO;IAAA,qEAAiE;IACzH,4DAAM;;;IADyF,0DAAmB;IAAnB,mFAAmB;;;IAGlH,0EAAyD;IAClC,mEAAmC;IAAA,kEAAQ;IAAA,oEAAG;IAAA,iEAAM;IAAA,4DAAI;;;IAKvE,yEAAsD;IAE9C,qEAA2C;IAC3C,0EAAmC;IAAC,uDAAgB;IAAA,4DAAM;IAE9D,qEAAyE;IAC7E,4DAAK;;;;IAJQ,0DAAwB;IAAxB,0LAAwB;IACO,0DAAgB;IAAhB,0FAAgB;IAEhB,0DAA0B;IAA1B,8GAA0B;;;IAEtE,yEAAsD;IAEd,uDAAgB;IAAA,4DAAM;IAEtD,qEAA0E;IAC9E,4DAAM;;;IAH8B,0DAAgB;IAAhB,gFAAgB;IAEP,0DAA0B;IAA1B,8GAA0B;;;IAb/E,yEAAqD;IAEjD,uHAMK;IACL,uHAMK;IAET,4DAAK;;;IAfI,0DAA8B;IAA9B,+FAA8B;IAO9B,0DAA8B;IAA9B,+FAA8B;;;IASvC,2EAAgD;IAAA,qEAAU;IAAA,4DAAO;;;;IA3BzE,0EAA+B;IAC3B,oHAEM;IAEN,oHAEM;IACN,0EAA2B;IACvB,kHAiBK;IACL,sHAAiE;IACrE,4DAAM;IAEN,0EAAuC;IAIhB,4SAAe,2EAAS,KAAC;IAA5C,4DAA+G;IAC/G,0EAAuB;IACd,8RAAS,2EAAS,KAAC;IAAxB,4DAA0F;;;IAnC5F,0DAAqB;IAArB,0FAAqB;IAIrB,0DAAoB;IAApB,yFAAoB;IAID,0DAAgB;IAAhB,yFAAgB;IAkBN,0DAAe;IAAf,kFAAe;;AD1BjD,MAAM,gBAAgB;IAS3B,YACE,IAAiB,EACT,eAA+B,EAC/B,aAA8B,EAC9B,QAAuB,EACvB,KAAqB,EACrB,SAAmB,EACnB,KAAsB;QALtB,oBAAe,GAAf,eAAe,CAAgB;QAC/B,kBAAa,GAAb,aAAa,CAAiB;QAC9B,aAAQ,GAAR,QAAQ,CAAe;QACvB,UAAK,GAAL,KAAK,CAAgB;QACrB,cAAS,GAAT,SAAS,CAAU;QACnB,UAAK,GAAL,KAAK,CAAiB;QAXhC,cAAS,GAAS,KAAK,CAAC;QACxB,gBAAW,GAAS,KAAK,CAAC;QAC1B,aAAQ,GAAS,KAAK,CAAC;QA+BvB,WAAM,GAAiB,IAAI,qEAAY,EAAE,CAAC;QAC1C,kBAAa,GAAmB,EAAE,CAAC;QArBjC,IAAI,CAAC,OAAO,GAAG,oEAAc,CAAC;QAC9B,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QACpB,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,CAAE,CAAC,CAAC;QACrD,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,EAAE,CAAC;QAC3B,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,MAAM,EAAE,EAAE;YAC1C,IAAI,CAAC,QAAQ,GAAE,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;QACzC,CAAC,CAAC,CAAC;IACL,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,IAAI,CAAC,QAAQ,EAAE,CAAC;QAChB,WAAW,CAAC,GAAE,EAAE;YACf,IAAI,CAAC,YAAY,EAAE,CAAC;YACpB,IAAI,CAAC,QAAQ,EAAE,CAAC;QACjB,CAAC,EAAC,IAAI,CAAC;QAEP,IAAI,CAAC,QAAQ,CAAC,oBAAoB,EAAE,CAAC,SAAS,CAAE,CAAC,WAAyB,EAAE,EAAE,GAAI,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC,EAAC,CAAC,CAAC;IACpH,CAAC;IAGD,YAAY;QACV,IAAI,CAAC,eAAe;aACjB,cAAc,CAAC,IAAI,CAAC,QAAQ,CAAC;aAC7B,SAAS,CAAC,CAAC,IAAS,EAAE,EAAE;YACvB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACnB,CAAC,CAAC,CAAC;IACP,CAAC;IACD,YAAY;QACV,IAAI,CAAC,aAAa;aACf,WAAW,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,WAAW,CAAC;aAC5C,SAAS,CAAC,CAAC,IAAS,EAAE,EAAE;YACvB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAC5B,CAAC,CAAC,CAAC;IACP,CAAC;IACD,QAAQ;QACN,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC,IAAQ,EAAC,EAAE;YACjE,IAAI,CAAC,QAAQ,GAAC,IAAI,CAAC,QAAQ,CAAC;YAC5B,IAAI,CAAC,UAAU,GAAC,IAAI,CAAC,UAAU,CAAC;QAClC,CAAC,CAAC;IACJ,CAAC;IACD,OAAO;QACL,IAAI,OAAO,GAAI,QAAQ,CAAC,cAAc,CAAC,KAAK,CAAsB,CAAC,KAAK,CAAC;QACzE,IAAG,OAAO,IAAE,EAAE;YACd,OAAQ,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,sBAAsB,EAAE;gBAC9C,QAAQ,EAAE,YAAY;aACvB,CAAC,CAAC;QACJ,IAAI,CAAC,SAAS,GAAC,IAAI,CAAC;QACnB,IAAI,CAAC,MAAM,GAAG;YACZ,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,WAAW,EAAE,IAAI,CAAC,WAAW;YAC7B,OAAO,EAAE,OAAO;YAChB,gBAAgB,EAAC,EAAE;YACnB,aAAa,EAAC,OAAO;YACrB,WAAW,EAAC,IAAI,IAAI,EAAE;SACvB,CAAC;QAED,QAAQ,CAAC,cAAc,CAAC,KAAK,CAAsB,CAAC,KAAK,GAAC,EAAE,CAAC;QAC9D,IAAI,CAAC,QAAQ,CAAC,kBAAkB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAC7C,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,IAAI,CAAC,QAAQ,EAAC,IAAI,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,CAAC,IAAQ,EAAC,EAAE;YAC9E,IAAI,CAAC,SAAS,GAAC,KAAK,CAAC;YACrB,IAAI,CAAC,WAAW,GAAC,IAAI,CAAC;QAExB,CAAC,EAAC,GAAG,GAAE;YACN,IAAI,CAAC,SAAS,GAAC,KAAK,CAAC;QAEtB,CAAC,CAAC;IACL,CAAC;IACD,UAAU,CAAC,GAAiB;QAC1B,IAAI,MAAM,GAAG,IAAI,qEAAY,EAAE,CAAC;QAChC,MAAM,CAAC,QAAQ,GAAG,GAAG,CAAC,QAAQ,CAAC;QAC/B,MAAM,CAAC,aAAa,GAAG,GAAG,CAAC,aAAa,CAAC;QACzC,MAAM,CAAC,WAAW,GAAG,GAAG,CAAC,WAAW,CAAC;QACrC,MAAM,CAAC,gBAAgB,GAAG,GAAG,CAAC,gBAAgB,CAAC;QAC/C,MAAM,CAAC,OAAO,GAAG,GAAG,CAAC,OAAO,CAAC;QAC7B,MAAM,CAAC,WAAW,GAAC,IAAI,IAAI,EAAE,CAAC;QAC9B,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAClC,CAAC;IACA,wBAAwB;IACxB,WAAW;QACV,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;IACxB,CAAC;;gFApGU,gBAAgB;8GAAhB,gBAAgB;QCjB7B,yEAAsB;QAGT,mIAAS,iBAAa,IAAC;QAA2D,4DAAI;QAE7F,yEAAqB;QACjB,wGAEI;QACJ,yEAAuB;QACjB,uDAAc;QAAA,4DAAK;QACzB,yEAAuB;QAAA,wDAA+B;QAAA,4DAAM;QAKpE,+GAuCM;QACR,4DAAM;;QAlDQ,0DAAoB;QAApB,6GAAoB;QAIlB,0DAAc;QAAd,wGAAc;QACG,0DAA+B;QAA/B,iKAA+B;QAKxD,0DAAU;QAAV,0EAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IENN,wEAAyG;IACrG,oEAA0C;IAC1C,yEAAmB;IACG,uDAAa;IAAA,4DAAM;IACpC,yEAAoB;IAAE,uDAAgC;IAAA,4DAAM;IAEjE,mEAAkC;IACtC,4DAAK;;;IAPwB,6IAA2B;IAC/C,0DAAuB;IAAvB,yJAAuB;IAEN,0DAAa;IAAb,6EAAa;IACR,0DAAgC;IAAhC,+JAAgC;;;IANnE,wEAAmE;IAE/D,6GAOK;IAGT,4DAAK;;;;IAVI,0DAAsB;IAAtB,8FAAsB;;ADAhC,MAAM,cAAc;IAGzB,YAAoB,iBAAkC,EAAU,eAA6B,EAAU,eAAsB;QAAzG,sBAAiB,GAAjB,iBAAiB,CAAiB;QAAU,oBAAe,GAAf,eAAe,CAAc;QAAU,oBAAe,GAAf,eAAe,CAAO;QAC3H,IAAI,CAAC,eAAe,CAAC,uBAAuB,EAAE,CAAC;QAC/C,IAAI,IAAI,GAAE,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,CAAE,CAAC,CAAC;QACpD,IAAI,CAAC,MAAM,GAAC,IAAI,CAAC,EAAE,CAAC;IAEtB,CAAC;IACD,QAAQ;QACN,IAAI,CAAC,gBAAgB,EAAE,CAAC;IAC1B,CAAC;IAED,gBAAgB;QACd,IAAI,CAAC,iBAAiB,CAAC,eAAe,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,CAAC,IAAQ,EAAC,EAAE;YACxE,IAAI,CAAC,QAAQ,GAAC,IAAI,CAAC,IAAI,CAAC;QAC1B,CAAC,CAAC;IACJ,CAAC;IAEH,cAAc,CAAC,MAAa;QAC1B,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,EAAE,EAAE,WAAW,EAAE,EAAC,MAAM,EAAE,MAAM,EAAC,EAAC,CAAC,CAAC;IAChF,CAAC;;4EArBY,cAAc;4GAAd,cAAc;QCV3B,yEAAsB;QAQd,wGAYK;QACT,4DAAM;;QAbmB,0DAAW;QAAX,iFAAW;;;;;;;;;;;;;;;;;;;;;;;;;ACFkC;;;;;;;;;;;;ICAhE,uEAAwI;IACpI,oEAAyC;IAC7C,4DAAI;;;IAFsB,6IAA8B;IAC/C,0DAAwB;IAAxB,yLAAwB;;;IAW7B,yEAAsD;IAE9C,qEAAoD;IACpD,0EAAmC;IAAC,uDAAgB;IAAA,4DAAM;IAE9D,qEAAuE;IAC3E,4DAAK;;;IAJQ,0DAAiC;IAAjC,2LAAiC;IACF,0DAAgB;IAAhB,0FAAgB;IAEjB,0DAAyB;IAAzB,qFAAyB;;;IAEpE,yEAAsD;IAEd,uDAAgB;IAAA,4DAAM;IAEtD,qEAAuE;IAC3E,4DAAM;;;IAH8B,0DAAgB;IAAhB,gFAAgB;IAET,0DAAyB;IAAzB,qFAAyB;;;IAZ5E,yEAAmD;IAC/C,sHAMK;IACL,sHAMK;IAET,4DAAK;;;IAfI,0DAA8B;IAA9B,+FAA8B;IAO9B,0DAA8B;IAA9B,+FAA8B;;;IASvC,2EAAgD;IAAA,qEAAU;IAAA,4DAAO;;;;IAtBzE,yEAA8B;IAC1B,qEAEM;IACN,0EAA2B;IACvB,iHAgBK;IACL,qHAAiE;IACrE,4DAAM;IAEN,0EAAuC;IAI5B,0SAAe,0EAAS,KAAC;IAAhC,4DAAqH;IACrH,0EAAuB;IACb,6RAAS,2EAAS,KAAC;IAAzB,4DAA2F;;;IA1B1E,0DAAc;IAAd,uFAAc;IAiBJ,0DAAe;IAAf,kFAAe;;ADjBjD,MAAM,gBAAgB;IAS3B,YACE,IAAiB,EACT,YAA2B,EAC3B,gBAA+B,EAChC,QAAuB,EACtB,KAAqB,EACrB,SAAmB,EACnB,KAAsB;QALtB,iBAAY,GAAZ,YAAY,CAAe;QAC3B,qBAAgB,GAAhB,gBAAgB,CAAe;QAChC,aAAQ,GAAR,QAAQ,CAAe;QACtB,UAAK,GAAL,KAAK,CAAgB;QACrB,cAAS,GAAT,SAAS,CAAU;QACnB,UAAK,GAAL,KAAK,CAAiB;QAVhC,aAAQ,GAAa,EAAE,CAAC;QACxB,gBAAW,GAAO,EAAE,CAAC;QACrB,cAAS,GAAS,KAAK,CAAC;QAUtB,IAAI,CAAC,OAAO,GAAG,oEAAc,CAAC;QAC9B,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QACpB,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,CAAE,CAAC,CAAC;QACrD,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,MAAM,EAAE,EAAE;YAC1C,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,OAAO,CAAC,CAAC;YAC7B,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,UAAU,CAAC,CAAC;YACnC,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,aAAa,CAAC,CAAC;QAC3C,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAC1B,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,IAAI,CAAC,mBAAmB,EAAE,CAAC;IAC7B,CAAC;IACD,QAAQ;QACN,WAAW,CAAC,GAAE,EAAE;YACd,IAAI,CAAC,UAAU,EAAE,CAAC;QACpB,CAAC,EAAC,IAAI,CAAC;IACT,CAAC;IACD,UAAU;QACR,IAAI,CAAC,gBAAgB,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,EAAC,IAAI,CAAC,QAAQ,EAAC,IAAI,CAAC,WAAW,CAAC,CAAC,SAAS,CAAC,CAAC,IAAQ,EAAC,EAAE;YACpG,IAAI,CAAC,WAAW,GAAC,IAAI,CAAC;QACxB,CAAC,CAAC;IACJ,CAAC;IACD,kBAAkB;QAChB,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,CAAC,IAAQ,EAAC,EAAE;YAC7D,IAAI,CAAC,GAAG,GAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACnB,CAAC,CAAC;IACJ,CAAC;IAED,OAAO;QACL,IAAI,OAAO,GAAI,QAAQ,CAAC,cAAc,CAAC,KAAK,CAAsB,CAAC,KAAK,CAAC;QACzE,IAAG,OAAO,IAAE,EAAE;YACd,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,sBAAsB,EAAE;gBAC7C,QAAQ,EAAE,YAAY;aACvB,CAAC,CAAC;QACH,IAAI,CAAC,SAAS,GAAC,IAAI,CAAC;QAEpB,IAAI,UAAU,GAAG;YACf,KAAK,EAAC,IAAI,CAAC,KAAK;YAChB,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,aAAa,EAAC,OAAO;YACrB,WAAW,EAAE,IAAI,CAAC,WAAW;YAC7B,OAAO,EAAE,OAAO;YAChB,WAAW,EAAC,IAAI,IAAI,EAAE;SACvB,CAAC;QACF,IAAI,CAAC,QAAQ,CAAC,mBAAmB,CAAC,UAAU,CAAC,CAAC;QAC7C,QAAQ,CAAC,cAAc,CAAC,KAAK,CAAsB,CAAC,KAAK,GAAC,EAAE,CAAC;QAC7D,IAAI,CAAC,QAAQ,CAAC,mBAAmB,CAAC,IAAI,CAAC,KAAK,EAAC,IAAI,CAAC,WAAW,EAAC,IAAI,CAAC,QAAQ,EAAC,UAAU,CAAC,CAAC,SAAS,CAAC,CAAC,IAAQ,EAAC,EAAE;YAC5G,IAAI,CAAC,SAAS,GAAC,KAAK,CAAC;QAEvB,CAAC,EAAC,GAAG,GAAE;YACL,IAAI,CAAC,SAAS,GAAC,KAAK,CAAC;QAEvB,CAAC,CAAC;IACL,CAAC;IAED,mBAAmB;QACjB,IAAI,CAAC,gBAAgB,CAAC,sBAAsB,CAAC,IAAI,CAAC,KAAK,EAAC,IAAI,CAAC,WAAW,EAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,GAAE,EAAE,GAAC,CAAC,CAAC,CAAC;IAC5G,CAAC;IACA,wBAAwB;IACxB,WAAW;QACV,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;IACxB,CAAC;;gFA/EU,gBAAgB;8GAAhB,gBAAgB;QCjB7B,yEAAsB;QAGT,mIAAS,iBAAa,IAAC;QAA2D,4DAAI;QAE7F,yEAAqB;QACjB,wGAEI;QACJ,qEAAI;QAAA,uDAAuC;QAAA,4DAAK;QAGxD,4GAkCM;QACR,4DAAM;;QAzCQ,0DAAoB;QAApB,4GAAoB;QAGpB,0DAAuC;QAAvC,yIAAuC;QAG7C,0DAAS;QAAT,yEAAS;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNc;AAQ2C;;;;;;;;;;;;;;;ICGzD,2EAAuE;IACpE,uDACF;IAAA,4DAAO;;;IADL,0DACF;IADE,iGACF;;;;IAbhB,0EAAwE;IAKrD,iSAAU,8EAAa,KAAC;IAA/B,4DAAiF;IACjF,4EAA2C;IAAuC,+DAAI;IAAA,4DAAO;IAE7F,4EAA0B;IAEtB,sEACD;IAAA,yHAEQ;IACX,4DAAO;;;IAHG,2DAAuB;IAAvB,4FAAuB;;;IAevC,0EAA2G;IACzG,qEAAoF;IACtF,4DAAM;;;IADsC,0DAAsB;IAAtB,8KAAsB;;;;IAY5D,yEAA0E;IAAtE,oSAAS,qGAA2B,KAAC;IAAiC,uDAAqB;IAAA,sEAAqB;IAAA,4DAAK;;;IAA/C,0DAAqB;IAArB,4JAAqB;;;IAC/F,qEAAmC;IAAA,qEAAW;IAAA,sEAAsB;IAAA,4DAAK;;;;IAOrE,wEAAmH;IAArB,mSAAS,4EAAU,KAAC;IAAC,yEAAc;IAAA,4DAAI;;;;IACrI,wEAAuH;IAAxB,mSAAS,+EAAa,KAAC;IAAC,qEAAU;IAAA,4DAAI;;;;IACrI,wEAAmG;IAAnB,mSAAS,0EAAQ,KAAC;IAAC,iEAAM;IAAA,4DAAI;;;IAUnH,0EAA4D;IAErD,qEAAU;IAAA,4DAAI;IAEnB,0EAAqB;IAGf,uDACF;IAAA,4DAAM;;;IADJ,0DACF;IADE,8HACF;;;;IAyBJ,0EAA0D;IAC9C,iTAAS,sFAAY,KAAC;IAA2B,+DAAI;IAAA,4DAAS;;;;IAjB3E,0EAA4D;IAEtD,qEAAU;IAAA,4DAAI;IAEnB,0EAAqB;IAEjB,mEAAgC;IAC7B,6EAA8F;IAAtF,kTAAU,sFAAoB,KAAC;IACnC,6EAA0D;IAAA,+DAAI;IAAA,4DAAS;IACvE,8EAAgE;IAAA,mEAAO;IAAA,4DAAS;IAChF,8EAA8D;IAAA,kEAAM;IAAA,4DAAS;IAC7E,8EAAgE;IAAA,kEAAM;IAAA,4DAAS;IAK1F,8HAEM;IACR,4DAAM;;;IAXe,0DAAoC;IAApC,qIAAoC;IACpC,0DAAuC;IAAvC,wIAAuC;IACvC,0DAAsC;IAAtC,uIAAsC;IACtC,0DAAuC;IAAvC,wIAAuC;IAKpD,0DAAiC;IAAjC,8KAAiC;;;IA+B7C,0EAAsD;IACpD,uDACF;IAAA,4DAAM;;;IADJ,0DACF;IADE,4FACF;;;IA9FF,0EAAqD;IAI7C,qEAC6E;IAC/E,4DAAM;IACN,0EAAuB;IACrB,mHAAyH;IACzH,mHAAyE;IAC3E,4DAAM;IAER,0EAAuB;IAEX,sEAAgE;IAAA,4DAAO;IAC7E,2EAAsD;IACpD,mHAAqI;IACrI,mHAAqI;IACrI,mHAA6G;IAC7G,yEAAqF;IAAA,iEAAK;IAAA,4DAAI;IAOtG,2EAAc;IAEZ,uHAcM;IAGL,wHAmBK;IACR,4DAAM;IAGT,2EAAc;IAKL,sEAAmF;IACrF,4DAAM;IAMd,2EAAqB;IACd,wDAAqB;IAAA,4DAAI;IAIhC,2EAAuB;IAElB,wDAAgB;IAAA,4DAAI;IAIzB,2EAA2B;IACzB,uHAEM;IACR,4DAAM;;;IA1FI,0DAAyE;IAAzE,6UAAyE;IAGhC,0DAA6B;IAA7B,+HAA6B;IACnE,0DAA4B;IAA5B,8HAA4B;IAOzB,0DAA+D;IAA/D,sNAA+D;IAC/D,0DAAgE;IAAhE,uNAAgE;IAChE,0DAAiD;IAAjD,iMAAiD;IAUrD,0DAAiC;IAAjC,0KAAiC;IAiBhC,0DAAiC;IAAjC,0KAAiC;IA4BM,0DAAsB;IAAtB,8KAAsB;IAQnE,0DAAqB;IAArB,oHAAqB;IAMvB,0DAAgB;IAAhB,+GAAgB;IAKG,0DAAY;IAAZ,gHAAY;;;IAMtC,0EAAoD;IAEhD,6EAAmC;IACrC,4DAAM;;ADnHL,MAAM,kBAAkB;IAc7B,YAAoB,YAA2B,EACrC,KAAW,EACnB,IAAiB,EACT,WAAsC,EACtC,eAAgC,EAChC,cAA8B,EAC9B,iBAAmC,EACnC,KAAsB,EACtB,eAAsB,EACtB,aAA2B,EAC5B,SAAmB;QAVR,iBAAY,GAAZ,YAAY,CAAe;QACrC,UAAK,GAAL,KAAK,CAAM;QAEX,gBAAW,GAAX,WAAW,CAA2B;QACtC,oBAAe,GAAf,eAAe,CAAiB;QAChC,mBAAc,GAAd,cAAc,CAAgB;QAC9B,sBAAiB,GAAjB,iBAAiB,CAAkB;QACnC,UAAK,GAAL,KAAK,CAAiB;QACtB,oBAAe,GAAf,eAAe,CAAO;QACtB,kBAAa,GAAb,aAAa,CAAc;QAC5B,cAAS,GAAT,SAAS,CAAU;QAtB9B,UAAK,GAAQ,CAAC,CAAC;QAIf,eAAU,GAAS,KAAK,CAAC;QACzB,kBAAa,GAAS,KAAK,CAAC;QAC5B,mBAAc,GAAQ,CAAC,CAAC;QACxB,iBAAY,GAAgB,EAAE,CAAC;QACxB,eAAU,GAAS,EAAE,CAAC;QAEtB,QAAG,GAAQ,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC;QAC9D,oBAAe,GAAQ,mBAAmB;QAYrC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAE9B,IAAI,CAAC,aAAa,CAAC,uBAAuB,EAAE,CAAC;QAC5C,IAAI,CAAC,OAAO,GAAG,oEAAc,CAAC;QAChC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QAElB,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YAClD,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC;YAC7B,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACpC,IAAI,CAAC,YAAY,EAAE,CAAC;QACtB,CAAC,CAAC,CAAC;IAEP,CAAC;IACD,sBAAsB;IACtB,YAAY;QACV,IAAI,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;YAChC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,CAAE,CAAC,CAAC;YAC5D,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC;YACvC,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;SAC3C;IACH,CAAC;IAGD,QAAQ;QAEN,WAAW,CAAC,GAAG,EAAE;YAChB,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAC3C,CAAC,EAAE,IAAI,CAAC,CAAC;IACX,CAAC;IACD,SAAS;QACP,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,cAAc,EAAE;YACjC,QAAQ,EAAE,YAAY;SACvB,CAAC,CAAC;IACL,CAAC;IACD,kBAAkB,CAAC,EAAS;QAC1B,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,IAAQ,EAAC,EAAE;YACrD,IAAI,CAAC,GAAG,GAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACjB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,YAAY,EAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAEhD,CAAC,CAAC;IAEJ,CAAC;IAGD,iBAAiB,CAAC,MAAa;QAC7B,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,EAAC,MAAM,CAAC,CAAC,SAAS,CAAC,CAAC,IAAQ,EAAC,EAAE;YAC1E,IAAI,CAAC,cAAc,GAAC,IAAI,CAAC;QAC3B,CAAC,CAAC;IACJ,CAAC;IAED,mBAAmB;IACnB,YAAY,CAAC,MAAU;QACrB,uDAAS,CAAC;YACR,IAAI,EAAE,oCAAoC,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE;YAC/D,cAAc,EAAE,IAAI;YACpB,iBAAiB,EAAE,KAAK;YACxB,cAAc,EAAE,IAAI;SACrB,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;YACjB,iDAAiD;YACjD,IAAI,MAAM,CAAC,WAAW,EAAE;gBACtB,IAAI,CAAC,YAAY,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,EAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,GAAE,EAAE;oBAC9E,uDAAS,CAAC,kCAAkC,EAAE,EAAE,EAAE,SAAS,CAAC;gBAC9D,CAAC,EAAC,GAAG,GAAE;oBACL,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;gBACnB,CAAC,CAAC;aACH;iBAAM,IAAI,MAAM,CAAC,QAAQ,EAAE;gBAC1B,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,cAAc,GAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aAC/D;QACH,CAAC,CAAC;IACJ,CAAC;IAED,iCAAiC;IACjC,UAAU,CAAC,MAAc,EAAE,KAAa;QACtC,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,MAAM,EAAC,KAAK,CAAC,CAAC,SAAS,CAAC,CAAC,IAAQ,EAAC,EAAE;YAC/D,IAAG,IAAI,CAAC,MAAM,IAAE,GAAG,EAAC;gBACnB,IAAI,CAAC,UAAU,GAAC,KAAK,CAAC;aACtB;iBAAI;gBACH,IAAI,CAAC,UAAU,GAAC,IAAI,CAAC;aACtB;QACH,CAAC,CAAC;IACJ,CAAC;IACD,YAAY;IACZ,QAAQ;QACN,IAAI,OAAO,GAAC;YACV,UAAU,EAAC,IAAI,CAAC,KAAK;YACrB,sBAAsB,EAAC,IAAI,CAAC,YAAY;SACzC,CAAC;QACF,uDAAS,CAAC;YACR,IAAI,EAAC,0BAA0B;YAC/B,iBAAiB,EAAC,KAAK;YACvB,IAAI,EAAC,MAAM;SACZ,CAAC;QACF,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,CAAC,IAAQ,EAAC,EAAE;YAC5D,IAAG,IAAI,CAAC,SAAS,CAAC,MAAM,IAAE,GAAG,EAAC;gBAC5B,uDAAS,CAAC,OAAO,IAAI,CAAC,KAAK,wBAAwB,EAAE,EAAE,EAAE,MAAM,CAAC;gBAChE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,YAAY,EAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aAC/C;iBAAI;gBACH,uDAAS,CAAC,OAAO,IAAI,CAAC,KAAK,sBAAsB,EAAE,EAAE,EAAE,SAAS,CAAC;gBACjE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,YAAY,EAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aAC/C;QACH,CAAC,EAAC,GAAG,GAAE;YACL,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC;QACF,cAAc;QACd,wDAAwD;QACxD,0BAA0B;QAC1B,8BAA8B;QAC9B,kCAAkC;QAClC,0BAA0B;QAC1B,4BAA4B;QAC5B,wBAAwB;QACxB,sDAAsD;QACtD,8BAA8B;QAE9B,kCAAkC;QAElC,MAAM;QACN,KAAK;IACP,CAAC;IAED,cAAc;IACd,WAAW;QACT,IAAI,OAAO,GAAC;YACV,UAAU,EAAC,IAAI,CAAC,KAAK;YACrB,sBAAsB,EAAC,IAAI,CAAC,YAAY;SACzC,CAAC;QACF,uDAAS,CAAC;YACR,IAAI,EAAC,4BAA4B;YACjC,iBAAiB,EAAC,KAAK;YACvB,IAAI,EAAC,MAAM;SACZ,CAAC;QACF,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,CAAC,IAAQ,EAAC,EAAE;YAC5D,IAAG,IAAI,CAAC,SAAS,CAAC,MAAM,IAAE,GAAG,EAAC;gBAC5B,uDAAS,CAAC,OAAO,IAAI,CAAC,KAAK,wBAAwB,EAAE,EAAE,EAAE,MAAM,CAAC;gBAChE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,YAAY,EAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aAC/C;iBAAI;aAEJ;QACH,CAAC,EAAC,GAAG,GAAE;YACL,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC;IACJ,CAAC;IAED,UAAU;IACV,IAAI,CAAC,KAAS;QACd,cAAc,CAAC,OAAO,CAAC,WAAW,EAAC,KAAK,CAAC,CAAC;QAC1C,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC;IAC3C,CAAC;IACD,WAAW;QACT,IAAI,CAAC,aAAa,GAAC,CAAC,IAAI,CAAC,aAAa,CAAC;IACzC,CAAC;IACD,MAAM;QACJ,uDAAS,CAAC;YACR,KAAK,EAAE,aAAa;YACpB,KAAK,EAAE,UAAU;YACjB,cAAc,EAAE,IAAI;YACpB,iBAAiB,EAAE,QAAQ;YAC3B,cAAc,EAAE,QAAQ;SACzB,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;YACjB,iDAAiD;YACjD,IAAI,MAAM,CAAC,WAAW,EAAE;gBACtB,IAAI,SAAS,GAAC;oBACZ,UAAU,EAAC,IAAI,CAAC,KAAK;oBACrB,sBAAsB,EAAC,IAAI,CAAC,YAAY;oBACxC,MAAM,EAAC,MAAM,CAAC,KAAK;iBACpB,CAAC;gBACF,uDAAS,CAAC;oBACR,IAAI,EAAC,0BAA0B;oBAC/B,iBAAiB,EAAC,KAAK;oBACvB,IAAI,EAAC,MAAM;iBACZ,CAAC;gBACF,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,CAAC,IAAQ,EAAC,EAAE;oBAC9D,uDAAS,CAAC,OAAO,IAAI,CAAC,GAAG,CAAC,EAAE,YAAY,EAAE,EAAE,EAAE,SAAS,CAAC;gBAC1D,CAAC,EAAC,GAAG,GAAE;oBACL,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;gBACnB,CAAC,CAAC;aACH;iBAAM,IAAI,MAAM,CAAC,QAAQ,EAAE;gBAC3B,iDAAiD;aACjD;QACH,CAAC,CAAC;IACJ,CAAC;IACD,wBAAwB;IACxB,WAAW;QACT,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;IACxB,CAAC;IACD,SAAS;QACP,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;IAC7B,CAAC;IACM,OAAO;QACb,OAAO,MAAM,CAAC,IAAI,CAAC,6CAA6C,GAAC,4CAA4C,GAAC,IAAI,CAAC,KAAK,EAAC,MAAM,EAC/H;8CAC4C,CAC3C,CAAC;IACJ,CAAC;IAEM,YAAY;QACjB,OAAO,MAAM,CAAC,IAAI,CAAC,2BAA2B,GAAC,8CAA8C,GAAC,IAAI,CAAC,KAAK,EAAE,MAAM,EAChH;8CAC4C,CAAC,CAAC;IAChD,CAAC;IACM,aAAa;QAClB,OAAO,MAAM,CAAC,IAAI,CAChB,6EAA6E;YAC7E,IAAI,CAAC,KAAK,EACV,QAAQ,CACT,CAAC;IACJ,CAAC;IAED,aAAa;IACb,aAAa;QACX,IAAI,CAAC,UAAU,GAAC,0CAA0C,GAAC,IAAI,CAAC,KAAK,CAAC;QACtE,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAC7C,IAAI,CAAC,SAAS,EAAE,CAAC;IACnB,CAAC;IACD,cAAc,CAAC,MAAa;QAC1B,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,EAAE,EAAE,WAAW,EAAE,EAAC,MAAM,EAAE,MAAM,EAAC,EAAC,CAAC,CAAC;IAChF,CAAC;;oFAjPY,kBAAkB;gHAAlB,kBAAkB;QCvB/B,yEAAiD;QAA5C,uIAAS,eAAW,IAAC;QACxB,yEAAyB;QACnB,qIAAS,iBAAa,IAAC;QAAyD,4DAAI;QAI1F,+GAqBM;QAEN,yEAA0B;QAGpB,8GAEM;QACV,4DAAM;QAEJ,gHAiGI;QACN,8GAKO;QACT,4DAAM;QAOP,yEAAuK;QAI/G,sEAAU;QAAA,4DAAK;QAChE,yEAA4F;QAC9F,4DAAM;QACN,2EAAwB;QAGf,sIAAS,aAAS,IAAC;QACpB,oEAAiC;QACnC,4DAAI;QACJ,yEAAqH;QAAlH,sIAAS,kBAAc,IAAC;QACzB,oEAA8B;QAChC,4DAAI;QACJ,yEAC6F;QAD1F,sIAAS,mBAAe,IAAC;QAE1B,oEAA0B;QAC5B,4DAAI;QACJ,yEAAsH;QAAlH,sIAAS,mBAAe,IAAC;QAC3B,oEAA+B;QACjC,4DAAI;QAchB,2EAA+G;QAKvG,sEAAmF;QACrF,4DAAM;;QAxLJ,0DAAiC;QAAjC,8JAAiC;QA0BoD,0DAAoB;QAApB,4GAAoB;QAKpG,0DAA0B;QAA1B,4FAA0B;QAkG7B,0DAAyB;QAAzB,2FAAyB;QAsDe,2DAAsB;QAAtB,wKAAsB;;;;;;;;;;;;;;;;;;;;;;;;AC5LJ;;;;;;;;;;ICcxD,2EAAgD;IAAC,uEAAW;IAAA,4DAAO;;;IACnE,2EAA+C;IAAC,kEAAM;IAAA,4DAAO;;;IAU3D,sEAAmD;IACjD,mEAA4B;IAC5B,oEAAG;IAAA,oEAAS;IAAA,4DAAI;;;IAElB,0EAAuC;IACrC,qEAAuC;IACzC,4DAAM;;;IADC,0DAAc;IAAd,2IAAc;;;IAgBrB,4EAEkD;IAAA,mFAAwB;IAAA,4DAAQ;;;IA2EpF,2EAAgD;IAAC,uEAAW;IAAA,4DAAO;;;IACnE,2EAA+C;IAAC,kEAAM;IAAA,4DAAO;;AD/GlE,MAAM,gBAAgB;IAe3B,YAAoB,EAAc,EACxB,YAA2B,EAC3B,WAAsC,EACtC,OAAc,EACd,KAAsB,EACtB,eAA6B,EAC7B,SAAmB;QANT,OAAE,GAAF,EAAE,CAAY;QACxB,iBAAY,GAAZ,YAAY,CAAe;QAC3B,gBAAW,GAAX,WAAW,CAA2B;QACtC,YAAO,GAAP,OAAO,CAAO;QACd,UAAK,GAAL,KAAK,CAAiB;QACtB,oBAAe,GAAf,eAAe,CAAc;QAC7B,cAAS,GAAT,SAAS,CAAU;QAjBtB,cAAS,GAAC,EAAE,CAAC;QAKpB,yBAAoB,GAAS,KAAK,CAAC;QACnC,oBAAe,GAAS,IAAI,CAAC;QAE7B,cAAS,GAAQ,CAAC,CAAC;QA8CX,eAAU,GAAG,CAAC,KAAY,EAAC,KAAS,EAAE,EAAE;YAC9C,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC;gBACtB,OAAO;YAEP,IAAI,YAAY,GAAS,KAAK,CAAC,CAAC,CAAC,CAAC;YAClC,MAAM,QAAQ,GAAG,IAAI,QAAQ,EAAE,CAAC;YAChC,QAAQ,CAAC,MAAM,CAAC,MAAM,EAAE,YAAY,EAAE,YAAY,CAAC,IAAI,CAAC,CAAC;YAC1D,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,KAAK,EAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,GAAE,EAAE;gBAC7D,IAAI,CAAC,SAAS,GAAC,KAAK,CAAC;gBACrB,IAAI,CAAC,SAAS,EAAE,CAAC;gBACjB,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,EAAE,EAAE,WAAW,EAAE,EAAC,MAAM,EAAE,QAAQ,EAAC,EAAC,CAAC,CAAC;YACzE,CAAC,EAAC,KAAK,GAAE;gBACP,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACrB,CAAC,CAAC;QACH,CAAC;QAlDC,IAAI,CAAC,eAAe,CAAC,uBAAuB,EAAE,CAAC;QAC/C,IAAI,IAAI,GAAE,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,CAAE,CAAC,CAAC;QACpD,IAAI,CAAC,MAAM,GAAC,IAAI,CAAC,EAAE,CAAC;QACrB,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC,cAAc,CAAC,OAAO,CAAC,WAAW,CAAE,CAAC,CAAC;IAChE,CAAC;IAEF,QAAQ;QACN,IAAI,CAAC,iBAAiB,EAAE,CAAC;QACzB,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IAC1C,CAAC;IACD,iBAAiB;QACf,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC/B,YAAY,EAAE,CAAC,EAAE,EAAC,+DAAmB,CAAC;YACtC,SAAS,EAAC,CAAC,EAAE,CAAC;YACd,OAAO,EAAC,CAAC,EAAE,CAAC;YACZ,QAAQ,EAAC,CAAC,EAAE,CAAC;YACb,SAAS,EAAC,CAAC,EAAE,CAAC;YACd,WAAW,EAAC,CAAC,KAAK,CAAC;YACnB,QAAQ,EAAC,CAAC,IAAI,CAAC;SAChB,CAAC;IACJ,CAAC;IAEA,kBAAkB,CAAC,KAAY;QAC7B,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,CAAC,IAAS,EAAE,EAAE;YAC5D,IAAI,CAAC,QAAQ,GAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACpB,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC;YAC/E,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;YAC7E,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;YACvE,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;YACzE,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;YACrE,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC;YACtD,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC;YAC9C,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC;QAC7C,CAAC,CAAC;IACJ,CAAC;IAkBF,UAAU,CAAC,KAAS;QAClB,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC;YACpB,OAAO;QAET,IAAI,QAAQ,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;QAC7B,IAAI,QAAQ,CAAC,KAAK,CAAC,UAAU,CAAC,IAAI,IAAI,EAAE;YACtC,IAAI,CAAC,OAAO,GAAG,4BAA4B,CAAC;YAC5C,OAAO;SACR;QAED,IAAI,MAAM,GAAG,IAAI,UAAU,EAAE,CAAC;QAC9B,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,MAAM,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;QAC/B,MAAM,CAAC,MAAM,GAAG,CAAC,MAAM,EAAE,EAAE;YACzB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;YAC5B,IAAI,CAAC,UAAU,GAAC,KAAK,CAAC;YACtB,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAEpB,CAAC;IACH,CAAC;IAGD,qBAAqB;QACnB,IAAI,CAAC,oBAAoB,GAAC,CAAC,IAAI,CAAC,oBAAoB,CAAC;QACrD,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;IAC/E,CAAC;IACD,gBAAgB;QACd,IAAI,CAAC,eAAe,GAAC,CAAC,IAAI,CAAC,eAAe,CAAC;QAC3C,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;IACvE,CAAC;IAED,SAAS;QACP,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,yBAAyB,EAAE;YAC5C,QAAQ,EAAE,YAAY;SACvB,CAAC,CAAC;IACL,CAAC;IACD,UAAU;QACR,IAAI,CAAC,SAAS,GAAC,IAAI,CAAC;QACpB,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;QAC1D,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,IAAI,CAAC,SAAS,EAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC,IAAQ,EAAC,EAAE;YAClF,IAAG,IAAI,CAAC,UAAU,IAAE,SAAS,EAAC;gBAC5B,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;gBACvB,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,EAAE,EAAE,WAAW,EAAE,EAAC,MAAM,EAAE,QAAQ,EAAC,EAAC,CAAC,CAAC;gBACxE,OAAO,IAAI,CAAC,SAAS,EAAE,CAAC;aACzB;YACD,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;QACnD,CAAC,CAAC;IACJ,CAAC;IAEA,wBAAwB;IACxB,WAAW;QACV,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;IACxB,CAAC;IACD,SAAS;QACP,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;IAC7B,CAAC;;gFAjIW,gBAAgB;8GAAhB,gBAAgB;;QCd7B,yEAAiD;QAA5C,qIAAS,eAAW,IAAC;QACxB,yEAAyB;QACnB,mIAAS,iBAAa,IAAC;QAAwD,4DAAI;QAGzF,yEAA0B;QAGjB,kFAAuB;QAAA,4DAAI;QAC9B,qEAAI;QAAA,sEAAW;QAAA,4DAAK;QAGtB,0EAAqB;QAGf,gHAAmE;QACnE,iHAA6D;QAC/D,4DAAO;QAKb,2EAA0B;QAChB,6JAAiB,uBAAuB,IAAC,qFAAwD,gBAAY,IAApE;QAC7C,2EAA0B;QAEtB,+GAGM;QACN,+GAEM;QACN,iFAAkH;QAAzD,uRAAU,mFAAsB,KAAC;QAA1F,4DAAkH;QAEpH,6EAAgC;QAAA,wDAAW;QAAA,4DAAQ;QAGrD,2EAA2B;QAE4B,6EACjD;QACF,4DAAQ;QACR,gFAEwH;QACxH;QAAA,4DAAW;QACX,mHAEkF;QACpF,4DAAM;QAEN,2EAA4B;QAC+B,oEAAQ;QAAA,4DAAQ;QACvE,2EAA0B;QACH,wDAAyB;QAAA,4DAAO;QAK3D,2EAAmB;QAEiB,0IAAU,2BAAuB,IAAC;QAAlE,4DAA8I;QAC9I,6EAAgD;QAC9C,oEAA8C;QAChD,4DAAQ;QACR,uEAAK;QAED,8EACF;QAAA,4DAAQ;QACR,yEAAoB;QAAA,0HAA8D;QAAA,4DAAI;QAK5F,2EAAmB;QAEiB,0IAAU,sBAAkB,IAAC;QAA7D,4DAAqK;QACrK,6EAAgD;QAC9C,oEAA8C;QAChD,4DAAQ;QACR,uEAAK;QAED,0EACF;QAAA,4DAAQ;QACR,yEAAoB;QAAA,oHAAwD;QAAA,4DAAI;QAoC5F,2EAAyB;QAGnB,gHAAmE;QACnE,iHAA6D;QAC/D,4DAAO;;QAjHyC,2DAA4C;QAA5C,6GAA4C;QAEnF,0DAAoB;QAApB,+EAAoB;QACpB,0DAAqB;QAArB,gFAAqB;QAUnB,0DAA0C;QAA1C,gHAA0C;QAI3C,0DAAY;QAAZ,4EAAY;QAKY,0DAAW;QAAX,4EAAW;QAaxC,0DAAuG;QAAvG,yKAAuG;QAO/E,0DAAyB;QAAzB,qFAAyB;QAOmB,0DAAgC;QAAhC,6FAAgC;QAerC,2DAA2B;QAA3B,wFAA2B;QA6C/C,0DAA4C;QAA5C,6GAA4C;QAEnF,0DAAoB;QAApB,+EAAoB;QACpB,0DAAqB;QAArB,gFAAqB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxHT;AAE2C;;;;;;;;;;;;ICgD1D,sEAA0C;IAAA,sEAA8C;IAAA,4DAAM;;;IAAtC,0DAAwB;IAAxB,4GAAwB;;;IAChF,sEAA0C;IAAA,sEAA8C;IAAA,4DAAM;;;IAAtC,0DAAwB;IAAxB,4GAAwB;;;IAE9E,2EAA2E;IAAA,uDAAuB;IAAA,4DAAO;;;IAA9B,0DAAuB;IAAvB,uFAAuB;;;IAClG,2EAA8E;IAAA,uDAAuB;IAAA,4DAAO;;;IAA9B,0DAAuB;IAAvB,uFAAuB;;;IAFvG,0EAA4C;IAAA,0EAC1C;IAAA,6HAAyG;IACzG,6HAA4G;IAC9G,4DAAM;;;IAFG,0DAA2B;IAA3B,4FAA2B;IAC3B,0DAA4B;IAA5B,6FAA4B;;;;IAnBjD,sEAAmD;IAE1C,yVAAS,2FAAsB,KAAC;IACjC,0EAAyC;IAGnC,qEAAoD;IACtD,4DAAM;IAEV,0EAAuB;IAEb,uDAAmC;;IAAA,4DAAO;IAChD,oEAAiC;IACnC,4DAAM;IACN,2EAAoB;IAClB,sHAA8F;IAC9F,sHAA8F;IAC9F,sHAGM;IACR,4DAAM;;;;IAfG,0DAA2B;IAA3B,oJAA2B;IAK5B,0DAAmC;IAAnC,6JAAmC;IAInC,0DAAkC;IAAlC,mGAAkC;IAClC,0DAAkC;IAAlC,mGAAkC;IAClC,0DAAc;IAAd,iFAAc;;;IAQhC,0EAAwC;IACtC,iEAAW;IAKb,4DAAM;;;IAKP,sEAA0B;IACzB,gEAAI;IACJ,0EAAqD;IACxB,qEAAU;IAAA,4DAAM;;AD7D1C,MAAM,gBAAgB;IAkB3B,YAAoB,YAA4B,EAC9C,IAAiB,EACT,eAAgC,EAChC,WAAsC,EACtC,cAA8B,EAC9B,eAA6B,EAC7B,OAAc,EACd,SAAmB;QAPT,iBAAY,GAAZ,YAAY,CAAgB;QAEtC,oBAAe,GAAf,eAAe,CAAiB;QAChC,gBAAW,GAAX,WAAW,CAA2B;QACtC,mBAAc,GAAd,cAAc,CAAgB;QAC9B,oBAAe,GAAf,eAAe,CAAc;QAC7B,YAAO,GAAP,OAAO,CAAO;QACd,cAAS,GAAT,SAAS,CAAU;QAvB7B,cAAS,GAAQ,EAAE,CAAC;QAEpB,gBAAW,GAAW,CAAC,CAAC;QACxB,iBAAY,GAAW,CAAC,CAAC;QAGzB,cAAS,GAAY,KAAK,CAAC;QAC3B,cAAS,GAAY,KAAK,CAAC;QAE3B,iBAAiB;QACjB,gBAAW,GAAY,IAAI,CAAC;QAC5B,eAAU,GAAY,IAAI,CAAC;QAE3B,yBAAyB;QACzB,YAAO,GAAY,IAAI,CAAC;QACxB,cAAS,GAAQ,MAAM,CAAC;QASpB,IAAI,CAAC,eAAe,CAAC,uBAAuB,EAAE,CAAC;QAC/C,IAAI,CAAC,OAAO,GAAG,oEAAc,CAAC;QAC9B,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QACrB,IAAI,CAAC,YAAY,EAAE,CAAC;IACrB,CAAC;IAEH,QAAQ;IACR,CAAC;IAED,oBAAoB;IACpB,mBAAmB,CAAC,WAAmB,EAAE,YAAoB,EAAC,SAAgB;QAC5E,IAAI,CAAC,YAAY,CAAC,kBAAkB,CAAC,IAAI,CAAC,MAAM,EAAE,WAAW,EAAE,YAAY,EAAC,SAAS,CAAC;aACrF,SAAS,CAAC;YACT,IAAI,EAAC,CAAC,GAAQ,EAAE,EAAE;gBAChB,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC,MAAM,CAAC;gBAC3B,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC;gBACjC,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC,UAAU,CAAC;gBACjC,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACzB,CAAC;SACF,CAAC;IAEJ,CAAC;IACD,eAAe;IACf,WAAW,CAAC,MAAc,EAAE,WAAmB,EAAE,YAAoB,EAAC,SAAgB;QACpF,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,MAAM,EAAE,WAAW,EAAE,YAAY,EAAC,SAAS,CAAC;aACxE,SAAS,CAAC;YACT,IAAI,EAAC,CAAC,GAAQ,EAAE,EAAE;gBAChB,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC,MAAM,CAAC;gBAC3B,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC;gBACjC,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC,UAAU,CAAC;gBACjC,IAAG,IAAI,CAAC,SAAS,CAAC,MAAM,KAAG,CAAC,EAAC;oBAC3B,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;iBAC1B;YACH,CAAC;SACF,CAAC;IACJ,CAAC;IAED,YAAY;QACV,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;QACxC,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,EAAE;YAExB,IAAI,CAAC,YAAY,CAAC,kBAAkB,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,YAAY,EAAC,IAAI,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,CAAC,GAAQ,EAAE,EAAE;gBAC3H,MAAM,OAAO,GAAG,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC;gBAChC,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;gBACvB,IAAI,OAAO,CAAC,MAAM,KAAK,CAAC,EAAE;oBACxB,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;iBAC1B;gBAED,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;gBAChD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;gBACvB,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC,UAAU,CAAC;YAEnC,CAAC,EAAC,GAAG,GAAE;gBACL,IAAI,CAAC,SAAS,GAAC,KAAK,CAAC;YACvB,CAAC,CAAC;SACH;aAAM;YACL,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC,SAAS,CAAC,CAAC,GAAQ,EAAE,EAAE;gBACvF,MAAM,OAAO,GAAG,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC;gBAChC,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;gBACvB,IAAI,OAAO,CAAC,MAAM,KAAK,CAAC,EAAE;oBACxB,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;iBAC1B;gBAED,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;gBAChD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;gBACvB,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC,UAAU,CAAC;YAEnC,CAAC,EAAC,GAAG,GAAE;gBACL,IAAI,CAAC,SAAS,GAAC,KAAK,CAAC;YACvB,CAAC,CAAC;SACH;IACH,CAAC;IACD,QAAQ;QACN,IAAI,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,WAAW,EAAE;YACvC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACtB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;YACxB,IAAI,CAAC,YAAY,EAAE,CAAC;SACrB;IAEH,CAAC;IAEC,YAAY;IACZ,QAAQ,CAAC,KAAY;QACnB,uDAAS,CAAC;YACR,IAAI,EAAE,+BAA+B,KAAK,EAAE;YAC5C,cAAc,EAAE,IAAI;YACpB,iBAAiB,EAAE,KAAK;YACxB,cAAc,EAAE,IAAI;SACrB,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;YACjB,iDAAiD;YACjD,IAAI,MAAM,CAAC,WAAW,EAAE;gBACtB,IAAI,OAAO,GAAC;oBACV,UAAU,EAAC,KAAK;oBAChB,sBAAsB,EAAC,IAAI,CAAC,MAAM;iBACnC,CAAC;gBACF,uDAAS,CAAC;oBACR,IAAI,EAAC,0BAA0B;oBAC/B,iBAAiB,EAAC,KAAK;oBACvB,IAAI,EAAC,MAAM;iBACZ,CAAC;gBACF,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,CAAC,IAAQ,EAAC,EAAE;oBAC5D,uDAAS,CAAC,OAAO,KAAK,sBAAsB,EAAE,EAAE,EAAE,SAAS,CAAC;gBAC9D,CAAC,EAAC,GAAG,GAAE;oBACL,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;gBACnB,CAAC,CAAC;aACH;iBAAM,IAAI,MAAM,CAAC,QAAQ,EAAE;aAE3B;QACH,CAAC,CAAC;IACJ,CAAC;IAED,YAAY;IACZ,MAAM,CAAC,KAAY;QACjB,uDAAS,CAAC;YACR,KAAK,EAAE,aAAa;YACpB,KAAK,EAAE,UAAU;YACjB,cAAc,EAAE,IAAI;YACpB,iBAAiB,EAAE,QAAQ;YAC3B,cAAc,EAAE,QAAQ;SACzB,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;YACjB,iDAAiD;YACjD,IAAI,MAAM,CAAC,WAAW,EAAE;gBACtB,IAAI,SAAS,GAAC;oBACZ,UAAU,EAAC,KAAK;oBAChB,sBAAsB,EAAC,IAAI,CAAC,MAAM;oBAClC,MAAM,EAAC,MAAM,CAAC,KAAK;iBACpB,CAAC;gBACF,uDAAS,CAAC;oBACR,IAAI,EAAC,0BAA0B;oBAC/B,iBAAiB,EAAC,KAAK;oBACvB,IAAI,EAAC,MAAM;iBACZ,CAAC;gBACF,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,CAAC,IAAQ,EAAC,EAAE;oBAC9D,uDAAS,CAAC,OAAO,KAAK,YAAY,EAAE,EAAE,EAAE,SAAS,CAAC;gBACpD,CAAC,EAAC,GAAG,GAAE;oBACL,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;gBACnB,CAAC,CAAC;aACH;iBAAM,IAAI,MAAM,CAAC,QAAQ,EAAE;aAE3B;QACH,CAAC,CAAC;IACJ,CAAC;IAEH,wBAAwB;IACxB,UAAU,CAAC,KAAU;QACnB,IAAI,CAAC,SAAS,GAAC,KAAK,CAAC;QACrB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACrB,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;QACrB,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;QACtB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACpB,uBAAuB;QACvB,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,EAAE;YACxB,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,YAAY,EAAC,IAAI,CAAC,SAAS,CAAC,CAAC;SAC9E;aAAM;YACL,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,YAAY,EAAC,IAAI,CAAC,SAAS,CAAC,CAAC;SACpF;IACH,CAAC;IACD,qBAAqB;IACrB,eAAe,CAAC,MAAU;QACxB,IAAI,CAAC,SAAS,GAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;QAC1C,IAAI,CAAC,WAAW,GAAC,CAAC,CAAC;QACnB,IAAI,CAAC,YAAY,GAAC,CAAC,CAAC;QACpB,IAAG,IAAI,CAAC,OAAO,IAAE,IAAI,EAAC;YACpB,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,YAAY,EAAC,IAAI,CAAC,SAAS,CAAC,CAAC;SAC9E;aAAI;YACH,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,EAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,YAAY,EAAC,IAAI,CAAC,SAAS,CAAC,CAAC;SACnF;IACH,CAAC;IAEA,wBAAwB;IACxB,WAAW;QACV,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;IACxB,CAAC;IAGD,sBAAsB;IACtB,YAAY;QACV,IAAI,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;YAChC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,CAAE,CAAC,CAAC;YACtD,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;YAC3B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACtB,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;gBACjD,MAAM,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC;gBACnC,IAAG,QAAQ,IAAE,QAAQ,EAAC;oBACtB,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;iBACtB;qBAAI;oBACJ,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,YAAY,EAAC,IAAI,CAAC,SAAS,CAAC,CAAC;iBAC7E;YACF,CAAC,CAAC,CAAC;SACJ;aAAM;YACL,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACvB,MAAM,CAAC,QAAQ,CAAC,IAAI,GAAG,QAAQ,CAAC;SACjC;IAEH,CAAC;IACD,SAAS;QACP,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;IAC7B,CAAC;IACD,aAAa,CAAC,KAAY;QACzB,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,EAAE,EAAE,WAAW,EAAE,EAAC,MAAM,EAAE,KAAK,EAAC,EAAC,CAAC,CAAC;IAC1E,CAAC;;gFApOY,gBAAgB;8GAAhB,gBAAgB;QClB7B,yEAA2B;QAAtB,qIAAS,eAAW,IAAC;QACxB,yEAAyB;QACnB,mIAAS,iBAAa,IAAC;QAAwD,4DAAI;QAI3F,yEAA2B;QASJ,wLAAsB,iFAAW,6BAAmB,KAAK,GAAC,IAAI,CAAC,IAAzC;QAA7B,4DAAyH;QACzH,6EAA2C;QAAuC,gEAAI;QAAA,4DAAO;QAM1G,2EAAqB;QAGZ,2FACF;QAAA,4DAAM;QACN,2EAAqB;QAEjB,oEAAgC;QAChC,8EAAiG;QAAzF,iJAAU,2BAAuB,IAAC;QACtC,8EAAqB;QAAA,gEAAI;QAAA,4DAAS;QAClC,8EAAwB;QAAA,mEAAO;QAAA,4DAAS;QACxC,8EAAuB;QAAA,kEAAM;QAAA,4DAAS;QACtC,8EAAwB;QAAA,kEAAM;QAAA,4DAAS;QAKrD,2EAAgG;QAA/C,4IAAY,cAAU,IAAC;QACxE,gHAwBM;QACN,+GAMM;QAER,4DAAM;QAGL,+GAKK;QACR,4DAAM;;QAnEiB,0DAAsB;QAAtB,iFAAsB;QAwBrB,2DAA4B;QAA5B,qFAA4B;QAC1B,0DAAc;QAAd,kFAAc;QAyB9B,0DAAe;QAAf,+EAAe;QAWhB,0DAAkB;QAAlB,kFAAkB;;;;;;;;;;;;;;;;;;;;;;;;;;ACzE0C;;;;;;;;;;;;ICYvD,sEAAuG;;;IACvG,2EAAgD;IAAC,sEAAU;IAAA,4DAAO;;;IAClE,2EAA+C;IAAE,gEAAI;IAAA,4DAAO;;;IAW5D,sEAAsB;IACpB,mEAA4B;IAC5B,oEAAG;IAAA,oEAAS;IAAA,4DAAI;;;IAElB,0EAAuC;IACrC,qEAAuC;IACzC,4DAAM;;;IADC,0DAAc;IAAd,2IAAc;;;IAgBrB,4EAEoD;IAAA,mFAAwB;IAAA,4DAAQ;;;;IAYpF,2EAAiD;IAC/C,uDAAiB;IAAA,wEAAgF;IAA7E,yVAAS,iGAA2B,KAAC;IAAwC,4DAAI;;;IAArG,0DAAiB;IAAjB,4FAAiB;;;IA+CrB,sEAAuG;;;IACvG,2EAAgD;IAAC,sEAAU;IAAA,4DAAO;;;IAClE,2EAA+C;IAAE,gEAAI;IAAA,4DAAO;;ADhGvE,IAAI,eAAe,GAAC,EAAE,CAAC;AAMjB,MAAM,gBAAgB;IAkB3B,YAAoB,EAAc,EACxB,WAAsC,EACtC,YAA2B,EAC3B,WAAsB,EACtB,KAAsB,EACtB,OAAc,EACd,SAAwB,EACxB,eAA6B,EAC7B,SAAmB;QART,OAAE,GAAF,EAAE,CAAY;QACxB,gBAAW,GAAX,WAAW,CAA2B;QACtC,iBAAY,GAAZ,YAAY,CAAe;QAC3B,gBAAW,GAAX,WAAW,CAAW;QACtB,UAAK,GAAL,KAAK,CAAiB;QACtB,YAAO,GAAP,OAAO,CAAO;QACd,cAAS,GAAT,SAAS,CAAe;QACxB,oBAAe,GAAf,eAAe,CAAc;QAC7B,cAAS,GAAT,SAAS,CAAU;QAvB7B,SAAI,GAAW,EAAE,CAAC;QAIX,cAAS,GAAC,EAAE,CAAC;QAKpB,yBAAoB,GAAS,KAAK,CAAC;QACnC,oBAAe,GAAS,IAAI,CAAC;QAC7B,gBAAW,GAAS,KAAK,CAAC;QAwJnB,eAAU,GAAG,CAAC,KAAY,EAAC,KAAS,EAAE,EAAE;YAC7C,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC;gBACtB,OAAO;YAEP,IAAI,YAAY,GAAS,KAAK,CAAC,CAAC,CAAC,CAAC;YAClC,MAAM,QAAQ,GAAG,IAAI,QAAQ,EAAE,CAAC;YAChC,QAAQ,CAAC,MAAM,CAAC,MAAM,EAAE,YAAY,EAAE,YAAY,CAAC,IAAI,CAAC,CAAC;YAC1D,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,KAAK,EAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,GAAE,EAAE;gBAC7D,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;gBAC/C,IAAI,CAAC,IAAI,GAAC,EAAE,CAAC;gBACb,IAAI,CAAC,UAAU,GAAC,EAAE,CAAC;gBACnB,IAAI,CAAC,SAAS,GAAC,KAAK,CAAC;gBACrB,IAAI,CAAC,MAAM,GAAC,IAAI,CAAC;gBACjB,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;gBACzB,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,EAAE,EAAE,WAAW,EAAE,EAAC,MAAM,EAAE,QAAQ,EAAC,EAAC,CAAC,CAAC;YACzE,CAAC,EAAC,KAAK,GAAE;gBACP,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACrB,CAAC,CAAC;QACH,CAAC;QA7JG,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC;QACrB,IAAI,CAAC,eAAe,CAAC,uBAAuB,EAAE,CAAC;QACjD,IAAG,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,EAAC;YAC9B,IAAI,IAAI,GAAE,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,CAAE,CAAC,CAAC;YACtD,IAAI,CAAC,MAAM,GAAC,IAAI,CAAC,EAAE,CAAC;SACnB;aAAI;YACH,MAAM,CAAC,QAAQ,CAAC,IAAI,GAAC,QAAQ,CAAC;SAC/B;IACF,CAAC;IAEF,QAAQ;QACN,IAAI,CAAC,iBAAiB,EAAE,CAAC;QACzB,IAAI,CAAC,WAAW,GAAC,KAAK,CAAC;IACzB,CAAC;IAED,aAAa;QACX,IAAG,CAAC,IAAI,CAAC,WAAW,EAAC;YACnB,IAAI,WAAW,GAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC,KAAK,CAAC;YACjE,IAAG,WAAW,IAAE,EAAE,EAAC;gBACjB,OAAO,KAAK,CAAC;aACd;;gBACD,OAAO,IAAI,CAAC;SACb;aAAI;YACH,OAAO,IAAI,CAAC;SACb;IACH,CAAC;IACD,iBAAiB;QACf,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC/B,MAAM,EAAC,EAAE;YACT,YAAY,EAAE,CAAC,EAAE,EAAC,+DAAmB,CAAC;YACtC,IAAI,EAAC,CAAC,EAAE,CAAC;YACT,SAAS,EAAC,CAAC,EAAE,CAAC;YACd,OAAO,EAAC,CAAC,EAAE,CAAC;YACZ,QAAQ,EAAC,CAAC,EAAE,CAAC;YACb,SAAS,EAAC,CAAC,EAAE,CAAC;YACd,WAAW,EAAC,CAAC,KAAK,CAAC;YACnB,QAAQ,EAAC,CAAC,IAAI,CAAC;SAChB,CAAC;IACJ,CAAC;IAED,qBAAqB;QACnB,IAAI,CAAC,oBAAoB,GAAC,CAAC,IAAI,CAAC,oBAAoB,CAAC;QACrD,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;IAC/E,CAAC;IACD,gBAAgB;QACd,IAAI,CAAC,eAAe,GAAC,CAAC,IAAI,CAAC,eAAe,CAAC;QAC3C,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;IACvE,CAAC;IAED,SAAS;QACP,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,0BAA0B,EAAE;YAC7C,QAAQ,EAAE,YAAY;SACvB,CAAC,CAAC;IACL,CAAC;IAED,cAAc;QACZ,IAAI,SAAS,CAAC,WAAW,EAAE;YACzB,SAAS,CAAC,WAAW,CAAC,kBAAkB,CAAC,CAAC,QAAa,EAAE,EAAE;gBACvD,IAAI,QAAQ,EAAE;oBACV,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC;oBACzC,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC;oBACxC,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,GAAG,EAAE;wBAC/B,IAAI,QAAQ,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;wBACxC,IAAI,MAAM,GAAG;4BACT,GAAG,EAAE,IAAI,CAAC,QAAQ;4BAClB,GAAG,EAAE,IAAI,CAAC,SAAS;yBACtB,CAAC;wBAEF,QAAQ,CAAC,OAAO,CAAC;4BACb,UAAU,EAAE,MAAM;yBACrB,EAAE,UAAS,OAAO,EAAE,MAAM;4BACzB,IAAI,MAAM,IAAI,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,EAAE,EAAE;gCAC3C,IAAI,OAAO,CAAC,CAAC,CAAC,EAAE;oCACd,eAAe,GAAE,OAAO,CAAC,CAAC,CAAC,CAAC,iBAAiB,CAAC;oCAC9C,MAAM,CAAC,QAAQ,CAAC,cAAc,CAAC,UAAU,CAAE,CAAC,SAAS,GAAC,eAAe,CAAC;iCACvE;6BACJ;iCACM;gCACC,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;6BAC5B;wBACL,CAAC,CAAC,CAAC;oBACP,CAAC,CAAC,CAAC;iBAGN;qBAAI;oBACH,IAAI,CAAC,SAAS,EAAE,CAAC;oBACjB,OAAO;iBACR;YACL,CAAC,CAAC;SACL;aAAI;YACH,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,wCAAwC,EAAE;gBACxD,QAAQ,EAAE,YAAY;aACvB,CAAC,CAAC;SACJ;IACD,CAAC;IACD,UAAU;QACR,IAAG,IAAI,CAAC,IAAI,CAAC,MAAM,IAAE,CAAC,EAAC;YACrB,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,kBAAkB,EAAE;gBACrC,QAAQ,EAAE,YAAY;aACvB,CAAC,CAAC;YACH,OAAO;SACR;QAES,IAAI,CAAC,SAAS,GAAC,IAAI,CAAC;QACpB,IAAI,CAAC,WAAW,GAAC,IAAI,CAAC;QACtB,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAC1D,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACtD,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC9D,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAChE,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;QAC7E,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;QACrE,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,eAAe,CAAC,CAAC;QAC/D,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;QAC1D,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC,IAAS,EAAE,EAAE;YAClE,IAAI,IAAI,CAAC,UAAU,IAAI,SAAS,EAAE;gBAChC,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC,SAAS,CAAC,GAAG,EAAE;gBACzE,CAAC,EAAE,KAAK,CAAC,EAAE;oBACT,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;gBACrB,CAAC,CAAC;gBACF,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;gBAC/C,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;gBACf,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;gBACrB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;gBACvB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;gBACnB,IAAI,CAAC,SAAS,EAAE,CAAC;gBACjB,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;gBACzB,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,EAAE,EAAE,WAAW,EAAE,EAAC,MAAM,EAAE,QAAQ,EAAC,EAAC,CAAC,CAAC;aACzE;iBAAM;gBACL,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;aACtD;QAEH,CAAC,EAAE,KAAK,CAAC,EAAE;YACT,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CAAC;IAGd,CAAC;IAsBD,UAAU;QACR,IAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,KAAK,IAAI,EAAE,EAAC;YAC/C,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,kBAAkB,EAAE;gBACrC,QAAQ,EAAE,YAAY;aACvB,CAAC,CAAC;YACH,OAAO;SACR;QACD,IAAI,CAAC,MAAM,GAAG;YACZ,OAAO,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,IAAI,EAAE;YACvD,WAAW,EAAE,CAAC;SACf,CAAC;QACF,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAC5B,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QAErB,iDAAiD;QACjD,IAAI,CAAC,SAAS,GAAG;YACf,EAAE,EAAC,CAAC;YACJ,OAAO,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,IAAI,EAAE;SACxD,CAAC;QACF,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QACjD,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,CAAC,IAAI,EAAC,EAAE;QAC1D,CAAC,EAAC,GAAG,GAAE;YACL,OAAO,CAAC,GAAG,CAAC,6BAA6B,CAAC,CAAC;QAC7C,CAAC,CAAC,CAAC;IACL,CAAC;IAED,aAAa,CAAC,IAAW;QACvB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,GAAG;YACxC,OAAO,GAAG,CAAC,OAAO,IAAI,IAAI,CAAC;QAC7B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,UAAU,CAAC,KAAS;QAClB,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC;YACpB,OAAO;QAET,IAAI,QAAQ,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;QAC7B,IAAI,QAAQ,CAAC,KAAK,CAAC,UAAU,CAAC,IAAI,IAAI,EAAE;YACtC,IAAI,CAAC,OAAO,GAAG,4BAA4B,CAAC;YAC5C,OAAO;SACR;QAED,IAAI,MAAM,GAAG,IAAI,UAAU,EAAE,CAAC;QAC9B,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,MAAM,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;QAC/B,MAAM,CAAC,MAAM,GAAG,CAAC,MAAM,EAAE,EAAE;YACzB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;YAC5B,IAAI,CAAC,UAAU,GAAC,KAAK,CAAC;YACtB,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QACpB,CAAC;IACH,CAAC;IACA,wBAAwB;IACxB,WAAW;QACV,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;IACxB,CAAC;IAED,SAAS;QACP,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;IAC7B,CAAC;;gFApPW,gBAAgB;8GAAhB,gBAAgB;sJAAhB,mBAAe;;;QCtB5B,yEAAiD;QAA5C,qIAAS,eAAW,IAAC;QACxB,yEAAyB;QACnB,mIAAS,iBAAa,IAAC;QAAwD,4DAAI;QAGzF,yEAA0B;QAGf,iFAAsB;QAAA,4DAAI;QAC7B,qEAAI;QAAA,sEAAW;QAAA,4DAAK;QAEtB,0EAAqB;QAGf,gHAAuG;QACvG,iHAAkE;QAClE,iHAA4D;QAE9D,4DAAO;QAKd,2EAA0B;QACjB,6JAAiB,uBAAuB,IAAC,qFAAuD,gBAAY,IAAnE;QAC7C,2EAA0B;QAEtB,+GAGM;QACN,+GAEM;QACN,iFAAkH;QAAzD,wRAAU,mFAAsB,KAAC;QAA1F,4DAAkH;QAElH,6EAAgC;QAAA,wDAAW;QAAA,4DAAQ;QAGvD,2EAA2B;QAGrB,4EAAe;QAAA,uEAAK;QAAA,6DAAC;QAAA,4DAAM;QAE7B,gFAEwH;QACxH;QAAA,4DAAW;QACX,mHAEoF;QACtF,4DAAM;QAEN,2EAAmB;QACiD,oEAAQ;QAAA,uEAAK;QAAA,6DAAC;QAAA,4DAAM;QACtF,2EAAqB;QACZ,oJAAe,gBAAY,IAAC;QAAnC,4DAA4I;QAC5I,8EAAwF;QAAlE,yIAAS,gBAAY,IAAC;QAA4C,+DAAG;QAAA,4DAAS;QAIxG,2EAA2B;QACzB,iHAEO;QACT,4DAAM;QAEN,2EAA4B;QAC6B,qEAAS;QAAA,4DAAQ;QACxE,2EAA0B;QACH,iFAAqB;QAAA,4DAAO;QAKrD,2EAAmB;QAEiB,0IAAU,2BAAuB,IAAC;QAAlE,4DAA8I;QAC9I,6EAAgD;QAC9C,oEAA8C;QAChD,4DAAQ;QACR,uEAAK;QAED,8EACF;QAAA,4DAAQ;QACR,yEAAoB;QAAA,0HAA8D;QAAA,4DAAI;QAK5F,2EAAmB;QAEiB,0IAAU,sBAAkB,IAAC;QAA7D,4DAAqK;QACrK,6EAAgD;QAC9C,oEAA8C;QAChD,4DAAQ;QACR,uEAAK;QAED,0EACF;QAAA,4DAAQ;QACR,yEAAoB;QAAA,oHAAwD;QAAA,4DAAI;QAO5F,2EAAyB;QAGnB,gHAAuG;QACvG,iHAAkE;QAClE,iHAA4D;QAE9D,4DAAO;QAaX,sEA8BE;QACR,4DAAM;;QAlJsD,2DAA4C;QAA5C,6GAA4C;QAEnF,0DAAoB;QAApB,+EAAoB;QACpB,0DAAoB;QAApB,+EAAoB;QACpB,0DAAqB;QAArB,gFAAqB;QAQ4B,0DAAyB;QAAzB,sFAAyB;QAG1E,0DAAa;QAAb,6EAAa;QAId,0DAAY;QAAZ,4EAAY;QAKc,0DAAW;QAAX,4EAAW;QAaxC,0DAAuG;QAAvG,yKAAuG;QAanF,2DAAO;QAAP,6EAAO;QAeuC,0DAAgC;QAAhC,6FAAgC;QAerC,2DAA2B;QAA3B,wFAA2B;QAgB/C,0DAA4C;QAA5C,6GAA4C;QAEnF,0DAAoB;QAApB,+EAAoB;QACpB,0DAAoB;QAApB,+EAAoB;QACpB,0DAAqB;QAArB,gFAAqB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IExG9B,wEAEiB;IACb,oEAAiD;IACjD,yEAAmB;IACG,uDAAoB;IAAA,4DAAM;IAGhD,kEAAkC;IACtC,4DAAK;;;;IARL,6IAA8B;IAErB,0DAA8B;IAA9B,gKAA8B;IAEb,0DAAoB;IAApB,oFAAoB;;;IANhD,wEAAmE;IACjE,yHASK;IACT,4DAAK;;;;IAVI,0DAA6B;IAA7B,qGAA6B;;;IAFtC,sEAAgC;IAC9B,oHAWG;IACL,4DAAM;;;IAZiB,0DAAW;IAAX,oFAAW;;;IAclC,0EAAgF;IACnD,mFAAwB;IAAA,4DAAM;;ADZ1D,MAAM,oBAAoB;IAI/B,YAAoB,oBAAyC,EAAW,cAA8B,EAAU,eAA6B,EAAU,eAAsB;QAAzJ,yBAAoB,GAApB,oBAAoB,CAAqB;QAAW,mBAAc,GAAd,cAAc,CAAgB;QAAU,oBAAe,GAAf,eAAe,CAAc;QAAU,oBAAe,GAAf,eAAe,CAAO;QAC3K,IAAI,CAAC,eAAe,CAAC,uBAAuB,EAAE,CAAC;QAC/C,IAAI,IAAI,GAAE,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,CAAE,CAAC,CAAC;QACpD,IAAI,CAAC,MAAM,GAAC,IAAI,CAAC,EAAE,CAAC;QACpB,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YACjD,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC;QAE/B,CAAC,CAAC,CAAC;IACN,CAAC;IACD,QAAQ;QACN,IAAI,CAAC,gBAAgB,EAAE,CAAC;IAC1B,CAAC;IAED,gBAAgB;QACd,IAAI,CAAC,oBAAoB,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,CAAC,IAAQ,EAAC,EAAE;YACvF,IAAI,CAAC,QAAQ,GAAC,IAAI,CAAC;YACnB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC7B,CAAC,CAAC;IACJ,CAAC;IAEH,cAAc,CAAC,MAAa;QAC1B,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,EAAE,EAAE,WAAW,EAAE,EAAC,MAAM,EAAE,MAAM,EAAC,EAAC,CAAC,CAAC;IAChF,CAAC;;wFA1BY,oBAAoB;kHAApB,oBAAoB;QCJ3B,gHAaM;QAEN,gHAEM;;QAjBA,0FAAwB;QAexB,0DAAwB;QAAxB,0FAAwB;;;;;;;;;;;;;;;;ACtB7B,MAAM,YAAY;CAOxB;;;;;;;;;;;;;;;ACAM,MAAM,eAAe;CAG3B;;;;;;;;;;;;;;;;;;;;;;;;;;ACToE;AAKtC;;;;;;;;;;;ICoBb,sEAAmG;;;IAqB3G,4EAEkD;IAAA,4EAAiB;IAAA,4DAAQ;;;IAC3E,4EAEkD;IAAA,8FAAmC;IAAA,4DAAQ;;;IAQ7F,4EAEkD;IAAA,gFAAqB;IAAA,4DAAQ;;;;IAmBrF,0EAAiD;IAC7C,uDAAiB;IAAA,wEAAgF;IAA7E,qVAAS,iGAA2B,KAAC;IAAwC,4DAAI;;;IAArG,0DAAiB;IAAjB,4FAAiB;;;IAqCf,sEAA4F;;;IAC5F,2EAAgD;IAAC,qEAAS;IAAA,4DAAO;;;IACjE,2EAA+C;IAAE,iEAAM;IAAA,4DAAO;;ADvGjE,MAAM,aAAa;IAqBxB,YAAoB,gBAAgC,EAC1C,eAA6B,EAC7B,WAAsB,EACtB,EAAc,EAAS,KAAsB,EAC7C,WAAsC,EACtC,OAAc,EACd,SAAmB;QANT,qBAAgB,GAAhB,gBAAgB,CAAgB;QAC1C,oBAAe,GAAf,eAAe,CAAc;QAC7B,gBAAW,GAAX,WAAW,CAAW;QACtB,OAAE,GAAF,EAAE,CAAY;QAAS,UAAK,GAAL,KAAK,CAAiB;QAC7C,gBAAW,GAAX,WAAW,CAA2B;QACtC,YAAO,GAAP,OAAO,CAAO;QACd,cAAS,GAAT,SAAS,CAAU;QAvB7B,SAAI,GAAQ,EAAE,CAAC;QAGR,cAAS,GAAC,EAAE,CAAC;QAKpB,cAAS,GAAS,KAAK,CAAC;QACxB,wBAAmB,GAAS,KAAK,CAAC;QAClC,sBAAiB,GAAS,KAAK,CAAC;QAc5B,IAAI,CAAC,eAAe,CAAC,uBAAuB,EAAE,CAAC;QACnD,IAAI,IAAI,GAAE,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,CAAE,CAAC,CAAC;QACpD,IAAI,CAAC,MAAM,GAAC,IAAI,CAAC,EAAE,CAAC;IACpB,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAEnC,CAAC;IACD,SAAS;QACP,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,8BAA8B,EAAE;YACjD,QAAQ,EAAE,YAAY;SACvB,CAAC,CAAC;IACL,CAAC;IAED,cAAc;QACZ,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC5B,QAAQ,EAAC,CAAC,EAAE,EAAC,+DAAmB,CAAC;YACjC,QAAQ,EAAE,CAAC,EAAE,CAAC;YACd,KAAK,EAAC,CAAC,EAAE,CAAC;YACV,aAAa,EAAE,CAAC,EAAE,CAAC;YACnB,IAAI,EAAE,CAAC,EAAE,EAAC,CAAC,+DAAmB,EAAC,gEAAoB,CAAC,EAAE,CAAC,CAAC,CAAC;YACzD,YAAY,EAAE,CAAC,EAAE,CAAC;YAClB,UAAU,EAAE,CAAC,EAAE,CAAC;YAChB,QAAQ,EAAE,CAAC,EAAE,CAAC;YACd,SAAS,EAAE,CAAC,EAAE,CAAC;YACf,WAAW,EAAE,CAAC,EAAE,CAAC;YACjB,OAAO,EAAE,CAAC,EAAE,CAAC;YACb,IAAI,EAAE,EAAE;YACR,UAAU,EAAC,CAAC,EAAE,CAAC;SAChB,CAAC;IACJ,CAAC;IAED,cAAc,CAAC,MAAc;QAC3B,IAAI,CAAC,gBAAgB,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,CAAC,IAAS,EAAE,EAAE;YACnE,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACrB,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;YACpE,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;YAC9D,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,eAAe,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC;YAC9E,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;YAC5D,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC;YAC5E,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;YAC1E,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;YAClE,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;YAC5D,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;YACpE,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;YACtE,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;YACxE,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;YACpE,IAAI,CAAC,QAAQ,GAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC;YACrC,IAAI,CAAC,aAAa,GAAC,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC;YAC/C,IAAI,CAAC,IAAI,GAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC;YAC7B,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;QACzD,CAAC,CAAC;IACJ,CAAC;IACD,oBAAoB;IACpB,eAAe,CAAC,KAAS;QACvB,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC;YACpB,OAAO;QAET,IAAI,QAAQ,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;QAC7B,IAAI,QAAQ,CAAC,KAAK,CAAC,UAAU,CAAC,IAAI,IAAI,EAAE;YACtC,IAAI,CAAC,OAAO,GAAG,4BAA4B,CAAC;YAC5C,OAAO;SACR;QAED,IAAI,MAAM,GAAG,IAAI,UAAU,EAAE,CAAC;QAC9B,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,MAAM,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;QAC/B,MAAM,CAAC,MAAM,GAAG,CAAC,MAAM,EAAE,EAAE;YACzB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;YAC5B,IAAI,CAAC,aAAa,GAAC,IAAI,CAAC,MAAM,CAAC;YAC/B,IAAI,CAAC,UAAU,GAAC,KAAK,CAAC;YACtB,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QACpB,CAAC;QAED,IAAI,YAAY,GAAS,KAAK,CAAC,CAAC,CAAC,CAAC;QAClC,MAAM,QAAQ,GAAG,IAAI,QAAQ,EAAE,CAAC;QAChC,QAAQ,CAAC,MAAM,CAAC,MAAM,EAAE,YAAY,EAAE,YAAY,CAAC,IAAI,CAAC,CAAC;QACzD,IAAI,CAAC,gBAAgB,CAAC,qBAAqB,CAAC,IAAI,CAAC,MAAM,EAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC,IAAI,EAAC,EAAE;YAClF,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QACpB,CAAC,CAAC;IACJ,CAAC;IACD,kBAAkB;IAClB,cAAc,CAAC,KAAS;QACtB,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC;YACpB,OAAO;QAEP,IAAI,CAAC,mBAAmB,GAAC,IAAI,CAAC;QAChC,IAAI,QAAQ,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;QAC7B,IAAI,QAAQ,CAAC,KAAK,CAAC,UAAU,CAAC,IAAI,IAAI,EAAE;YACtC,IAAI,CAAC,OAAO,GAAG,4BAA4B,CAAC;YAC5C,OAAO;SACR;QAED,IAAI,MAAM,GAAG,IAAI,UAAU,EAAE,CAAC;QAC9B,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,MAAM,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;QAC/B,MAAM,CAAC,MAAM,GAAG,CAAC,MAAM,EAAE,EAAE;YACzB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;YAC5B,IAAI,CAAC,QAAQ,GAAC,IAAI,CAAC,MAAM,CAAC;YAC1B,IAAI,CAAC,UAAU,GAAC,KAAK,CAAC;YACtB,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QACpB,CAAC;QAED,IAAI,YAAY,GAAS,KAAK,CAAC,CAAC,CAAC,CAAC;QAClC,MAAM,QAAQ,GAAG,IAAI,QAAQ,EAAE,CAAC;QAChC,QAAQ,CAAC,MAAM,CAAC,MAAM,EAAE,YAAY,EAAE,YAAY,CAAC,IAAI,CAAC,CAAC;QACzD,IAAI,CAAC,gBAAgB,CAAC,eAAe,CAAC,IAAI,CAAC,MAAM,EAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC,IAAI,EAAC,EAAE;YAC5E,IAAI,CAAC,mBAAmB,GAAC,KAAK,CAAC;QACjC,CAAC,CAAC;IACJ,CAAC;IAED,aAAa;QACX,IAAI,CAAC,SAAS,GAAC,IAAI,CAAC;QACpB,IAAI,CAAC,QAAQ,GAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC;QAClC,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC,IAAS,EAAE,EAAE;YACnF,IAAI,CAAC,SAAS,GAAC,KAAK,CAAC;YACrB,IAAI,CAAC,SAAS,GAAC,IAAI,CAAC;YACpB,IAAI,CAAC,SAAS,EAAE,CAAC;YACjB,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,EAAE,EAAE,WAAW,EAAE,EAAC,MAAM,EAAE,IAAI,CAAC,MAAM,EAAC,EAAC,CAAC,CAAC;QAC7E,CAAC,CAAC;IACJ,CAAC;IAED,UAAU;QACR,IAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,KAAK,IAAE,EAAE,EAAC;YAC9C,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,kBAAkB,EAAE;gBACrC,QAAQ,EAAE,YAAY;aACvB,CAAC,CAAC;YACL,OAAO;SACR;QACD,IAAI,CAAC,OAAO,GAAG;YACb,OAAO,EAAI,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,KAAK;YACpD,MAAM,EAAC,IAAI,CAAC,MAAM;SACpB,CAAC;QACF,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAC7B,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACnD,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QAErB,+BAA+B;QAC9B,iDAAiD;QACjD,IAAI,CAAC,SAAS,GAAG;YAChB,EAAE,EAAC,CAAC;YACJ,OAAO,EAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,KAAK,CAAC,IAAI,EAAE;SAC5D,CAAC;QACF,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,CAAC,IAAI,EAAC,EAAE;YACxD,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;QACpD,CAAC,EAAC,GAAG,GAAE;YACL,OAAO,CAAC,GAAG,CAAC,6BAA6B,CAAC,CAAC;QAC7C,CAAC,CAAC,CAAC;IACL,CAAC;IACD,aAAa,CAAC,IAAW;QACvB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,GAAG;YACxC,OAAO,GAAG,CAAC,OAAO,IAAI,IAAI,CAAC;QAC7B,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACrD,CAAC;IAED,eAAe;IACf,KAAK;QACH,uDAAS,CAAC;YACR,IAAI,EAAE,uBAAuB;YAC7B,cAAc,EAAE,IAAI;YACpB,iBAAiB,EAAE,KAAK;YACxB,cAAc,EAAE,IAAI;SACrB,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;YACjB,iDAAiD;YACjD,IAAI,MAAM,CAAC,WAAW,EAAE;gBACtB,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;aACvB;iBAAM,IAAI,MAAM,CAAC,QAAQ,EAAE;gBAC1B,uDAAS,CAAC,aAAa,EAAE,EAAE,EAAE,MAAM,CAAC;aACrC;QACH,CAAC,CAAC;IAEJ,CAAC;IAED,sBAAsB;IACtB,mBAAmB;QACjB,uDAAS,CAAC;YACR,IAAI,EAAE,kCAAkC;YACxC,cAAc,EAAE,IAAI;YACpB,iBAAiB,EAAE,KAAK;YACxB,cAAc,EAAE,IAAI;SACrB,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;YACjB,iDAAiD;YACjD,IAAI,MAAM,CAAC,WAAW,EAAE;gBACtB,IAAI,CAAC,gBAAgB,CAAC,eAAe,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,CAAC,IAAQ,EAAC,EAAE;oBACvE,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;gBACnC,CAAC,CAAC;aACH;iBAAM,IAAI,MAAM,CAAC,QAAQ,EAAE;aAC3B;QACH,CAAC,CAAC;IACJ,CAAC;IACD,wBAAwB;IACxB,WAAW;QACT,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;IACxB,CAAC;IAED,SAAS;QACP,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;IAC7B,CAAC;;0EApOW,aAAa;2GAAb,aAAa;;QClBzB,yEAAiD;QAA5C,kIAAS,eAAW,IAAC;QAEzB,yEAAyB;QACnB,gIAAS,iBAAa,IAAC;QAAwD,4DAAI;QAGzF,yEAA0B;QAQZ,sEAGM;QACN,iFAA4E;QAA9D,qRAAU,wFAA2B,KAAC;QAApD,4DAA4E;QAC5E,4EAA4B;QAC1B,oEAAkC;QACpC,4DAAO;QAER,yEAAO;QAGJ,8GAAmG;QACrG,4DAAM;QACN,iFAA4E;QAA9D,qRAAU,uFAA2B,KAAC;QAApD,4DAA4E;QAE5E,yEAAoD;QAC9C,iIAAS,yBAAqB,IAAC;QAA4B,4DAAI;QAQjF,4EAAmH;QAA7G,0JAAiB,uBAAuB,IAAC,kFAAmD,mBAAe,IAAlE;QAE/C,2EAAsB;QAGmC,wEAAY;QAAA,4DAAQ;QACvE,wEAC8E;QAC9E,gHAE2E;QAC3E,gHAE6F;QAC/F,4DAAM;QAEP,2EAAsB;QAE4C,4EAAgB;QAAA,4DAAQ;QACvF,wEAC+E;QAC/E,gHAE+E;QACjF,4DAAM;QAKZ,2EAAsB;QAGmC,wEAAY;QAAA,4DAAQ;QACvE,2EAA0B;QACE,iJAAe,gBAAY,IAAC;QAAtD,4DAAoL;QACpL,8EAA8F;QAAxE,sIAAS,gBAAY,IAAC;QAAkD,+DAAG;QAAA,4DAAS;QAMlH,2EAA0B;QACxB,4GAEM;QACR,4DAAM;QAGN,2EAAsB;QAGmC,4EAAgB;QAAA,4DAAQ;QAE3E,2EAIY;QACd,4DAAM;QAMV,2EAAsB;QAGmC,yEAAa;QAAA,4DAAQ;QACxE,wEACiF;QACnF,4DAAM;QAMV,8EAAgD;QAEpC,sIAAS,WAAO,IAAC;QAA6C,iEAAK;QAAA,4DAAS;QACpF,8EAAsG;QAClG,8GAA4F;QAC5F,8GAAiE;QACjE,8GAA8D;QAClE,4DAAS;;QA3GG,2DAAiD;QAAjD,uHAAiD;QAS9C,0DAA4C;QAA5C,kHAA4C;QAExC,0DAA8B;QAA9B,yFAA8B;QAaW,0DAAsB;QAAtB,mFAAsB;QAS7E,0DAAiF;QAAjF,mJAAiF;QAGjF,0DAAkF;QAAlF,oJAAkF;QAUlF,0DAAyF;QAAzF,2JAAyF;QAoB1E,2DAAO;QAAP,6EAAO;QAqCY,2DAAyC;QAAzC,0GAAyC;QACrE,0DAAoB;QAApB,+EAAoB;QACpB,0DAAoB;QAApB,+EAAoB;QACpB,0DAAqB;QAArB,gFAAqB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IE7F1B,6EAA0H;IAAA,+DAAI;IAAA,4DAAS;;;IAApF,6IAA2B;;;;IAGhF,6EAA+I;IAAA,+DAAI;IAAA,4DAAS;;IAAxG,6IAA+B;;;IASrF,0EAAuD;IACrD,uDACF;IAAA,4DAAM;;;IADJ,0DACF;IADE,2FACF;;AD9BD,MAAM,oBAAoB;IAK/B,YAAoB,aAA6B,EACtC,SAAmB,EACpB,WAAsC,EACtC,eAA6B,EAC7B,cAA8B,EAC9B,OAAuB;QALb,kBAAa,GAAb,aAAa,CAAgB;QACtC,cAAS,GAAT,SAAS,CAAU;QACpB,gBAAW,GAAX,WAAW,CAA2B;QACtC,oBAAe,GAAf,eAAe,CAAc;QAC7B,mBAAc,GAAd,cAAc,CAAgB;QAC9B,YAAO,GAAP,OAAO,CAAgB;QAC7B,IAAI,CAAC,eAAe,CAAC,uBAAuB,EAAE,CAAC;QACjD,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YACjD,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC;QAChC,CAAC,CAAC,CAAC;QACJ,IAAG,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,EAAC;YAC9B,IAAI,CAAC,UAAU,GAAE,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,CAAE,CAAC,CAAC;YAC3D,IAAI,CAAC,YAAY,GAAC,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC;SACtC;IACH,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACjC,CAAC;IACD,YAAY,CAAC,EAAU;QACrB,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,IAAS,EAAE,EAAE;YAC5D,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACnB,CAAC,CAAC;IACJ,CAAC;IACD,wBAAwB;IACxB,WAAW;QACT,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;IACxB,CAAC;IAED,SAAS;QACP,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;IAC7B,CAAC;;wFApCW,oBAAoB;kHAApB,oBAAoB;QCZjC,yEAAiD;QAA5C,yIAAS,eAAW,IAAC;QACxB,yEAAyB;QACnB,uIAAS,iBAAa,IAAC;QAAwD,4DAAI;QAEzF,yEAA0B;QAOhB,oEAGM;QAKR,4DAAM;QAGV,2EAA4B;QAEnB,wDAAc;QAAA,4DAAK;QACxB,uEAAK;QAAA,wDAAqB;QAAA,4DAAM;QAElC,2EAAsB;QAClB,yHAAuI;QAC3I,4DAAM;QACN,2EAAsB;QACpB,yHAA4J;QAC9J,4DAAM;QAKV,2EAA0B;QACN,gEAAI;QAAA,4DAAK;QAC3B,uEAAK;QACH,mHAEM;QACR,4DAAM;QAIR,2EAAuB;QACH,oEAAQ;QAAA,4DAAK;QAC/B,uEAAK;QACD,wDACJ;QAAA,4DAAM;QAIR,2EAAuB;QACH,iEAAK;QAAA,4DAAK;QAC5B,2EAAiB;QACkC,wDAAoB;QAAA,4DAAI;;QA9CnE,0DAAuD;QAAvD,sJAAuD;QAIvD,0DAAmD;QAAnD,kJAAmD;QAQlD,0DAAc;QAAd,wGAAc;QACd,0DAAqB;QAArB,+GAAqB;QAGD,0DAA0B;QAA1B,gGAA0B;QAG5B,0DAA0B;QAA1B,gGAA0B;QAS7B,0DAAa;QAAb,4GAAa;QAUjC,0DACJ;QADI,sHACJ;QAOuB,0DAA2B;QAA3B,uLAA2B;QAAC,0DAAoB;QAApB,8GAAoB;;;;;;;;;;;;;;;;;;;;;;;;AC/CtE,MAAM,iBAAiB;IAE5B,YAAoB,SAAmB,EAC7B,YAAmB,EAAU,WAAiB,EAC9C,WAAsC;QAF5B,cAAS,GAAT,SAAS,CAAU;QAC7B,iBAAY,GAAZ,YAAY,CAAO;QAAU,gBAAW,GAAX,WAAW,CAAM;QAC9C,gBAAW,GAAX,WAAW,CAA2B;IAAI,CAAC;IAErD,QAAQ;QACN,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,eAAe,CAAC,CAAC;QAC5C,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,EAAC,QAAQ,EAAC,UAAU,EAAC,OAAO,EAAC,cAAc,EAAC,CAAC;IAC1E,CAAC;IACF,wBAAwB;IACxB,WAAW;QACV,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;IACxB,CAAC;IACD,SAAS;QACP,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;IAC5B,CAAC;;kFAhBY,iBAAiB;+GAAjB,iBAAiB;QCX7B,yEAA2B;QAAtB,sIAAS,eAAW,IAAC;QAC3B,yEAA+C;QACzC,oIAAS,iBAAa,IAAC;QAAyD,4DAAI;QAG1F,uEAAM;QACJ,oEAAkH;QAClH,yEAAsB;QAId,qFAAyB;QAAA,iEAAI;QACvC,uFACQ;QAAA,4DAAI;QACZ,yEAA4C;QAAA,6EAAiB;QAAA,4DAAK;QAClE,qEAAqE;QACrE,wEAAM;QAAA,yFAA6B;QAAA,4DAAO;QAIxC,sEAAsH;QACxH,4DAAO;;;;;;;;;;;;;;;;;;;;;;;;;;;IEAD,wEAA2B;IACzB,0EAAiC;IAC5B,0EAAe;IAAA,4DAAI;IACtB,oEAAG;IAAA,iJAAsF;IAAA,4DAAI;IAC7F,mEAAoB;IACpB,oEAAG;IAAA,wGAA6C;IAAA,4DAAI;IACpD,oEAAG;IAAA,2GAA+C;IAAA,4DAAI;IACtD,yEAAgB;IAAA,2FAA+B;IAAA,4DAAI;IACnD,qEAAG;IAAmC,mEAAO;IAAA,4DAAI;IAAE,uFAA0B;IAAA,4DAAI;IAErF,qEAAe;;;IAGf,wEAA2B;IACzB,0EAAiC;IAC5B,kEAAO;IAAA,4DAAI;IAGlB,qEAAe;;;IAEf,wEAAoC;IAClC,0EAAiC;IAC5B,sEAAW;IAAA,4DAAI;IAEtB,qEAAe;;;IAEf,wEAA2B;IACzB,0EAAiC;IAC5B,2EAAgB;IAAA,4DAAI;IAE3B,qEAAe;;;IAEf,wEAA2B;IACzB,0EAAiC;IAC5B,sEAAW;IAAA,4DAAI;IAClB,wEAAgB;IAAA,qGAA0C;IAAA,4DAAI;IAC9D,0EAAc;IACZ,uEAC2E;IAC7E,4DAAM;IACN,0EAAkB;IACjB,0EAA2G;IAC5G,4DAAM;IACN,iEAAI;IACJ,8EAAiD;IAC/C,oEACF;IAAA,4DAAS;IACT,iEAAI;IAEN,4DAAM;IACR,qEAAe;;;IAwBjB,wEAA2B;IACzB,0EAAkC;IAC7B,0EAAe;IAAA,4DAAI;IACtB,oEAAG;IAAA,iJAAsF;IAAA,4DAAI;IAC7F,mEAAoB;IACpB,oEAAG;IAAA,wGAA6C;IAAA,4DAAI;IACpD,oEAAG;IAAA,2GAA+C;IAAA,4DAAI;IACtD,yEAAgB;IAAA,2FAA+B;IAAA,4DAAI;IACnD,qEAAG;IAAmC,mEAAO;IAAA,4DAAI;IAAE,uFAA0B;IAAA,4DAAI;IAErF,qEAAe;;;IAGf,wEAA2B;IACzB,0EAAkC;IAC7B,kEAAO;IAAA,4DAAI;IAGlB,qEAAe;;;IAEf,wEAAoC;IAClC,0EAAkC;IAC7B,sEAAW;IAAA,4DAAI;IAEtB,qEAAe;;;IAEf,wEAA2B;IACzB,0EAAkC;IAC7B,2EAAgB;IAAA,4DAAI;IAE3B,qEAAe;;;IAEf,wEAA2B;IACzB,0EAAkC;IAC7B,sEAAW;IAAA,4DAAI;IAClB,wEAAgB;IAAA,qGAA0C;IAAA,4DAAI;IAC9D,0EAAc;IACZ,uEAC2E;IAC7E,4DAAM;IACN,0EAAkB;IACjB,0EAA2G;IAC5G,4DAAM;IACN,iEAAI;IACJ,8EAAiD;IAC/C,oEACF;IAAA,4DAAS;IACT,iEAAI;IAEN,4DAAM;IACR,qEAAe;;;ADxIZ,MAAM,iBAAiB;IAM5B,YAAoB,SAAmB,EAC7B,YAAmB,EAAU,WAAiB,EAC9C,WAAsC;QAF5B,cAAS,GAAT,SAAS,CAAU;QAC7B,iBAAY,GAAZ,YAAY,CAAO;QAAU,gBAAW,GAAX,WAAW,CAAM;QAC9C,gBAAW,GAAX,WAAW,CAA2B;QAPlD,SAAI,GAAS,IAAI,CAAC;QAClB,SAAI,GAAS,KAAK,CAAC;QACnB,SAAI,GAAS,KAAK,CAAC;QACnB,SAAI,GAAS,KAAK,CAAC;QACnB,kBAAa,GAAS,KAAK,CAAC;IAG0B,CAAC;IACrD,QAAQ;QACN,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;QACxC,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,EAAC,QAAQ,EAAC,UAAU,EAAC,OAAO,EAAC,UAAU,EAAC,CAAC;IACtE,CAAC;IAED,EAAE;QACA,IAAI,CAAC,IAAI,GAAC,IAAI,CAAC;QACf,IAAI,CAAC,IAAI,GAAC,KAAK,CAAC;QAChB,IAAI,CAAC,IAAI,GAAC,KAAK,CAAC;QAChB,IAAI,CAAC,IAAI,GAAC,KAAK,CAAC;QAChB,IAAI,CAAC,aAAa,GAAC,KAAK,CAAC;IAC3B,CAAC;IACD,EAAE;QACA,IAAI,CAAC,IAAI,GAAC,KAAK,CAAC;QAChB,IAAI,CAAC,IAAI,GAAC,IAAI,CAAC;QACf,IAAI,CAAC,IAAI,GAAC,KAAK,CAAC;QAChB,IAAI,CAAC,IAAI,GAAC,KAAK,CAAC;QAChB,IAAI,CAAC,aAAa,GAAC,KAAK,CAAC;IAC3B,CAAC;IACD,EAAE;QACA,IAAI,CAAC,IAAI,GAAC,KAAK,CAAC;QAChB,IAAI,CAAC,IAAI,GAAC,KAAK,CAAC;QAChB,IAAI,CAAC,IAAI,GAAC,IAAI,CAAC;QACf,IAAI,CAAC,IAAI,GAAC,KAAK,CAAC;QAChB,IAAI,CAAC,aAAa,GAAC,KAAK,CAAC;IAC3B,CAAC;IACD,WAAW;QACT,IAAI,CAAC,IAAI,GAAC,KAAK,CAAC;QAChB,IAAI,CAAC,IAAI,GAAC,KAAK,CAAC;QAChB,IAAI,CAAC,IAAI,GAAC,KAAK,CAAC;QAChB,IAAI,CAAC,IAAI,GAAC,KAAK,CAAC;QAChB,IAAI,CAAC,aAAa,GAAC,IAAI,CAAC;IAC1B,CAAC;IACD,EAAE;QACA,IAAI,CAAC,IAAI,GAAC,KAAK,CAAC;QAChB,IAAI,CAAC,IAAI,GAAC,KAAK,CAAC;QAChB,IAAI,CAAC,IAAI,GAAC,KAAK,CAAC;QAChB,IAAI,CAAC,IAAI,GAAC,IAAI,CAAC;QACf,IAAI,CAAC,aAAa,GAAC,KAAK,CAAC;IAC3B,CAAC;IAED,WAAW,CAAC,CAAK;QACf,IAAG,CAAC,CAAC,MAAM,CAAC,KAAK,IAAE,CAAC,EAAC;YACnB,IAAI,CAAC,EAAE,EAAE,CAAC;SACX;QACD,IAAG,CAAC,CAAC,MAAM,CAAC,KAAK,IAAE,CAAC,EAAC;YACnB,IAAI,CAAC,EAAE,EAAE,CAAC;SACX;QACD,IAAG,CAAC,CAAC,MAAM,CAAC,KAAK,IAAE,CAAC,EAAC;YACnB,IAAI,CAAC,WAAW,EAAE,CAAC;SACpB;QACD,IAAG,CAAC,CAAC,MAAM,CAAC,KAAK,IAAE,CAAC,EAAC;YACnB,IAAI,CAAC,EAAE,EAAE,CAAC;SACX;QACD,IAAG,CAAC,CAAC,MAAM,CAAC,KAAK,IAAE,CAAC,EAAC;YACnB,IAAI,CAAC,EAAE,EAAE,CAAC;SACX;IACH,CAAC;IACF,wBAAwB;IACxB,WAAW;QACV,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;IACxB,CAAC;IAED,SAAS;QACP,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;IAC5B,CAAC;;kFA1EY,iBAAiB;+GAAjB,iBAAiB;QCR9B,yEAA2B;QAAtB,sIAAS,eAAW,IAAC;QAC1B,yEAA0C;QACpC,oIAAS,iBAAa,IAAC;QAA4D,4DAAI;QAC3F,wEAAe;QAAA,sEAAW;QAAA,4DAAK;QAGjC,uEAAM;QAM4D,qIAAS,QAAI,IAAC;QAAC,2EAAe;QAAA,4DAAI;QAC1F,wEAAsE;QAAf,qIAAS,QAAI,IAAC;QAAC,mEAAO;QAAA,4DAAI;QACjF,wEAAwF;QAAxB,qIAAS,iBAAa,IAAC;QAAC,uEAAW;QAAA,4DAAI;QACvG,wEAAsE;QAAf,qIAAS,QAAI,IAAC;QAAC,4EAAgB;QAAA,4DAAI;QAC1F,wEAAsE;QAAf,qIAAS,QAAI,IAAC;QAAC,sEAAU;QAAA,4DAAI;QAIxF,kIAUe;QAGf,iIAKe;QAEf,iIAIe;QAEf,iIAIe;QAEf,kIAkBe;QACjB,iEAAI;QACJ,4DAAM;QAIR,0EAAsC;QAKkB,kJAAU,uBAAmB,IAAC;QAClE,8EAAsE;QAAA,iFAAqB;QAAA,4DAAS;QACpG,8EAAuE;QAAA,yEAAa;QAAA,4DAAS;QAC7F,8EAA+E;QAAA,6EAAiB;QAAA,4DAAS;QACzG,8EAAsE;QAAA,kFAAsB;QAAA,4DAAS;QACrG,8EAAsE;QAAA,4EAAgB;QAAA,4DAAS;QAMrH,0EAAsC;QAElC,kIAUe;QAGf,iIAKe;QAEf,iIAIe;QAEf,iIAIe;QAEf,kIAkBe;QACjB,4DAAM;;QArIK,2DAAmD;QAAnD,mLAAmD;QACnD,0DAAmD;QAAnD,mLAAmD;QACnD,0DAA4D;QAA5D,4LAA4D;QAC5D,0DAAmD;QAAnD,mLAAmD;QACnD,0DAAmD;QAAnD,mLAAmD;QAI3C,0DAAU;QAAV,0EAAU;QAaV,0DAAU;QAAV,0EAAU;QAOV,0DAAmB;QAAnB,mFAAmB;QAMnB,0DAAU;QAAV,0EAAU;QAMV,0DAAU;QAAV,0EAAU;QA8BD,0DAAmD;QAAnD,mLAAmD;QACnD,0DAAmD;QAAnD,mLAAmD;QACnD,0DAA4D;QAA5D,4LAA4D;QAC5D,0DAAmD;QAAnD,mLAAmD;QACnD,0DAAmD;QAAnD,mLAAmD;QAQ9D,0DAAU;QAAV,0EAAU;QAaV,0DAAU;QAAV,0EAAU;QAOV,0DAAmB;QAAnB,mFAAmB;QAMnB,0DAAU;QAAV,0EAAU;QAMV,0DAAU;QAAV,0EAAU;;;;;;;;;;;;;;;;;;;AC9HkB;AACsB;;AAe9D,MAAM,YAAY;;wEAAZ,YAAY;yGAAZ,YAAY;8GANZ;QACT,8EAAkB;KAEnB,YALC,yDAAY;mIAQH,YAAY,cARrB,yDAAY;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPmE;AAG9C;AAC4C;AACjB;;;;;;;;;;;;ICiBpD,yEAAwE;IAAtC,uWAAS,iGAA2B,KAAC;IACnE,0EAAmB;IAAA,uDAAgB;IAAA,4DAAM;;;IAAtB,0DAAgB;IAAhB,iFAAgB;;;IAHzC,0EAAoD;IAElD,0HAEO;IACP,4DAAK;;;IAHgB,0DAAW;IAAX,oFAAW;;;IAKlC,2EAA0C;IACxC,kEAA+C;IACjD,4DAAO;;;;IACP,2EAAiE;IAA3D,ySAAS,+EAAa,KAAC;IAAqC,mEAC/B;IAAA,4DAAO;;;;IAO9C,wEAA8F;IAAzE,mSAAS,iGAAuB,KAAC;IACpD,qEAC+F;IACjG,4DAAI;;;IAFG,0DAAuB;IAAvB,6JAAuB;;;IAG9B,0EAAwE;IAElE,mEAAmC;IACvC,4DAAQ;;;IAEV,wEAA2D;IAAA,gEAAK;IAAA,4DAAI;;;;;;IA0BlE,sEAAuB;IACX,2SAAS,iGAAuB,KAAC;IAAC,mEAAkC;IAAA,qEAAU;IAAA,4DAAI;IAC5F,wEAAsC;IAAC,mEAAgC;IAAA,uEAAY;IAAA,4DAAI;IACvF,wEAAgD;IAAC,mEAA8B;IAAA,mEAAQ;IAAA,4DAAI;;IADxF,0DAA2B;IAA3B,6IAA2B;IACpB,0DAAqC;IAArC,6IAAqC;;;IAGjD,wEAA2C;IAAC,mEAA0B;IAAA,gEAAK;IAAA,4DAAI;;;;IAQ/E,wEAA+C;IAAnB,0SAAS,0EAAQ,KAAC;IAAC,iEAAM;IAAA,mEAAmC;IAAA,4DAAI;;;;;IAhBhG,0EAAuG;IAA9C,uSAAS,wEAAM,KAAC;IACvE,0EAAoB;IAClB,6HAIM;IACN,wEAAU;IAAA,mEAA0B;IAAA,oEAAS;IAAA,4DAAI;IACjD,wHAA+E;IACjF,4DAAM;IACN,uEAAoF;IACpF,0EAAkC;IACb,qEAAS;IAAA,oEAAmC;IAAA,4DAAI;IACnE,yEAAgD;IAAA,0EAAc;IAAA,oEAAmC;IAAA,4DAAI;IACrG,yEAAmB;IAAA,8EAAkB;IAAA,oEAAmC;IAAA,4DAAI;IAC5E,yEAAmB;IAAA,4EAAgB;IAAA,oEAAmC;IAAA,4DAAI;IAC1E,0HAA4F;IAC9F,4DAAM;;;IAfE,0DAAe;IAAf,mFAAe;IAMV,0DAAgB;IAAhB,oFAAgB;IAKjB,0DAAqC;IAArC,6IAAqC;IAGpC,0DAAe;IAAf,mFAAe;;;IAStB,yEAAuC;IACkB,sEAAW;IAAA,4DAAI;;IAA3C,0DAA2B;IAA3B,6IAA2B;;;;IAExD,yEAAuC;IACkB,uEAAY;IAAA,4DAAI;;IAA5C,0DAA2B;IAA3B,6IAA2B;;;IAExD,yEAAwC;IACG,gEAAK;IAAA,4DAAI;;;;IAKpD,yEAA+F;IAC7F,qEAE0B;IAC5B,4DAAK;;;IAJD,8JAAmC;IAChC,0DAAwB;IAAxB,4LAAwB;;;IAYrC,wEAAwE;IACtE,mEAA0B;IAC5B,4DAAI;;IAFwC,6IAA2B;;;IAGvE,wEAAmD;IAAA,gEAAK;IAAA,4DAAI;;;;IAG5D,wEAA4F;IAAvE,mSAAS,iGAAuB,KAAC;IACpD,qEAC+F;IACjG,4DAAI;;;IAFG,0DAAuB;IAAvB,8JAAuB;;;IAI9B,4EAAkE;IAChE,mEAAmC;IACrC,4DAAQ;;;;IACR,4EAA+G;IAAxG,2SAAS,4EAAU,KAAC;IAA3B,4DAA+G;;;;;IAMzG,sEAAuB;IACX,2SAAS,iGAAuB,KAAC;IAAC,mEAAkC;IAAA,qEAAU;IAAA,4DAAI;IAC5F,wEAAsC;IAAC,mEAAgC;IAAA,uEAAY;IAAA,4DAAI;IACvF,wEAAmC;IAAC,mEAAwC;IAAA,iEAAM;IAAA,4DAAI;;IADnF,0DAA2B;IAA3B,6IAA2B;IAC3B,0DAAwB;IAAxB,6IAAwB;;;IAG7B,wEAA2C;IAAC,mEAA0B;IAAA,gEAAK;IAAA,4DAAI;;;;IAQ/E,wEAA+C;IAAnB,0SAAS,0EAAQ,KAAC;IAAC,iEAAM;IAAA,mEAAmC;IAAA,4DAAI;;;;IAhBhG,0EAAmG;IAA1C,uSAAS,wEAAM,KAAC;IACvE,0EAAoB;IAClB,6HAIM;IACN,wEAAU;IAAA,mEAA0B;IAAA,oEAAS;IAAA,4DAAI;IACjD,wHAA+E;IACjF,4DAAM;IACN,uEAAoF;IACpF,0EAAkC;IACb,qEAAS;IAAA,oEAAmC;IAAA,4DAAI;IACnE,yEAAgD;IAAA,0EAAc;IAAA,oEAAmC;IAAA,4DAAI;IACrG,yEAAmB;IAAA,8EAAkB;IAAA,oEAAmC;IAAA,4DAAI;IAC5E,yEAAmB;IAAA,4EAAgB;IAAA,oEAAmC;IAAA,4DAAI;IAC1E,0HAA4F;IAC9F,4DAAM;;;IAfE,0DAAe;IAAf,mFAAe;IAMV,0DAAgB;IAAhB,oFAAgB;IAKjB,0DAAqC;IAArC,6IAAqC;IAGpC,0DAAe;IAAf,mFAAe;;;;;IA5JpC,0EAAwD;IAE/C,+RAAS,6EAAW,KAAC;IAA1B,4DAA+F;IAC/F,0EAAqG;IAAhG,+RAAS,6EAAW,KAAC;IAA1B,4DAAqG;IAErG,0EAAsB;IACpB,mEAAqC;IACrC,0EAAqB;IACkB,iFAAsB;IAAA,mEAAiC;IAAA,4DAAM;IAClG,4EAAuB;IAAA,+DAAG;IAAA,4DAAO;IAOvC,2EAAwD;IAG7B,kSAAS,wEAAM,KAAC,sPAAoC,iFAAe,KAAnD;IAArC,4DAC2F;IAC3F,uHAMM;IACN,yHAEO;IACP,yHAC0C;IAC5C,4DAAO;IAMT,mHAGI;IACJ,uHAIM;IACN,mHAAoE;IACpE,6EAAmG;IAA5F,kSAAS,4EAAU,KAAC;IAA3B,4DAAmG;IAuBrG,wHAkBM;IAGT,2EAAkF;IAGrE,+RAAS,wEAAM,KAAC;IAClB,qHAEK;IACL,qHAEK;IACL,qHAEK;IACL,0EAAqB;IACiD,gEAAI;IAAA,4DAAI;IAE9E,qHAIK;IACP,4DAAK;IAKX,2EAAsC;IAGpC,mHAEI;IACJ,mHAA4D;IAG5D,mHAGI;IAEJ,2HAEQ;IACR,2HAA+G;IAI7G,wHAkBM;IAGV,4DAAM;;;IA5I8B,2DAAoB;IAApB,uFAAoB;IAO3C,0DAAgB;IAAhB,mFAAgB;IAGQ,0DAAe;IAAf,kFAAe;IAQ9C,0DAAe;IAAf,kFAAe;IAIb,0DAAe;IAAf,kFAAe;IAKK,0DAAgB;IAAhB,mFAAgB;IAwBtC,0DAAiD;IAAjD,sHAAiD;IAyB1C,0DAAe;IAAf,kFAAe;IAGf,0DAAe;IAAf,kFAAe;IAGf,0DAAgB;IAAhB,mFAAgB;IAI4B,0DAAoB;IAApB,8IAAoB;IAE5B,0DAAe;IAAf,kFAAe;IAanC,0DAAe;IAAf,kFAAe;IAGxB,0DAAgB;IAAhB,mFAAgB;IAG9B,0DAAe;IAAf,kFAAe;IAKX,0DAAe;IAAf,kFAAe;IAGM,0DAAe;IAAf,kFAAe;IAIpC,0DAAiD;IAAjD,sHAAiD;;;IAkCrD,0EAAoD;IAClD,gEAIK;IACP,4DAAM;;;IACN,2EAA0C;IACxC,kEAA+C;IACjD,4DAAO;;;;IACP,2EAAiE;IAA3D,wSAAS,+EAAa,KAAC;IAAqC,mEAC/B;IAAA,4DAAO;;;;IAnBlD,0EAAuD;IAE/B,6DACtB;IAAA,0EAA4C;IAGjB,iSAAS,wEAAM,KAAC,qPAAoC,iFAAe,KAAnD;IAArC,4DAC2F;IAC3F,qHAMM;IACN,uHAEO;IACP,uHAC0C;IAC5C,4DAAO;;;IAZyB,0DAAoB;IAApB,uFAAoB;IAO3C,0DAAgB;IAAhB,mFAAgB;IAGQ,0DAAe;IAAf,kFAAe;;;IAoBtD,wEAA2E;IACzE,mEAA0B;IAC5B,4DAAI;;IAF2C,6IAA2B;;ADjM5E,IAAI,eAAe,GAAC,IAAI,CAAC;AAMlB,MAAM,kBAAkB;IAa7B,YAAoB,gBAA+B,EAAS,OAAc,EAChE,SAAwB,EACzB,WAAsC,EAAS,KAAiB;QAFrD,qBAAgB,GAAhB,gBAAgB,CAAe;QAAS,YAAO,GAAP,OAAO,CAAO;QAChE,cAAS,GAAT,SAAS,CAAe;QACzB,gBAAW,GAAX,WAAW,CAA2B;QAAS,UAAK,GAAL,KAAK,CAAY;QAZ3E,kBAAa,GAAQ,yFAAyF,CAAC;QAC/G,cAAS,GAAS,KAAK,CAAC;QACxB,mBAAc,GAAY,KAAK,CAAC;QAChC,cAAS,GAAY,KAAK,CAAC;QAG3B,kBAAa,GAAY,KAAK,CAAC;QAE/B,sBAAiB,GAAS,KAAK,CAAC;QACtB,iBAAY,GAAsB,IAAI,uDAAY,EAAE,CAAC;QAI3D,IAAG,YAAY,CAAC,OAAO,CAAC,MAAM,CAAE,EAAC;YAC/B,IAAI,CAAC,IAAI,GAAE,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,CAAE,CAAC,CAAC;YACrD,IAAI,CAAC,gBAAgB,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;iBACjD,SAAS,CAAC;gBACT,IAAI,EAAC,CAAC,IAAQ,EAAE,EAAE;oBAChB,IAAI,CAAC,aAAa,GAAC,IAAI,CAAC,SAAS,CAAC;gBACpC,CAAC;aACF,CAAC;YACF,IAAI,CAAC,SAAS,GAAC,IAAI,CAAC;SACrB;aAAI;YACH,IAAI,CAAC,SAAS,GAAC,KAAK,CAAC;SACtB;IACF,CAAC;IAEF,QAAQ;QACN,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,IAAG,CAAC,YAAY,CAAC,OAAO,CAAC,UAAU,CAAC,EAAC;YACnC,IAAI,CAAC,cAAc,EAAE,CAAC;SACvB;aAAI;YACH,IAAI,CAAC,QAAQ,GAAE,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,UAAU,CAAE,CAAC,CAAC;YAC7D,MAAM,CAAC,QAAQ,CAAC,cAAc,CAAC,cAAc,CAAE,CAAC,SAAS,GAAC,IAAI,CAAC,QAAQ,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;YACxG,MAAM,CAAC,QAAQ,CAAC,cAAc,CAAC,aAAa,CAAE,CAAC,SAAS,GAAE,IAAI,CAAC,QAAQ,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,SAAS,GAAE,IAAI,GAAE,IAAI,CAAC,QAAQ,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,SAAS,GAAE,IAAI,GAAE,IAAI,CAAC,QAAQ,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;SACnN;IACH,CAAC;IACD,mBAAmB;IACnB,cAAc;QACZ,IAAI,SAAS,CAAC,WAAW,EAAE;YACzB,SAAS,CAAC,WAAW,CAAC,kBAAkB,CAAC,CAAC,QAAa,EAAE,EAAE;gBACvD,IAAI,QAAQ,EAAE;oBACP,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,GAAG,EAAE;wBAC/B,IAAI,QAAQ,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;wBACxC,IAAI,MAAM,GAAG;4BACT,GAAG,EAAE,QAAQ,CAAC,MAAM,CAAC,QAAQ;4BAC7B,GAAG,EAAE,QAAQ,CAAC,MAAM,CAAC,SAAS;yBACjC,CAAC;wBAEF,QAAQ,CAAC,OAAO,CAAC;4BACb,UAAU,EAAE,MAAM;yBACrB,EAAE,UAAS,OAAO,EAAE,MAAM;4BACzB,IAAI,MAAM,IAAI,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,EAAE,EAAE;gCAC3C,IAAI,OAAO,CAAC,CAAC,CAAC,EAAE;oCACd,YAAY,CAAC,OAAO,CAAC,UAAU,EAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;oCAC3D,eAAe,GAAE,OAAO,CAAC,CAAC,CAAC,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,SAAS,GAAE,IAAI,GAAE,OAAO,CAAC,CAAC,CAAC,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,SAAS,GAAE,IAAI,GAAE,OAAO,CAAC,CAAC,CAAC,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;oCAChK,MAAM,CAAC,QAAQ,CAAC,cAAc,CAAC,cAAc,CAAE,CAAC,SAAS,GAAC,OAAO,CAAC,CAAC,CAAC,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;oCACrG,MAAM,CAAC,QAAQ,CAAC,cAAc,CAAC,aAAa,CAAE,CAAC,SAAS,GAAE,eAAe,CAAC;iCAC3E;6BACJ;iCACM;gCACC,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;6BAC5B;wBACL,CAAC,CAAC,CAAC;oBACP,CAAC,CAAC,CAAC;iBAGN;qBAAI;oBACH,MAAM,CAAC,QAAQ,CAAC,cAAc,CAAC,cAAc,CAAE,CAAC,SAAS,GAAC,YAAY,CAAC;oBACvE,MAAM,CAAC,QAAQ,CAAC,cAAc,CAAC,aAAa,CAAE,CAAC,SAAS,GAAE,EAAE,CAAC;iBAC9D;YACL,CAAC,CAAC;SACL;aAAI;SAEJ;IACD,CAAC;IAEA,sBAAsB;IACtB,aAAa,CAAC,UAAiB;QAC9B,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;QAC3B,QAAQ,CAAC,cAAc,CAAC,WAAW,CAAsB,CAAC,KAAK;YAC9D,UAAU,CAAC;QACX,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IACvC,CAAC;IACD,sBAAsB;IACtB,aAAa;QACX,IAAI,CAAC,SAAS,GACZ,QAAQ,CAAC,cAAc,CAAC,WAAW,CACpC,CAAC,KAAK,CAAC;QACR,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACvC,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;IAE9B,CAAC;IACD,WAAW;QACR,QAAQ,CAAC,cAAc,CAAC,WAAW,CAAsB,CAAC,KAAK,GAAG,EAAE,CAAC;QACtE,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;QAC5B,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;IAEzB,CAAC;IACD,cAAc;QACZ,+CAAS,CAAC,IAAI,CAAC,gBAAiB,CAAC,aAAa,EAAE,OAAO,CAAC;aACrD,IAAI,CACH,mDAAG,CAAC,CAAC,KAAU,EAAE,EAAE;YACjB,OAAO,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;QAC5B,CAAC,CAAC;QACF,qCAAqC;QACrC,sDAAM,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;QAEhC,0CAA0C;QAC1C,4DAAY,CAAC,CAAC,CAAC;QAEf,4CAA4C;QAC5C,oEAAoB,EAAE;QAEtB,4BAA4B;SAC7B;aACA,SAAS,CAAC,CAAC,IAAY,EAAE,EAAE;YAC1B,iBAAiB;YACjB,IAAI,IAAI,IAAI,EAAE,EAAE;gBACd,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;aAC7B;YACD,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,SAAS,CAChC;gBACE,IAAI,EACJ,CAAC,GAAO,EAAE,EAAE;oBACZ,IAAI,GAAG,CAAC,IAAI,CAAC,MAAM,IAAI,CAAC,EAAE;wBACxB,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;wBAC5B,OAAO;qBACR;oBACD,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;oBACf,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;oBAC3B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;gBACxB,CAAC;aAED;YACA,iBAAiB;YACjB,gCAAgC;YAChC,mCAAmC;YACnC,cAAc;YACd,MAAM;YACN,oBAAoB;YACpB,gCAAgC;YAChC,2BAA2B;YAC3B,KAAK;YACL,aAAa;YACb,EAAE;YACF,IAAI;aACL,CAAC;QACJ,CAAC,CAAC,CAAC;IACP,CAAC;IAED,aAAa,CAAC,IAAY;QACxB,IAAI,IAAI,KAAK,EAAE,EAAE;YACf,OAAO,wCAAE,CAAC,EAAE,CAAC,CAAC;SACf;QACD,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,0EAAmB,GAAG,oBAAoB,GAAG,IAAI,CAAC,CAAC;IAC3E,CAAC;IACC,4BAA4B;IAE5B,IAAI;QACF,IAAI,CAAC,WAAW,CAAC,aAAa,GAAC,KAAK,CAAC;IAExC,CAAC;IACD,QAAQ;QACP,IAAI,CAAC,WAAW,CAAC,aAAa,GAAC,CAAC,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC;IAChE,CAAC;IAEF,SAAS;QACP,MAAM,CAAC,QAAQ,CAAC,IAAI,GAAC,GAAG,CAAC;IAC3B,CAAC;IACD,cAAc,CAAC,MAAa;QAC1B,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,EAAE,EAAE,WAAW,EAAE,EAAC,MAAM,EAAE,MAAM,EAAC,EAAC,CAAC,CAAC;IACxE,CAAC;IACD,MAAM;QACJ,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,GAAE,EAAE;YACvD,YAAY,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;YAChC,QAAQ,CAAC,IAAI,GAAC,GAAG,CAAC;QACpB,CAAC,CAAC;IACJ,CAAC;IACD,GAAG;QACD,OAAO,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,EAAC,EAAE,CAAC;IACjD,CAAC;IACD,MAAM;QACJ,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;IAC5B,CAAC;IACD,YAAY;QACV,IAAI,CAAC,iBAAiB,GAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC;IACjD,CAAC;;oFA/LU,kBAAkB;gHAAlB,kBAAkB;;;;;;QClB/B,yEAAgE;QAC9D,gHAkKM;QAIN,+GAyBM;QACR,4DAAM;QAKN,sEAA8B;QAE1B,kEAA6C;QAC/C,4DAAI;QACJ,uEAA6C;QAAzB,qIAAS,kBAAc,IAAC;QAC1C,kEAA+C;QACjD,4DAAI;QACJ,0GAEI;QACJ,uEAAsD;QACpD,qEAAwJ;QAC1J,4DAAI;QACJ,wEAAkD;QAChD,oEAAwC;QAC1C,4DAAI;;QApNE,0DAAwB;QAAxB,wFAAwB;QAsKxB,0DAAuB;QAAvB,uFAAuB;QA+B1B,0DAAwB;QAAxB,8FAAwB;QACP,0DAAoB;QAApB,6IAAoB;QAMV,0DAAe;QAAf,+EAAe;QAGpB,0DAA2B;QAA3B,8IAA2B;QAG3B,0DAAwB;QAAxB,8IAAwB;;ADCnD,SAAS,IAAI,CAAC,IAAS,EAAE,IAAS,EAAE,KAAU,EAAE,IAAS;IACvD,MAAM,IAAI,KAAK,CAAC,2BAA2B,CAAC,CAAC;AAC/C,CAAC;;;;;;;;;;;;;;;;;AEjNM,MAAM,0BAA0B;IAGvC;QAFA,kBAAa,GAAS,KAAK,CAAC;QAC5B,oBAAe,GAAS,KAAK,CAAC;IACd,CAAC;IACjB,MAAM;QACJ,IAAI,CAAC,aAAa,GAAC,KAAK,CAAC;QACzB,IAAI,CAAC,eAAe,GAAC,IAAI,CAAC;IAC5B,CAAC;;oGAPY,0BAA0B;2HAA1B,0BAA0B,WAA1B,0BAA0B,mBAFzB,MAAM;;;;;;;;;;;;;;;;;;;;;;;;;;IEDlB,sEAAoC;IAG1B,oEAAoE;IACtE,4DAAM;IACN,yEAAuB;IACjB,uDAAoB;IAAA,4DAAK;IAC7B,yEAAuB;IAAA,uDAA2B;IAAA,4DAAM;IAE1D,kEAAiC;IACrC,4DAAM;;;IATD,0DAA2B;IAA3B,6IAA2B;IAEY,0DAA4B;IAA5B,kLAA4B;IAG9D,0DAAoB;IAApB,yIAAoB;IACD,0DAA2B;IAA3B,gJAA2B;;;IAK5D,sEAA0B;IACxB,gEAAI;IACJ,yEAAqD;IACxB,uDAAgB;IAAA,4DAAM;;;IAAtB,0DAAgB;IAAhB,oFAAgB;;ADL1C,MAAM,iBAAiB;IAY5B,YAAoB,aAAyB,EAAS,cAA8B;QAAhE,kBAAa,GAAb,aAAa,CAAY;QAAS,mBAAc,GAAd,cAAc,CAAgB;QAVpF,WAAM,GAAQ,CAAC,CAAC;QAChB,eAAU,GAAW,EAAE,CAAC;QAExB,gBAAW,GAAW,CAAC,CAAC;QACxB,iBAAY,GAAW,CAAC,CAAC;QAEzB,cAAS,GAAQ,EAAE,CAAC;QACpB,cAAS,GAAY,IAAI,CAAC;QAC1B,gBAAW,GAAY,IAAI,CAAC;QAC5B,iBAAY,GAAW,qCAAqC,CAAC;QAE3D,IAAG,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,EAAC;YAC9B,IAAI,CAAC,IAAI,GAAE,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,CAAE,CAAC,CAAC;YACrD,IAAI,CAAC,MAAM,GAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;SAC1B;IACH,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YACjD,MAAM,QAAQ,GAAG,MAAM,CAAC,WAAW,CAAC,CAAC;YACpC,IAAI,QAAQ,IAAE,SAAS,EAAE;gBAExB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,UAAU,EAAC,IAAI,CAAC,MAAM,CAAC,CAAC;aACpF;iBAAI;gBACH,IAAI,CAAC,UAAU,GAAC,QAAQ,CAAC;gBACzB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,UAAU,EAAC,IAAI,CAAC,MAAM,CAAC,CAAC;aACrF;QACJ,CAAC,CAAC,CAAC;IAEL,CAAC;IACD,YAAY,CAAC,WAAkB,EAAE,YAAmB,EAAC,UAAc,EAAC,MAAa;QAC/E,IAAI,CAAC,SAAS,GAAC,IAAI,CAAC;QACpB,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,WAAW,EAAE,YAAY,EAAE,UAAU,EAAE,MAAM,CAAC,CAAC,SAAS,CAAC,CAAC,GAAQ,EAAE,EAAE;YACnG,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC,MAAM,CAAC;YAC3B,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC,MAAM,CAAC;YAC5B,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC,UAAU,CAAC;YACjC,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACvB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QAC1B,CAAC,EACD,CAAC,GAAG,EAAE,EAAE;YACN,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACvB,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;YACpB,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;YACzB,IAAI,CAAC,YAAY,GAAG,uCAAuC,UAAU,4BAA4B,CAAC;QACpG,CAAC,CACA;IACH,CAAC;;kFAhDU,iBAAiB;+GAAjB,iBAAiB;QCX7B,yEAAuB;QACtB,8GAWM;QACN,6GAKM;QACP,4DAAM;;QAlBiB,0DAAY;QAAZ,kFAAY;QAY5B,0DAAkB;QAAlB,kFAAkB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACdO;AAiByC;;;;;;;;;;;;;;;;;;ICM1D,0EACuE;IADlE,qYAAS,qGAAgC,KAAC;IAA/C,4DACuE;;;IAApC,kOAAmC;;;IACtE,qEACsC;;;IAApC,iMAAmC;;;;IAGrC,yEAAkG;IAA9F,mYAAS,qGAAgC,KAAC;IAC5C,uDAAuB;IAAA,gEAAI;IAAmD,4DAAK;;;IAAnF,0DAAuB;IAAvB,yHAAuB;IAAmB,0DAA4B;IAA5B,gHAA4B;;;IACxE,yEAAqD;IAAA,oEAAS;IAAA,gEAAI;IAClE,4DAAK;;;IAD4E,0DAA4B;IAA5B,gHAA4B;;;;IAQ3G,wEACoC;IAAlC,kYAAS,gJAAuB,KAAC;IAAC,yEAAc;IAAA,4DAAI;;;;IACtD,uEAA0G;IAArC,kYAAS,mJAA0B,KAAC;IAAC,qEAAU;IAAA,4DAAI;;;;IACxH,wEACkC;IAAhC,kYAAS,8IAAqB,KAAC;IAAC,iEAAM;IAAA,4DAAI;;;IAgB9C,qEACgC;;;IAA9B,uLAA6B;;;;IA3CzC,0EAAqE;IAM3D,2HACuE;IACvE,2HACsC;IACxC,4DAAM;IACN,0EAA4B;IAC1B,yHACqF;IACrF,yHACK;IACP,4DAAM;IAER,2EAAkD;IAExC,sEAA+E;IAAA,4DAAO;IAC5F,2EAAmC;IACjC,yHACsD;IACtD,yHAAwH;IACxH,yHAC4C;IAC5C,yEAA8I;IAAnF,gWAAS,gOAA+C,KAAC;IAA0B,iEAAK;IAAA,4DAAI;IAK/J,yEAAmB;IACjB,wDACF;;IAAA,4DAAI;IACJ,2EAEa;IAFR,kWAAS,+FAA0B,KAAC;IAGvC,2EAAe;IAIX,6HACgC;IAgBlC,4DAAM;;;;IArD8C,0DAAkC;IAAlC,mGAAkC;IAE9E,0DAAkC;IAAlC,iIAAkC;IAIQ,0DAAmC;IAAnC,8HAAmC;IAE9E,0DAAiC;IAAjC,kGAAiC;IAQhC,0DAAgE;IAAhE,+OAAgE;IAEhE,0DAA+D;IAA/D,8OAA+D;IAC/D,0DAA0C;IAA1C,wLAA0C;IAQpD,0DACF;IADE,yRACF;IAQY,0DAA+B;IAA/B,0HAA+B;;;IAuB/C,0EAAwC;IACtC,iEAAW;IAKb,4DAAM;;;IAEN,sEAA0B;IACxB,gEAAI;IACJ,0EAAqD;IACxB,uDAAgB;IAAA,4DAAM;;;IAAtB,0DAAgB;IAAhB,oFAAgB;;;IA7EjD,0EAA+C;IAC7C,uHA+DM;IAEN,qHAMM;IAEN,qHAKM;IACR,4DAAM;;;IA/EkB,0DAAc;IAAd,qFAAc;IAiE9B,0DAAe;IAAf,kFAAe;IAQf,0DAAkB;IAAlB,qFAAkB;;;IAQ1B,sEAAsB;IACpB,0EAA6B;IAC/B,4DAAM;;AD5EH,MAAM,iBAAiB;IA2B5B,YACE,IAAiB,EACT,iBAAmC,EACnC,YAAmB,EAAU,WAAiB,EAC9C,WAAsC,EACtC,aAA0B,EAC1B,cAA8B,EAC9B,eAAiC,EACjC,YAA4B,EAC7B,eAA8B,EAC7B,KAAsB,EACtB,OAAc;QATd,sBAAiB,GAAjB,iBAAiB,CAAkB;QACnC,iBAAY,GAAZ,YAAY,CAAO;QAAU,gBAAW,GAAX,WAAW,CAAM;QAC9C,gBAAW,GAAX,WAAW,CAA2B;QACtC,kBAAa,GAAb,aAAa,CAAa;QAC1B,mBAAc,GAAd,cAAc,CAAgB;QAC9B,oBAAe,GAAf,eAAe,CAAkB;QACjC,iBAAY,GAAZ,YAAY,CAAgB;QAC7B,oBAAe,GAAf,eAAe,CAAe;QAC7B,UAAK,GAAL,KAAK,CAAiB;QACtB,YAAO,GAAP,OAAO,CAAO;QArCxB,oBAAe,GAAG,MAAM,CAAC,WAAW,CAAC;QAC9B,SAAI,GAAY,IAAI,CAAC;QAC5B,eAAU,GAAW,EAAE,CAAC;QAExB,gBAAW,GAAW,CAAC,CAAC;QACxB,iBAAY,GAAW,CAAC,CAAC;QAEzB,cAAS,GAAQ,EAAE,CAAC;QACpB,cAAS,GAAY,IAAI,CAAC;QAE1B,iBAAY,GAAW,qCAAqC,CAAC;QAE7D,WAAM,GAAW,CAAC,CAAC;QACnB,iBAAiB;QACjB,gBAAW,GAAY,IAAI,CAAC;QAC5B,eAAU,GAAY,IAAI,CAAC;QAC3B,cAAS,GAAY,KAAK,CAAC;QAG3B,eAAU,GAAY,KAAK,CAAC;QAC5B,eAAU,GAAW,CAAC,CAAC;QAIvB,yBAAyB;QACzB,YAAO,GAAY,IAAI,CAAC;QActB,IAAI,CAAC,OAAO,GAAG,oEAAc,CAAC;QAC9B,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QACpB,IAAG,YAAY,CAAC,OAAO,CAAC,MAAM,CAAE,EAAC;YAC/B,IAAI,CAAC,IAAI,GAAE,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,CAAE,CAAC,CAAC;YACrD,IAAI,CAAC,MAAM,GAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;YACzB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;SACvB;IAEH,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAC9C,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,EAAC,QAAQ,EAAC,UAAU,EAAC,OAAO,EAAC,cAAc,EAAC,CAAC;QACxE,IAAI,CAAC,eAAe,CAAC,uBAAuB,EAAE,CAAC;QAC/C,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YACjD,MAAM,QAAQ,GAAG,MAAM,CAAC,WAAW,CAAC,CAAC;YACpC,IAAI,QAAQ,IAAE,SAAS,EAAE;gBACxB,IAAI,CAAC,YAAY,CACf,IAAI,CAAC,WAAW,EAChB,IAAI,CAAC,YAAY,EACjB,IAAI,CAAC,UAAU,EACf,IAAI,CAAC,MAAM,CACZ,CAAC;aACF;iBAAI;gBACH,IAAI,CAAC,UAAU,GAAC,QAAQ,CAAC;gBAC1B,IAAI,CAAC,YAAY,CACf,IAAI,CAAC,WAAW,EAChB,IAAI,CAAC,YAAY,EACjB,QAAQ,EACR,IAAI,CAAC,MAAM,CACZ,CAAC;aACF;QACJ,CAAC,CAAC,CAAC;IAEL,CAAC;IAED,SAAS;IACT,MAAM;QACJ,YAAY,CAAC,KAAK,EAAE,CAAC;QACrB,QAAQ,CAAC,IAAI,GAAG,GAAG,CAAC;IACtB,CAAC;IACD,SAAS;QACP,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,cAAc,EAAE;YACjC,QAAQ,EAAE,YAAY;SACvB,CAAC,CAAC;IACL,CAAC;IAGD,YAAY,CAAC,WAAmB,EAAE,YAAoB,EAAE,UAAc,EAAE,MAAa;QACnF,WAAW,GAAC,CAAC,CAAC;QACd,IAAI,CAAC,aAAa;aACf,OAAO,CAAC,WAAW,EAAE,YAAY,EAAE,UAAU,EAAE,MAAM,CAAC;aACtD,SAAS,CAAC;YACT,IAAI,EAAC,CAAC,GAAoB,EAAE,EAAE;gBAC1B,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC,MAAM,CAAC;gBAC5B,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC,UAAU,CAAC;gBACjC,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;gBACvB,IAAI,CAAC,YAAY,GAAG,qCAAqC,CAAC;YAE5D,CAAC;SACJ,CAAC,CAAC;IACP,CAAC;IACD,YAAY;QACV,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;QACxC,IAAI,CAAC,aAAa;aACf,OAAO,CACN,IAAI,CAAC,WAAW,EAChB,IAAI,CAAC,YAAY,EACjB,IAAI,CAAC,UAAU,EACf,IAAI,CAAC,MAAM,CACZ;aACA,SAAS,CAAC,CAAC,GAAQ,EAAE,EAAE;YACtB,MAAM,OAAO,GAAG,GAAG,CAAC,MAAM,CAAC;YAC3B,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACvB,IAAI,OAAO,CAAC,MAAM,KAAK,CAAC,EAAE;gBACxB,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;aAC1B;YACD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;YAChD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YACvB,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC,UAAU,CAAC;QACnC,CAAC,CAAC,CAAC;IACP,CAAC;IACD,QAAQ;QACN,IAAI,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,WAAW,EAAE;YACvC,IAAI,CAAC,YAAY,GAAG,qCAAqC,CAAC;YAE1D,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;YACxB,IAAI,CAAC,YAAY,EAAE,CAAC;SACrB;IACH,CAAC;IAED,YAAY;IACZ,QAAQ,CAAC,KAAY;QACnB,IAAI,OAAO,GAAG;YACZ,UAAU,EAAE,KAAK;YACjB,sBAAsB,EAAE,IAAI,CAAC,MAAM;SACpC,CAAC;QACF,uDAAS,CAAC;YACR,IAAI,EAAE,0BAA0B;YAChC,iBAAiB,EAAE,KAAK;YACxB,IAAI,EAAE,MAAM;SACb,CAAC,CAAC;QACH,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,SAAS,CAC/C,CAAC,IAAS,EAAE,EAAE;YACZ,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,IAAI,GAAG,EAAE;gBAChC,uDAAS,CAAC,YAAY,KAAK,oBAAoB,EAAE,EAAE,EAAE,MAAM,CAAC,CAAC;aAC9D;iBAAM;gBACL,uDAAS,CAAC,OAAO,KAAK,sBAAsB,EAAE,EAAE,EAAE,SAAS,CAAC,CAAC;gBAC7D,IAAI,CAAC,YAAY,CACf,IAAI,CAAC,WAAW,EAChB,IAAI,CAAC,YAAY,EACjB,IAAI,CAAC,UAAU,EACf,IAAI,CAAC,MAAM,CACZ,CAAC;aACH;QACH,CAAC,EACD,CAAC,GAAG,EAAE,EAAE;YACN,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CACF,CAAC;IACJ,CAAC;IACD,cAAc;IACd,WAAW,CAAC,KAAY;QACtB,IAAI,OAAO,GAAG;YACZ,UAAU,EAAE,KAAK;YACjB,sBAAsB,EAAE,IAAI,CAAC,MAAM;SACpC,CAAC;QACF,uDAAS,CAAC;YACR,IAAI,EAAE,4BAA4B;YAClC,iBAAiB,EAAE,KAAK;YACxB,IAAI,EAAE,MAAM;SACb,CAAC,CAAC;QACH,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,SAAS,CAC/C,CAAC,IAAS,EAAE,EAAE;YACZ,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,IAAI,GAAG,EAAE;gBAChC,uDAAS,CAAC,OAAO,KAAK,wBAAwB,EAAE,EAAE,EAAE,SAAS,CAAC,CAAC;gBAC/D,IAAI,CAAC,YAAY,CACf,IAAI,CAAC,WAAW,EAChB,IAAI,CAAC,YAAY,EACjB,IAAI,CAAC,UAAU,EACf,IAAI,CAAC,MAAM,CACZ,CAAC;aACH;iBAAM;aACN;QACH,CAAC,EACD,CAAC,GAAG,EAAE,EAAE;YACN,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CACF,CAAC;IACJ,CAAC;IAED,MAAM,CAAC,KAAY;QACjB,uDACO,CAAC;YACJ,KAAK,EAAE,aAAa;YACpB,KAAK,EAAE,UAAU;YACjB,cAAc,EAAE,IAAI;YACpB,iBAAiB,EAAE,QAAQ;YAC3B,cAAc,EAAE,QAAQ;SACzB,CAAC;aACD,IAAI,CAAC,CAAC,MAAU,EAAE,EAAE;YACnB,iDAAiD;YACjD,IAAI,MAAM,CAAC,WAAW,EAAE;gBACtB,IAAI,SAAS,GAAG;oBACd,UAAU,EAAE,KAAK;oBACjB,sBAAsB,EAAE,IAAI,CAAC,MAAM;oBACnC,MAAM,EAAE,MAAM,CAAC,KAAK;iBACrB,CAAC;gBACF,uDAAS,CAAC;oBACR,IAAI,EAAE,0BAA0B;oBAChC,iBAAiB,EAAE,KAAK;oBACxB,IAAI,EAAE,MAAM;iBACb,CAAC,CAAC;gBACH,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,SAAS,CACjD,CAAC,IAAS,EAAE,EAAE;oBACZ,uDAAS,CAAC,OAAO,KAAK,YAAY,EAAE,EAAE,EAAE,SAAS,CAAC,CAAC;gBACrD,CAAC,EACD,CAAC,GAAG,EAAE,EAAE;oBACN,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;gBACnB,CAAC,CACF,CAAC;aACH;iBAAM,IAAI,MAAM,CAAC,QAAQ,EAAE;gBAC1B,uDAAS,CAAC,uBAAuB,EAAE,EAAE,EAAE,MAAM,CAAC,CAAC;aAChD;QACH,CAAC,CAAC,CAAC;IACP,CAAC;IAED,4BAA4B;IAC5B,SAAS;QACP,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;IAC7B,CAAC;IAEA,cAAc;IACd,QAAQ,CAAC,KAAY,EAAC,MAAa;QACjC,IAAI,CAAC,WAAW,GAAC,MAAM,CAAC;QACxB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;IACxB,CAAC;IACI,OAAO,CAAC,KAAY;QACzB,OAAO,MAAM,CAAC,IAAI,CAChB,6CAA6C;YAC3C,6CAA6C;YAC7C,KAAK,EAAC,MAAM,EAAC;8CACyB,CACzC,CAAC;IACJ,CAAC;IAEM,YAAY,CAAC,KAAY;QAC9B,OAAO,MAAM,CAAC,IAAI,CAChB,2BAA2B;YACzB,+CAA+C;YAC/C,KAAK,EACN,MAAM,EAAC;6CAC+B,CACxC,CAAC;IACJ,CAAC;IACM,aAAa,CAAC,KAAY;QAC/B,OAAO,MAAM,CAAC,IAAI,CAChB,8EAA8E;YAC5E,KAAK,EACP,QAAQ,CACT,CAAC;IACJ,CAAC;IAED,aAAa;IACb,aAAa,CAAC,KAAY;QACxB,IAAI,CAAC,UAAU,GAAG,2CAA2C,GAAC,KAAK,CAAC;QACpE,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAC7C,IAAI,CAAC,SAAS,EAAE,CAAC;IACnB,CAAC;IACD,wBAAwB;IACxB,UAAU,CAAC,KAAU;QACnB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;IACvB,CAAC;IACD,SAAS;QACP,MAAM,CAAC,QAAQ,CAAC,IAAI,GAAG,GAAG,CAAC;IAC7B,CAAC;IACD,aAAa,CAAC,KAAS;QACrB,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,KAAK,EAAC,SAAS,CAAC,CAAC;QAC9C,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,EAAE,EAAE,WAAW,EAAE,EAAC,MAAM,EAAE,KAAK,EAAC,EAAC,CAAC,CAAC;IACzE,CAAC;IAED,cAAc,CAAC,MAAa;QAC1B,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,EAAE,EAAE,WAAW,EAAE,EAAC,MAAM,EAAE,MAAM,EAAC,EAAC,CAAC,CAAC;IACxE,CAAC;;kFA3RU,iBAAiB;+GAAjB,iBAAiB;QCvB9B,yEAA2B;QAAtB,sIAAS,eAAW,IAAC;QAExB,yEAA+B;QAIf,yLAAsB,kFAAW,6BAAmB,KAAK,GAAC,IAAI,CAAC,IAAzC;QAA7B,4DAAyH;QACzH,2EAA0C;QAAuC,gEAAK;QAAA,4DAAO;QAOtG,yEAAqG;QAApD,4IAAY,cAAU,IAAC;QACtE,+GAgFM;QAEN,gHAEM;QACN,iEAAI;QAIN,4DAAM;QAIR,2EAAuK;QAI/G,sEAAU;QAAA,4DAAK;QAChE,yEAA4F;QAC9F,4DAAM;QACN,2EAAwB;QAGf,qIAAS,2BAAmB,IAAC;QAC9B,oEAAiC;QACnC,4DAAI;QACJ,yEAA+H;QAA5H,qIAAS,gCAAwB,IAAC;QACnC,oEAA8B;QAChC,4DAAI;QACJ,yEAAmI;QAAhI,qIAAS,iCAAyB,IAAC;QACpC,oEAA0B;QAC5B,4DAAI;QAEJ,yEAA+H;QAA5H,qIAAS,iCAAyB,IAAC;QACpC,oEAA+B;QACjC,4DAAI;;QA5HG,0DAAsB;QAAtB,iFAAsB;QAQlB,0DAA4B;QAA5B,qFAA4B;QACxC,0DAAa;QAAb,6EAAa;QAkFb,0DAAc;QAAd,8EAAc;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjG+B;AACO;AACY;AACN;AACM;AACb;AACN;AACN;AACyB;AACP;AACA;AACA;AACE;AACc;AACR;AACA;AACJ;;;AACvE,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,OAAO;QACb,SAAS,EAAC,uEAAc;QACxB,WAAW,EAAE,CAAC,gEAAa,CAAC;KAC7B;IACD;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAC,iFAAiB;KAC5B;IAED;QACE,IAAI,EAAE,SAAS;QACf,SAAS,EAAC,6FAAoB;KAC/B;IACD;QACE,IAAI,EAAC,aAAa;QAClB,SAAS,EAAC,+EAAa;QACvB,WAAW,EAAE,CAAC,0DAAU,CAAC;KAC1B;IACD;QACE,IAAI,EAAE,YAAY;QAClB,SAAS,EAAC,mFAAkB;KAC7B;IACD;QACE,IAAI,EAAE,SAAS;QACf,SAAS,EAAC,6EAAgB;QAC1B,WAAW,EAAE,CAAC,0DAAU,CAAC;QACzB,aAAa,EAAE,CAAC,sEAAmB,CAAC;KACrC;IACD;QACE,IAAI,EAAE,SAAS;QACf,SAAS,EAAC,4EAAgB;QAC1B,WAAW,EAAE,CAAC,0DAAU,CAAC;KAC1B;IACD;QACE,IAAI,EAAC,SAAS;QACd,SAAS,EAAC,4EAAgB;QAC1B,WAAW,EAAE,CAAC,0DAAU,CAAC;KAC1B;IACD;QACE,IAAI,EAAC,MAAM;QACX,SAAS,EAAC,6EAAc;QACxB,WAAW,EAAE,CAAC,0DAAU,CAAC;KAC1B;IACD;QACE,IAAI,EAAC,SAAS;QACd,SAAS,EAAC,mFAAgB;QAC1B,WAAW,EAAE,CAAC,0DAAU,CAAC;KAC1B;IACD;QACE,IAAI,EAAC,YAAY;QACjB,SAAS,EAAC,mFAAgB;QAC1B,WAAW,EAAE,CAAC,0DAAU,CAAC;KAC1B;IACD;QACE,IAAI,EAAE,mBAAmB;QACzB,SAAS,EAAC,qFAAiB;KAC5B;IACD;QACE,IAAI,EAAE,mBAAmB;QACzB,SAAS,EAAC,qFAAiB;KAC5B;CACF,CAAC;AAMK,MAAM,gBAAgB;;gFAAhB,gBAAgB;8GAAhB,gBAAgB;kHAHhB,kEAAoB,CAAC,MAAM,EAAC,EAAE,iBAAiB,EAAE,iBAAiB,EAAE,CAAC,EACrE,0DAAY;oIAEZ,gBAAgB,qFAFhB,0DAAY;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IEpFzB,mFAA0F;IAA3E,+TAAgB,+EAAc,KAAC;IAA4C,4DAAgB;;ADOnG,MAAM,YAAY;IAGvB,YAAoB,OAAe,EAAU,cAA8B,EAAU,UAA6B,EAAQ,eAA6B;QAAnI,YAAO,GAAP,OAAO,CAAQ;QAAU,mBAAc,GAAd,cAAc,CAAgB;QAAU,eAAU,GAAV,UAAU,CAAmB;QAAQ,oBAAe,GAAf,eAAe,CAAc;QADvJ,aAAQ,GAAS,KAAK,CAAC;IAGvB,CAAC;IAED,QAAQ;QAER,IAAI,CAAC,KAAK,GAAG,YAAY,CAAC,OAAO,CAAC,MAAM,CAAE,CAAC;QAC3C,IAAI,CAAC,OAAO,EAAE,CAAC;IACf,CAAC;IAED,MAAM,CAAC,UAAiB;QACtB,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,WAAW,EAAE,EAAC,SAAS,EAAC,UAAU,EAAE,EAAC,CAAC,CAAC;IAC1E,CAAC;IACC,OAAO;QACL,IAAI,IAAI,CAAC,KAAK,EAAE;YACd,IAAI,CAAC,QAAQ,GAAC,IAAI,CAAC;SACpB;IACH,CAAC;;wEApBU,YAAY;0GAAZ,YAAY;QCRzB,gFAAyF;QACzF,4HAA0G;QAE1G,2EAA+B;;QAHd,iFAAwB;QACO,0DAAwC;QAAxC,mGAAwC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAd;AACpB;AACiB;AACT;AAEJ;AACQ;AACV;AACS;AAET;AACS;AACR;AACV;AAEa;AACM;AACU;AACmD;AAC5E;AACsB;AACZ;AACnB;AAC6B;AACZ;AACM;AACkC;AACxB;AACA;AACR;AACA;AACA;AACY;AACL;AACN;AACM;AACL;AACc;;;;;;;AAC5E,MAAM,MAAO,SAAQ,qDAAW;CAEpC;AAyEI,MAAM,SAAS;IACpB,YAC+B,UAAkB,EACvB,KAAa;QADR,eAAU,GAAV,UAAU,CAAQ;QACvB,UAAK,GAAL,KAAK,CAAQ;QACrC,MAAM,QAAQ,GAAG,mEAAiB,CAAC,UAAU,CAAC,CAAC,CAAC;YAC9C,gBAAgB,CAAC,CAAC,CAAC,eAAe,CAAC;QACrC,OAAO,CAAC,GAAG,CAAC,WAAW,QAAQ,eAAe,KAAK,EAAE,CAAC,CAAC;IACzD,CAAC;;kEAPU,SAAS,0DAEV,uDAAW,2DACX,kDAAM;uGAHL,SAAS,cAFP,wDAAY;4GAxBd;QAET,kFAAa;QACb;YACE,OAAO,EAAE,yBAAyB;YAClC,QAAQ,EAAE;gBACR,SAAS,EAAE,KAAK;gBAChB,SAAS,EAAE;oBACT;wBACE,EAAE,EAAE,mFAA+B;wBACnC,QAAQ,EAAE,IAAI,uEAAmB,CAC/B,0EAA0E,CAC3E;qBACF;oBACD;wBACE,EAAE,EAAE,qFAAiC;wBACrC,QAAQ,EAAE,IAAI,yEAAqB,CAAC,iBAAiB,CAAC;qBACvD;iBAEF;aACyB;SAC7B;QACD,sEAAmB;KACpB,YAnEC,0FAAkC,CAAC,EAAE,KAAK,EAAE,gBAAgB,EAAE,CAAC;QAChE,+DAAY;QACZ,0DAAY;QACZ,wDAAW;QACX,gEAAmB;QAClB,iEAAgB;QAChB,mEAAgB;QAChB,4EAAsB;QACtB,sEAAoB;QACpB,4EAAwB;QACxB,+DAAqB,CAAC;YACpB,IAAI,EAAE,EAAE,OAAO,EAAE,qDAAW,EAAE;YAC9B,SAAS,EAAE,EAAE,OAAO,EAAE,0DAAgB,EAAE,QAAQ,EAAE,gEAAsB,EAAE;SAC3E,CAAC;QAEF,qEAAiB;QACjB,gBAAgB;QAChB,oEAAgB;QAChB,sEAAsB,EAAE;QACxB,oFAAyB,EAAE;QAC3B,6DAAqB,CAAC;YACpB,MAAM,EAAE,yCAAyC;YACjD,SAAS,EAAE,CAAC,QAAQ,CAAC;SACtB,CAAC;oIA+CO,SAAS,mBA5ClB,wDAAY;QACZ,qFAAkB;QAClB,uEAAc;QACd,gFAAiB;QACjB,gFAAiB;QACjB,mFAAkB;QAClB,6EAAgB;QAChB,6EAAgB;QAChB,6EAAgB;QAChB,yFAAoB;QACpB,oFAAgB;QAChB,8EAAc;QACd,+EAAa;QACb,6FAAoB;QACpB,oFAAgB;QAChB,qFAAiB;QACjB,qFAAiB,oFAzClB,+DAAY;QACZ,0DAAY;QACZ,wDAAW;QACX,gEAAmB;QAClB,iEAAgB;QAChB,mEAAgB;QAChB,4EAAsB;QACtB,sEAAoB;QACpB,4EAAwB,2DAMxB,qEAAiB;QACjB,gBAAgB;QAChB,oEAAgB;;;;;;;;;;;;;;;;;;;ACxDb,MAAM,UAAU;IACnB,YAAoB,OAAe;QAAf,YAAO,GAAP,OAAO,CAAQ;IACnC,CAAC;IACD,WAAW,CACP,IAA6B,EAC7B,KAA0B;QAC1B,IAAI,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;YAC9B,OAAO,IAAI,CAAC;SACf;aACI;YACD,MAAM,CAAC,QAAQ,CAAC,IAAI,GAAC,QAAQ,CAAC;YAC9B,OAAO,KAAK,CAAC;SAChB;IACL,CAAC;;oEAbQ,UAAU;2GAAV,UAAU,WAAV,UAAU,mBAFP,MAAM;;;;;;;;;;;;;;;;;ACMf,MAAM,mBAAmB;IAC9B,aAAa,CAAC,SAAiC;QAC7C,+EAA+E;QAC/E,OAAO,SAAS,CAAC,aAAa,EAAE,CAAC,CAAC;YAChC,IAAI,CAAC,CAAC;YACN,mGAAmG;YACnG,8FAA8F;YAC9F,kDAAkD;YAEnD,OAAO,CAAC,iHAAiH,CAAC,CAAC;IAC9H,CAAC;;sFAVU,mBAAmB;oHAAnB,mBAAmB,WAAnB,mBAAmB;;;;;;;;;;;;;;;;;;;ACJzB,MAAM,aAAa;IACtB,YAAoB,OAAe;QAAf,YAAO,GAAP,OAAO,CAAQ;IAEnC,CAAC;IACD,WAAW,CACP,IAA6B,EAC7B,KAA0B;QAC1B,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;YAC/B,OAAO,IAAI,CAAC;SACf;aACI;YACD,MAAM,CAAC,QAAQ,CAAC,IAAI,GAAC,GAAG,CAAC;YACzB,OAAO,KAAK,CAAC;SAChB;IACL,CAAC;;0EAdQ,aAAa;8GAAb,aAAa,WAAb,aAAa,mBAFV,MAAM;;;;;;;;;;;;;;;;;;ACD0C;;;AAMzD,MAAM,cAAc;IAEzB,YAAoB,KAAgB;QAAhB,UAAK,GAAL,KAAK,CAAW;QADpC,YAAO,GAAC,0EAAmB,CAAC;IACa,CAAC;IAC1C,cAAc,CAAC,EAAS;QACtB,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,GAAC,gBAAgB,GAAC,EAAE,CAAC,CAAC;IAC1D,CAAC;IACD,IAAI;QACH,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;IAC3B,CAAC;IACD,UAAU,CAAC,EAAS,EAAC,IAAyB;QAC5C,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAC,OAAO,GAAC,EAAE,EAAC,IAAI,CAAC,CAAC;IACvD,CAAC;IACD,eAAe,CAAC,MAAc,EAAE,IAAS;QACvC,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,6BAA6B,GAAG,MAAM,EAAE,IAAI,CAAC,CAAC;IACtF,CAAC;IACD,eAAe,CAAC,MAAc;QAC5B,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,gCAAgC,GAAG,MAAM,EAAE,EAAE,CAAC,CAAC;IACvF,CAAC;IACD,qBAAqB,CAAC,MAAc,EAAE,IAAS;QAC7C,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,kCAAkC,GAAG,MAAM,EAAE,IAAI,CAAC,CAAC;IAC3F,CAAC;IACD,KAAK,CAAC,IAAyB;QAC7B,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAC,uBAAuB,EAAC,IAAI,CAAC,CAAC;IACpE,CAAC;IACD,MAAM,CAAC,OAAc;QACnB,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAC,mBAAmB,GAAC,OAAO,EAAC,EAAE,CAAC,CAAC;IACtE,CAAC;IACD,QAAQ,CAAC,OAAc;QACrB,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,GAAC,qBAAqB,GAAC,OAAO,CAAC,CAAC;IACpE,CAAC;;4EA7BU,cAAc;+GAAd,cAAc,WAAd,cAAc,mBAFb,MAAM;;;;;;;;;;;;;;;;;;ACNsD;;;AAOnE,MAAM,cAAc;IAEzB,YAAoB,KAAgB;QAAhB,UAAK,GAAL,KAAK,CAAW;QADpC,YAAO,GAAC,+EAAmB,CAAC;IACa,CAAC;IAE1C,cAAc,CAAC,KAAY,EAAC,QAAe,EAAC,WAAkB;QAC7D,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,+EAAmB,GAAC,iCAAiC,GAAC,KAAK,GAAC,GAAG,GAAC,QAAQ,GAAC,GAAG,GAAC,WAAW,CAAC,CAAC;IACjH,CAAC;IACD,sBAAsB,CAAC,KAAY,EAAC,QAAe,EAAC,UAAiB;QACnE,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,+EAAmB,GAAC,uCAAuC,GAAC,KAAK,GAAC,GAAG,GAAC,QAAQ,GAAC,GAAG,GAAC,UAAU,EAAC,EAAE,CAAC,CAAC;IAC3H,CAAC;;4EATU,cAAc;+GAAd,cAAc,WAAd,cAAc,mBAFb,MAAM;;;;;;;;;;;;;;;;;;ACH+C;;;AAM5D,MAAM,eAAe;IAE1B,YAAoB,KAAgB;QAAhB,UAAK,GAAL,KAAK,CAAW;QADpC,YAAO,GAAC,0EAAmB,CAAC;IACa,CAAC;IAC1C,WAAW,CAAC,MAAa,EAAE,OAA6B;QACvD,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,0EAAmB,GAAC,eAAe,GAAC,MAAM,EAAC,OAAO,CAAC;IAC3E,CAAC;IACD,eAAe,CAAC,YAAmB;QAClC,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,0EAAmB,GAAC,uBAAuB,GAAC,YAAY,CAAC,CAAC;IACjF,CAAC;IACD,WAAW,CAAC,QAAe,EAAC,WAAkB;QAC5C,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,0EAAmB,GAAC,mBAAmB,GAAC,QAAQ,GAAC,GAAG,GAAC,WAAW,CAAC,CAAC;IAC1F,CAAC;;8EAXU,eAAe;gHAAf,eAAe,WAAf,eAAe,mBAFd,MAAM;;;;;;;;;;;;;;;;;;;;ACLyC;AACG;AAGP;AAEpB;;;AAM9B,MAAM,cAAc;IAGzB,YAAoB,KAAgB;QAAhB,UAAK,GAAL,KAAK,CAAW;QAF7B,OAAE,GAAC,EAAE,CAAC;QACb,YAAO,GAAC,0EAAmB,CAAC;IAG3B,CAAC;IACF,UAAU,CAAC,GAAY;QACrB,OAAQ,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,YAAY,EAAC,GAAG,CAAC,CAAC;IACzD,CAAC;IAEH,aAAa,CAAC,KAAa,EAAE,GAAa;QACxC,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,gBAAgB,GAAG,KAAK,EAAE,GAAG,CAAC,CAAC;IACvE,CAAC;IAEC,aAAa,CAAC,KAAY,EAAE,IAAQ;QAClC,OAAQ,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,kBAAkB,GAAC,KAAK,EAAC,IAAI,CAAC,CAAC;IACxE,CAAC;IACD,SAAS;QACP,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,GAAC,YAAY,CAAC,CAAC;IACnD,CAAC;IACD,UAAU,CAAC,EAAS;QAClB,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,GAAC,0BAA0B,GAAC,EAAE,CAAC,CAAC;IACpE,CAAC;IAED,gBAAgB,CAAC,KAAY,EAAC,QAAe;QAC3C,OAAQ,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,wBAAwB,GAAC,KAAK,GAAG,GAAG,GAAC,QAAQ,CAAC,CAAC;IACvF,CAAC;IAED,kBAAkB,CAAC,MAAa,EAAE,IAAY,EAAE,YAAoB,EAAC,SAAc;QACjF,MAAM,eAAe,GAAkC,IAAI,8DAAe,EAAgB,CAAC;QAC3F,IAAI,MAAM,GAAG,IAAI,4DAAU,EAAE,CAAC;QAC9B,IAAI,IAAI,IAAI,IAAI,IAAI,YAAY,IAAI,IAAI,EAAE;YACxC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;YAC3C,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,UAAU,EAAE,YAAY,CAAC,CAAC;YACjD,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC;SAEhD;QACF,oDAAoD;QACnD,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAM,IAAI,CAAC,OAAO,GAAC,yBAAyB,GAAC,MAAM,EAAC,EAAE,OAAO,EAAE,UAAU,EAAE,MAAM,EAAE,CAAC;aACxG,IAAI,CACH,mDAAG,CAAC,QAAQ,CAAC,EAAE;YACb,eAAe,CAAC,MAAM,GAAG,QAAQ,CAAC,IAAI,CAAC;YAEvC,IAAI,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,IAAI,IAAI,EAAE;gBAC9C,eAAe,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAM,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,CAAC;aAClF;YACD,OAAO,eAAe,CAAC;QACzB,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IAED,UAAU,CAAC,MAAa,EAAE,IAAY,EAAE,YAAoB,EAAC,SAAc;QACzE,MAAM,eAAe,GAAkC,IAAI,8DAAe,EAAgB,CAAC;QAC3F,IAAI,MAAM,GAAG,IAAI,4DAAU,EAAE,CAAC;QAC9B,IAAI,IAAI,IAAI,IAAI,IAAI,YAAY,IAAI,IAAI,EAAE;YACxC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;YAC3C,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,UAAU,EAAE,YAAY,CAAC,CAAC;YACjD,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC;SAChD;QACF,oDAAoD;QACnD,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAM,IAAI,CAAC,OAAO,GAAC,cAAc,GAAC,MAAM,EAAC,EAAE,OAAO,EAAE,UAAU,EAAE,MAAM,EAAE,CAAC;aAC7F,IAAI,CACH,mDAAG,CAAC,QAAQ,CAAC,EAAE;YACb,eAAe,CAAC,MAAM,GAAG,QAAQ,CAAC,IAAI,CAAC;YAEvC,IAAI,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,IAAI,IAAI,EAAE;gBAC9C,eAAe,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAM,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,CAAC;aAClF;YACD,OAAO,eAAe,CAAC;QACzB,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IAED,mBAAmB;IACnB,eAAe,CAAC,KAAY,EAAE,SAAgB;QAC5C,OAAQ,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,sBAAsB,GAAC,KAAK,GAAC,GAAG,GAAC,SAAS,EAAC,EAAE,CAAC,CAAC;IACxF,CAAC;IAED,iBAAiB;IACjB,YAAY,CAAC,QAAiB;QAC9B,OAAQ,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,kBAAkB,EAAC,QAAQ,CAAC,CAAC;IACtE,CAAC;IACA,iCAAiC;IACjC,UAAU,CAAC,MAAa,EAAC,KAAY;QACpC,OAAQ,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,kBAAkB,GAAC,MAAM,GAAC,GAAG,GAAC,KAAK,CAAC,CAAC;IAC7E,CAAC;;4EArFU,cAAc;+GAAd,cAAc,WAAd,cAAc,mBAFb,MAAM;;;;;;;;;;;;;;;;;;ACX8C;;;AAO3D,MAAM,mBAAmB;IAE9B,YAAoB,KAAgB;QAAhB,UAAK,GAAL,KAAK,CAAW;QADpC,YAAO,GAAC,0EAAmB,CAAC;IACa,CAAC;IAC1C,eAAe,CAAC,KAAY,EAAC,MAAa;QACxC,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,GAAC,UAAU,GAAC,KAAK,GAAC,GAAG,GAAC,MAAM,CAAC,CAAC;IAClE,CAAC;;sFALU,mBAAmB;oHAAnB,mBAAmB,WAAnB,mBAAmB,mBAFlB,MAAM;;;;;;;;;;;;;;;;;;ACH4C;;;AAKzD,MAAM,gBAAgB;IAE3B,YAAoB,KAAgB;QAAhB,UAAK,GAAL,KAAK,CAAW;QADpC,YAAO,GAAC,0EAAmB,CAAC;IACa,CAAC;IAE1C,SAAS,CAAC,SAAoB;QAC5B,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,qBAAqB,EAAE,SAAS,CAAC,CAAC;IAC1E,CAAC;;gFANU,gBAAgB;iHAAhB,gBAAgB,WAAhB,gBAAgB,mBAFf,MAAM;;;;;;;;;;;;;;;;;ACCb,MAAM,iBAAiB;IAE5B;QADM,OAAE,GAAQ,EAAE,CAAC;QAEf,IAAI,CAAC,EAAE,GAAC,KAAK,CAAC;IAClB,CAAC;IACD,IAAI;IAEJ,CAAC;;kFAPU,iBAAiB;kHAAjB,iBAAiB,WAAjB,iBAAiB,mBAFhB,MAAM;;;;;;;;;;;;;;;;;;;ACCb,MAAM,aAAa;IAE1B,YAAoB,KAAsB;QAAtB,UAAK,GAAL,KAAK,CAAiB;QADjC,iBAAY,GAAS,KAAK,CAAC;IACW,CAAC;IAE9C,uBAAuB;QACrB,IAAI,CAAC,SAAS,CAAC,MAAM;YACnB,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,uCAAuC,EAAE;gBAC9D,QAAQ,EAAE,YAAY;aACvB,CAAC,CAAC;IACP,CAAC;IACD,cAAc;QACZ,IAAG,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,EAAC;YAC9B,IAAI,IAAI,GAAE,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,CAAE,CAAC,CAAC;YACpD,IAAI,CAAC,YAAY,GAAC,KAAK,CAAC;SACzB;aAAI;YACH,MAAM,CAAC,QAAQ,CAAC,IAAI,GAAC,QAAQ,CAAC;SAC/B;IACH,CAAC;IACD,mBAAmB;QACjB,IAAI,CAAC,YAAY,GAAC,IAAI,CAAC;IACzB,CAAC;;0EApBU,aAAa;8GAAb,aAAa,WAAb,aAAa,mBAFZ,MAAM;;;;;;;;;;;;;;;;;;ACD4C;;;AAKzD,MAAM,UAAU;IAErB,YAAoB,KAAgB;QAAhB,UAAK,GAAL,KAAK,CAAW;QADpC,YAAO,GAAC,0EAAmB,CAAC;IACa,CAAC;IAC1C,MAAM,CAAC,GAAa;QAClB,OAAQ,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,kBAAkB,EAAC,GAAG,CAAC,CAAC;IAC/D,CAAC;;oEALQ,UAAU;2GAAV,UAAU,WAAV,UAAU,mBAFT,MAAM;;;;;;;;;;;;;;;;;;;;ACL0C;AAGE;AAEP;AAEpB;;;AAK9B,MAAM,WAAW;IAGtB,YAAoB,KAAgB;QAAhB,UAAK,GAAL,KAAK,CAAW;QADpC,YAAO,GAAC,0EAAmB,CAAC;IACa,CAAC;IAE1C,OAAO,CAAC,IAAY,EAAE,YAAoB,EAAC,UAAe,EAAC,MAAW;QACpE,MAAM,eAAe,GAAkC,IAAI,8DAAe,EAAgB,CAAC;QAC3F,IAAI,MAAM,GAAG,IAAI,4DAAU,EAAE,CAAC;QAC9B,IAAI,IAAI,IAAI,IAAI,IAAI,YAAY,IAAI,IAAI,EAAE;YACxC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;YAC3C,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,UAAU,EAAE,YAAY,CAAC,CAAC;SAClD;QACA,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,WAAW,EAAE,UAAU,CAAC,CAAC;QAChD,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;QAC1C,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAmB,IAAI,CAAC,OAAO,GAAC,4BAA4B,EAAC,EAAE,OAAO,EAAE,UAAU,EAAE,MAAM,EAAE,CAAC;aACjH,IAAI,CACH,mDAAG,CAAC,QAAQ,CAAC,EAAE;YACb,eAAe,CAAC,MAAM,GAAG,QAAQ,CAAC,IAAI,CAAC;YAEvC,IAAI,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,IAAI,IAAI,EAAE;gBAC9C,eAAe,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAM,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,CAAC;aAClF;YACD,OAAO,eAAe,CAAC;QACzB,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IAED,WAAW,CAAC,IAAY,EAAE,YAAoB,EAAC,UAAe,EAAC,MAAW;QACxE,MAAM,eAAe,GAAkC,IAAI,8DAAe,EAAgB,CAAC;QAC3F,IAAI,MAAM,GAAG,IAAI,4DAAU,EAAE,CAAC;QAC9B,IAAI,IAAI,IAAI,IAAI,IAAI,YAAY,IAAI,IAAI,EAAE;YACxC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;YAC3C,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,UAAU,EAAE,YAAY,CAAC,CAAC;SAClD;QACD,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,eAAe,EAAE,UAAU,CAAC,CAAC;QACpD,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;QACzC,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAM,IAAI,CAAC,OAAO,GAAG,6BAA6B,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,MAAM,EAAE,CAAC;aACtG,IAAI,CACH,mDAAG,CAAC,QAAQ,CAAC,EAAE;YACb,eAAe,CAAC,MAAM,GAAG,QAAQ,CAAC,IAAI,CAAC;YAEvC,IAAI,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,IAAI,IAAI,EAAE;gBAC9C,eAAe,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAM,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,CAAC;aAClF;YACD,OAAO,eAAe,CAAC;QACzB,CAAC,CAAC,CACH,CAAC;IACN,CAAC;;sEA/CU,WAAW;4GAAX,WAAW,WAAX,WAAW,mBAFV,MAAM;;;;;;;;;;;;;;;;;;;;;;;;;ACVpB;AAGA;AACA;AACA;AACA;;;AAKM,MAAOM,cAAP,CAAqB;EAazBC,YAAoBC,IAApB,EAAoC;IAAA;;IAAhB;IAZX,kBAAkB,IAAIN,oEAAJ,GAC1BO,OAD0B,CAClBT,mFADkB,EACY;MAC9BW,eAAe,EAAE,IADa;MAE9BC,SAAS,EAAGX,4EAA4BY;IAFV,CADZ,EAKnBC,KALmB,EAAlB;IAMF,gBAAWd,+EAAX;IACA,mBAAcA,kFAAd;IAED,6BAAsC,IAAII,qEAAJ,EAAtC;IACA,iBAAY,IAAID,yCAAJ,EAAZ;IAGJ,KAAKc,UAAL,CAAgBC,OAAhB,6KAAwB,aAAW;MACjC,MAAM,KAAI,CAACC,KAAL,EAAN;IACD,CAFD;IAGD,KAAKF,UAAL,CAAgBG,EAAhB,CAAmB,YAAnB,EAAkCC,IAAD,IAAsB;MAAK,KAAKC,kBAAL,CAAwBD,IAAxB;IAAgC,CAA5F;IACA,KAAKF,KAAL;EACA,CAnBwB,CAoB3B;;;EACaA,KAAK;IAAA;;IAAA;MAChB,IAAI;QACF,MAAM,MAAI,CAACF,UAAL,CAAgBE,KAAhB,EAAN;QACAI,OAAO,CAACC,GAAR,CAAY,WAAZ;MACD,CAHD,CAGE,OAAOC,GAAP,EAAY;QACZF,OAAO,CAACC,GAAR,CAAYC,GAAZ;QACAC,UAAU,CAAC,MAAM,MAAI,CAACP,KAAL,EAAP,EAAqB,IAArB,CAAV;MACD;IAPe;EAQjB;;EAEMG,kBAAkB,CAACK,IAAD,EAAmB;IAC1C,KAAKC,qBAAL,CAA2BC,QAA3B,GAAsCF,IAAI,CAACE,QAA3C;IACA,KAAKD,qBAAL,CAA2BE,WAA3B,GAAyCH,IAAI,CAACG,WAA9C;IACA,KAAKF,qBAAL,CAA2BG,OAA3B,GAAqCJ,IAAI,CAACI,OAA1C;IACA,KAAKH,qBAAL,CAA2BI,gBAA3B,GAA8CL,IAAI,CAACK,gBAAnD;IACA,KAAKJ,qBAAL,CAA2BK,aAA3B,GAA2CN,IAAI,CAACM,aAAhD;IACA,KAAKC,SAAL,CAAeC,IAAf,CAAoB,KAAKP,qBAAzB;EACD;EAED;EAEE;;;EACOQ,gBAAgB,CAACC,MAAD,EAAqB;IAC1C,KAAK7B,IAAL,CAAU8B,IAAV,CAAe,KAAKC,QAApB,EAA8BF,MAA9B,EAAsCG,SAAtC,CAAgDnB,IAAI,IAAG,CAAG,CAA1D,EAD0C,CAE3C;EACA;;EAEMoB,mBAAmB,CAACJ,MAAD,EAAoB;IAC5C,KAAK7B,IAAL,CAAU8B,IAAV,CAAe,KAAKI,WAApB,EAAiCL,MAAjC,EAAyCG,SAAzC,CAAmDnB,IAAI,IAAG,CAAG,CAA7D,EAD4C,CAE7C;EACA;;EAEMsB,oBAAoB;IAEzB,OAAO,KAAKT,SAAL,CAAeU,YAAf,EAAP;EACD,CAxDwB,CA0DzB;EACA;EACA;EACA;EAEA;;;EACQC,gBAAgB,CAACC,MAAD,EAAgBC,OAAhB,EAAoC;IACzD,OAAO,KAAKvC,IAAL,CAAU8B,IAAV,CAAetC,0EAAA,GAAoB,eAApB,GAAoC8C,MAAnD,EAA0DC,OAA1D,EACJE,IADI,CACC5C,mDAAG,CAAC6C,CAAC,IAAG,CAAG,CAAR,CADJ,CAAP;EAED,CAnEuB,CAqEzB;;;EACOC,mBAAmB,CAACC,KAAD,EAAcC,WAAd,EAAiCC,QAAjC,EAAkDP,OAAlD,EAAqE;IAC7F,OAAO,KAAKvC,IAAL,CAAU8B,IAAV,CAAetC,0EAAA,GAAoB,kBAApB,GAAuCoD,KAAvC,GAA6C,GAA7C,GAAiDC,WAAjD,GAA6D,GAA7D,GAAiEC,QAAhF,EAA0FP,OAA1F,EACJE,IADI,CACC5C,mDAAG,CAAC6C,CAAC,IAAI3B,OAAO,CAACC,GAAR,EAAN,CADJ,CAAP;EAED;;AAzEwB;;;mBAAdlB,gBAAciD,sDAAAA,CAAAA,4DAAAA;AAAA;;;SAAdjD;EAAckD,SAAdlD,cAAc;EAAAmD,YAFb;;;;;;;;;;;;;;;ACTP,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,IAAI;IAChB,OAAO,EAAE,gCAAgC;IAC3C,yCAAyC;IACxC,gBAAgB,EAAE,mCAAmC;IACrD,YAAY,EAAE,yCAAyC;IACvD,eAAe,EAAE,4CAA4C;CAC7D,CAAC;;;;;;;;;;;;;;;ACPF,mFAAmF;AACnF,8FAA8F;AAC9F,yEAAyE;AACzE,+EAA+E;AAExE,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;IACjB,OAAO,EAAE,oCAAoC;IAC7C,wCAAwC;IACxC,gBAAgB,EAAE,+BAA+B;IACjD,YAAY,EAAE,qCAAqC;IACnD,eAAe,EAAE,wCAAwC;CAC1D,CAAC;;;;;;;;;;;;;;;;;ACZ6C;AAGF;AACY;AAEzD,IAAI,6EAAsB,EAAE;IAC1B,6DAAc,EAAE,CAAC;CAClB;AAED,QAAQ,CAAC,gBAAgB,CAAC,kBAAkB,EAAE,GAAG,EAAE;IACjD,wEAAwB,CAAC,eAAe,CAAC,sDAAS,CAAC;SAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;AACtC,CAAC,CAAC,CAAC","sources":["./src/app/Auth/Login/Login.component.ts","./src/app/Auth/Login/Login.component.html","./src/app/ChatModule/Chatbox/Chatbox.component.ts","./src/app/ChatModule/Chatbox/Chatbox.component.html","./src/app/ChatModule/Chats/Chats.component.ts","./src/app/ChatModule/Chats/Chats.component.html","./src/app/ChatModule/JobChat/JobChat.component.ts","./src/app/ChatModule/JobChat/JobChat.component.html","./src/app/Job/JobDetails/JobDetail.component.ts","./src/app/Job/JobDetails/JobDetail.component.html","./src/app/Job/JobEdit/JobEdit.component.ts","./src/app/Job/JobEdit/JobEdit.component.html","./src/app/Job/JobList/JobList.component.ts","./src/app/Job/JobList/JobList.component.html","./src/app/Job/JobPost/JobPost.component.ts","./src/app/Job/JobPost/JobPost.component.html","./src/app/Job/JobResponce/JobResponce.component.ts","./src/app/Job/JobResponce/JobResponce.component.html","./src/app/Model/Message/RealChatDtos.ts","./src/app/Model/Pagination.ts","./src/app/Profile/EditProfile/Edit.component.ts","./src/app/Profile/EditProfile/Edit.component.html","./src/app/Profile/UserProfile/UserProfile.component.ts","./src/app/Profile/UserProfile/UserProfile.component.html","./src/app/Settings/Download/Download.component.ts","./src/app/Settings/Download/Download.component.html","./src/app/Settings/HelpDesk/HelpDesk.component.ts","./src/app/Settings/HelpDesk/HelpDesk.component.html","./src/app/Shared/Shared.module.ts","./src/app/Shared/TopNavBar/TopNavBar.component.ts","./src/app/Shared/TopNavBar/TopNavBar.component.html","./src/app/Shared/services/NavbarCommunication.service.ts","./src/app/Wall/UserList/userList.component.ts","./src/app/Wall/UserList/userList.component.html","./src/app/Wall/wallList/wallList.component.ts","./src/app/Wall/wallList/wallList.component.html","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/guard/Login.guard.ts","./src/app/guard/activate-guard.ts","./src/app/guard/authPage.guard.ts","./src/app/services/Auth/Profile.service.ts","./src/app/services/Chat/JobChat/JobChat.service.ts","./src/app/services/Chat/User/UserChat.service.ts","./src/app/services/JobPost/JobPost.service.ts","./src/app/services/JobPost/JobResponces.service.ts","./src/app/services/JobPost/ReportJob.service.ts","./src/app/services/SeoService.service.ts","./src/app/services/SharedServices/Shared.service.ts","./src/app/services/Tags/Tag.service.ts","./src/app/services/Wall/Wall.service.ts","./src/app/services/signalr.service.ts","./src/environments/environment.prod.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { MapsAPILoader } from '@agm/core';\nimport { Component, NgZone, OnInit, Output } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators }  from '@angular/forms';\nimport { SocialAuthService } from \"angularx-social-login\";\nimport { GoogleLoginProvider,FacebookLoginProvider } from \"angularx-social-login\";\nimport { SocialAuthentication } from '../../Model/User/SocialAuthentication';\nimport { ProfileService } from '../../services/Auth/Profile.service';\nimport { SharedService } from '../../services/SharedServices/Shared.service';\nimport { HotToastService } from '@ngneat/hot-toast';\nimport { Meta, Title } from '@angular/platform-browser';\nvar addressLocation='';\nvar City='';\nvar State='';\nvar Country='';\nvar PinCode='';\n@Component({\n  selector: \"app-Login\",\n  templateUrl: \"./Login.component.html\",\n  styleUrls: [\"./Login.component.css\"],\n})\nexport class LoginComponent implements OnInit {\n  loginUser!: SocialAuthentication;\n  loginForm!: FormGroup;\n  isGetLocationOnlOad: boolean = false;\n  // Location Variable\n  latitude!: number;\n  longitude!: number;\n  address!: string;\n  constructor(\n    private titleService: Title, private metaService: Meta,\n    private fb: FormBuilder,\n    private _profileServices: ProfileService,\n    private _sharedServices: SharedService,\n    private apiloader: MapsAPILoader,\n    private toast: HotToastService,\n    private authService: SocialAuthService\n  ) {\n    this.titleService.setTitle(\"Login\");\n    this.metaService.updateTag({property:'og:title',content:'Login new'})\n    this._sharedServices.checkInterNetConnection();\n    _sharedServices.IsUserIsOnLogInPage();\n\n    this.AskForLocation();\n  }\n\n  ngOnInit() {\n\n    this.createLoginForm();\n\n  }\n  createLoginForm() {\n    this.loginForm = this.fb.group({\n      UserName: [\"\"],\n      Email: [\"\"],\n      LoginProvider: [\"\"],\n      ImageUrl: [\"\"],\n      CoverImageUrl: [\"\"],\n      Name: [\"\"],\n      MobileNumber: [\"\"],\n      Password: [\"\"],\n      WebSiteUrl: [\"\"],\n      Latitude: [\"\"],\n      Longitude: [\"\"],\n      City: [\"\"],\n      Country: [\"\"],\n      Pincode: [\"\"],\n      State: [\"\"],\n      UserAddress: [\"\"],\n      AboutUs: [\"\"],\n    });\n  }\n  AskForLocation() {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(\n        (position: any) => {\n          if (position) {\n            this.latitude = position.coords.latitude;\n            this.longitude = position.coords.longitude;\n            this.apiloader.load().then(() => {\n              let geocoder = new google.maps.Geocoder();\n              let latlng = {\n                lat: this.latitude,\n                lng: this.longitude,\n              };\n\n              geocoder.geocode(\n                {\n                  location: latlng,\n                },\n                function (results:any, status:any) {\n                  if (status == google.maps.GeocoderStatus.OK) {\n                    if (results[1]) {\n\n                      addressLocation = results[1].formatted_address;\n                      City=results[1].address_components[5].long_name;\n                      State=results[1].address_components[7].long_name;\n                      Country=results[1].address_components[8].long_name;\n                      PinCode=  results[1].address_components[9].long_name;\n                    }\n                  } else {\n                    console.log(\"Not found\");\n                  }\n                }\n              );\n            });\n            this.isGetLocationOnlOad = true;\n          } else {\n            this.showToast();\n            return;\n          }\n        },\n        (err) => {\n          return this.toast.error(\"Please allow location of your device\", {\n            position: \"top-center\",\n          });\n        }\n      );\n    } else {\n      this.toast.info(\"location not supported by this browser\", {\n        position: \"top-center\",\n      });\n    }\n  }\n  // Google Login\n  signInWithGoogle(): void {\n    this._profileServices.load();\n    if (this.isGetLocationOnlOad) {\n      this.authService\n        .signIn(GoogleLoginProvider.PROVIDER_ID)\n        .then((data: any) => {\n          this.loginForm.controls[\"Email\"].setValue(data.email);\n          this.loginForm.controls[\"Name\"].setValue(data.name);\n          this.loginForm.controls[\"ImageUrl\"].setValue(data.photoUrl);\n          this.loginForm.controls[\"LoginProvider\"].setValue(data.provider);\n          this.loginForm.controls[\"UserName\"].setValue(data.name);\n          this.loginForm.controls[\"Latitude\"].setValue(this.latitude);\n          this.loginForm.controls[\"Longitude\"].setValue(this.longitude);\n          this.loginForm.controls[\"UserAddress\"].setValue(addressLocation);\n\n          this.loginForm.controls[\"City\"].setValue(City);\n          this.loginForm.controls[\"Country\"].setValue(Country);\n          this.loginForm.controls[\"State\"].setValue(State);\n          this.loginForm.controls[\"Pincode\"].setValue(PinCode);\n          this.loginUser = Object.assign({}, this.loginForm.value);\n          this._profileServices\n            .Login(this.loginUser)\n            .subscribe((data: any) => {\n              localStorage.setItem(\"user\", JSON.stringify(data))!;\n              location.href = \"/\";\n            });\n        });\n    } else {\n      this.AskForLocation();\n    }\n  }\n  signInWithFacebook(): void {\n    this.authService\n      .signIn(FacebookLoginProvider.PROVIDER_ID)\n      .then((data: any) => {\n        this.loginForm.controls[\"Email\"].setValue(data.email);\n        this.loginForm.controls[\"Name\"].setValue(data.name);\n        this.loginForm.controls[\"ImageUrl\"].setValue(data.photoUrl);\n        this.loginForm.controls[\"LoginProvider\"].setValue(data.provider);\n        this.loginForm.controls[\"UserName\"].setValue(data.name);\n        this.loginForm.controls[\"Latitude\"].setValue(this.latitude);\n        this.loginForm.controls[\"Longitude\"].setValue(this.longitude);\n        this.loginForm.controls[\"UserAddress\"].setValue(addressLocation);\n        this.loginUser = Object.assign({}, this.loginForm.value);\n        this._profileServices\n          .Login(this.loginUser)\n          .subscribe((data: any) => {\n            localStorage.setItem(\"user\", JSON.stringify(data))!;\n            location.href = \"/\";\n          });\n      });\n  }\n  // Facebook Login\n\n  showToast() {\n    this.toast.info(\"Allow location to use this application\", {\n      position: \"top-center\",\n    });\n  }\n}\n","<div class=\"login_overlay\"></div>\n<div class=\"login_wrapper\">\n    <div class=\"lf_left_sec\">\n        <div class=\"logo\"> <img src=\"./../../../assets/Logo/hoozon_logo.svg\" alt=\"\" class=\"img-responsive\"> </div>\n    </div>\n    <div class=\"lg_right_sec\">\n        <h2> Login </h2>\n        <div class=\"social_login\">\n            <div class=\"sc_lg\" (click)=\"signInWithGoogle()\" >\n                <svg viewBox=\"0 0 24 24\" width=\"48\" height=\"48\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <g transform=\"matrix(1, 0, 0, 1, 27.009001, -39.238998)\">\n                        <path fill=\"#4285F4\" d=\"M -3.264 51.509 C -3.264 50.719 -3.334 49.969 -3.454 49.239 L -14.754 49.239 L -14.754 53.749 L -8.284 53.749 C -8.574 55.229 -9.424 56.479 -10.684 57.329 L -10.684 60.329 L -6.824 60.329 C -4.564 58.239 -3.264 55.159 -3.264 51.509 Z\"/>\n                        <path fill=\"#34A853\" d=\"M -14.754 63.239 C -11.514 63.239 -8.804 62.159 -6.824 60.329 L -10.684 57.329 C -11.764 58.049 -13.134 58.489 -14.754 58.489 C -17.884 58.489 -20.534 56.379 -21.484 53.529 L -25.464 53.529 L -25.464 56.619 C -23.494 60.539 -19.444 63.239 -14.754 63.239 Z\"/>\n                        <path fill=\"#FBBC05\" d=\"M -21.484 53.529 C -21.734 52.809 -21.864 52.039 -21.864 51.239 C -21.864 50.439 -21.724 49.669 -21.484 48.949 L -21.484 45.859 L -25.464 45.859 C -26.284 47.479 -26.754 49.299 -26.754 51.239 C -26.754 53.179 -26.284 54.999 -25.464 56.619 L -21.484 53.529 Z\"/>\n                        <path fill=\"#EA4335\" d=\"M -14.754 43.989 C -12.984 43.989 -11.404 44.599 -10.154 45.789 L -6.734 42.369 C -8.804 40.429 -11.514 39.239 -14.754 39.239 C -19.444 39.239 -23.494 41.939 -25.464 45.859 L -21.484 48.949 C -20.534 46.099 -17.884 43.989 -14.754 43.989 Z\"/>\n                    </g>\n                </svg>\n            </div>\n            <div class=\"sc_lg\" (click)=\"signInWithFacebook()\" >\n                <svg version=\"1.1\" width=\"48\" height=\"48\" id=\"Layer_1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n                    viewBox=\"0 0 40 40\" style=\"enable-background:new 0 0 40 40;\" xml:space=\"preserve\">\n                    <style type=\"text/css\">\n                        .st0{fill:url(#SVGID_1_);}\n                        .st1{fill:#FFFFFF;}\n                    </style>\n                    <linearGradient id=\"SVGID_1_\" gradientUnits=\"userSpaceOnUse\" x1=\"-277.375\" y1=\"406.6018\" x2=\"-277.375\" y2=\"407.5726\" gradientTransform=\"matrix(40 0 0 -39.7778 11115.001 16212.334)\">\n                        <stop  offset=\"0\" style=\"stop-color:#0062E0\"/>\n                        <stop  offset=\"1\" style=\"stop-color:#19AFFF\"/>\n                    </linearGradient>\n                    <path class=\"st0\" d=\"M16.7,39.8C7.2,38.1,0,29.9,0,20C0,9,9,0,20,0s20,9,20,20c0,9.9-7.2,18.1-16.7,19.8l-1.1-0.9h-4.4L16.7,39.8z\"\n                        />\n                    <path class=\"st1\" d=\"M27.8,25.6l0.9-5.6h-5.3v-3.9c0-1.6,0.6-2.8,3-2.8h2.6V8.2c-1.4-0.2-3-0.4-4.4-0.4c-4.6,0-7.8,2.8-7.8,7.8V20\n                        h-5v5.6h5v14.1c1.1,0.2,2.2,0.3,3.3,0.3c1.1,0,2.2-0.1,3.3-0.3V25.6H27.8z\"/>\n                </svg>\n            </div>\n        </div>\n        <div class=\"login_des\">\n            By continuing, you agree to HoozOnline Terms of Services and acknowledge that you've read our Privacy policy\n        </div>\n        <div class=\"login_bt\">\n            <div class=\"text-1\">hoozOnline</div>\n            <div class=\"text-2\">BETA</div>\n        </div>\n    </div>\n    <!-- <div class=\"text-center mt-1\" style=\"color: black; font-weight: bold; font-family: initial;\"> Or</div>\n    <form class=\"p-3 mt-3\">\n      <div class=\"form-field d-flex align-items-center\"> <input type=\"text\" name=\"userName\" id=\"userName\"\n          placeholder=\"Email address\"> </div>\n      <div class=\"form-field d-flex align-items-center\"> <input type=\"password\" name=\"password\" id=\"pwd\"\n          placeholder=\"Create password\"> </div> <button class=\"btn mt-3\">Continue</button>\n          <div class=\"text-left fs-6 mt-3\">\n            <p class=\"condition\">By continuing, you agree to HoozOnline Terms of Services and acknowledge that you've read our Privacy policy </p>\n        </div>\n        <div class=\"text-left fs-6 mt-2\">\n            <p style=\"font-size: 15px;\">Already a member? <button type=\"button\" class=\"btn-hoozGreen\">Login</button> </p>\n        </div>\n    </form> -->\n</div>\n","import { MessageForCreationDto } from './../../Model/Message/MessageForCreationDto';\nimport { SocialAuthentication } from './../../Model/User/SocialAuthentication';\nimport { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ProfileService } from '../../services/Auth/Profile.service';\nimport { UserChatService } from '../../services/Chat/User/UserChat.service';\nimport { SignalrService } from '../../services/signalr.service';\nimport {Location} from '@angular/common';\nimport { TimeagoIntl } from 'ngx-timeago';\nimport {strings as englishStrings} from 'ngx-timeago/language-strings/en';\nimport { HotToastService } from '@ngneat/hot-toast';\nimport { RealChatDtos } from '../../Model/Message/RealChatDtos';\n@Component({\n  selector: \"app-Chatbox\",\n  templateUrl: \"./Chatbox.component.html\",\n  styleUrls: [\"./Chatbox.component.scss\"],\n})\nexport class ChatboxComponent implements OnInit {\n  senderId!: number;\n  recipientId: number;\n  user!: SocialAuthentication;\n  messages!: Array<any>;\n  isSending:boolean=false;\n  checkIsSend:boolean=false;\n  isOnline:boolean=false;\n  LastActive!:Date;\n  constructor(\n    intl: TimeagoIntl,\n    private _profileDetails: ProfileService,\n    private _chatServices: UserChatService,\n    private _signalR:SignalrService,\n    private route: ActivatedRoute,\n    private _location: Location,\n    private toast: HotToastService\n  ) {\n    intl.strings = englishStrings;\n    intl.changes.next();\n    let user = JSON.parse(localStorage.getItem(\"user\")!);\n    this.recipientId = user.Id;\n    this.route.queryParams.subscribe((params) => {\n      this.senderId =parseInt(params[\"uid\"]);\n    });\n  }\n\n  ngOnInit() {\n    this.loadUserData();\n    this.loadUserChat();\n    this.IsOnline();\n    setInterval(()=>{\n     this.loadUserChat();\n     this.IsOnline();\n    },2000)\n\n    this._signalR.retrieveMappedObject().subscribe( (receivedObj: RealChatDtos) => {  this.addToInbox(receivedObj);});\n  }\n  msgDto: RealChatDtos = new RealChatDtos();\n  msgInboxArray: RealChatDtos[] = [];\n  loadUserData() {\n    this._profileDetails\n      .GetUserProfile(this.senderId)\n      .subscribe((data: any) => {\n        this.user = data;\n      });\n  }\n  loadUserChat() {\n    this._chatServices\n      .getMessages(this.senderId, this.recipientId)\n      .subscribe((data: any) => {\n        this.msgInboxArray = data;\n      });\n  }\n  IsOnline(){\n    this._profileDetails.IsOnline(this.senderId).subscribe((data:any)=>{\n      this.isOnline=data.IsOnline;\n      this.LastActive=data.LastActive;\n    })\n  }\n  SendMsg():any {\n    let message = (document.getElementById(\"msg\") as HTMLInputElement).value;\n    if(message==\"\")\n    return  this.toast.info('please type to send.', {\n      position: 'top-center',\n    });\n   this.isSending=true;\n    this.msgDto = {\n      SenderId: this.senderId,\n      RecipientId: this.recipientId,\n      Content: message,\n      RecipientContent:'',\n      SenderContent:message,\n      MessageSent:new Date()\n    };\n\n    (document.getElementById(\"msg\") as HTMLInputElement).value=\"\";\n    this._signalR.mapReceivedMessage(this.msgDto);\n     this._signalR.sendMessageToApi(this.senderId,this.msgDto).subscribe((data:any)=>{\n       this.isSending=false;\n       this.checkIsSend=true;\n\n     },err=>{\n      this.isSending=false;\n\n     })\n  }\n  addToInbox(obj: RealChatDtos) {\n    let newObj = new RealChatDtos();\n    newObj.SenderId = obj.SenderId;\n    newObj.SenderContent = obj.SenderContent;\n    newObj.RecipientId = obj.RecipientId;\n    newObj.RecipientContent = obj.RecipientContent;\n    newObj.Content = obj.Content;\n    newObj.MessageSent=new Date();\n    this.msgInboxArray.push(newObj);\n  }\n   //Back loacation History\n   backClicked() {\n    this._location.back();\n  }\n}\n","<div class=\"chat-app\">\n  <div class=\"chat_top_sec\">\n      <div class=\"back_arrow_chat\">\n          <i (click)=\"backClicked()\" aria-hidden=\"true\" class=\"back fa fa-2x fa fa-angle-left\"></i>\n      </div>\n      <div class=\"tp_user\">\n          <a *ngIf=\"user?.ImageUrl\" data-toggle=\"modal\" data-target=\"#view_info\">\n              <img src=\"{{user?.ImageUrl}}\" alt=\"avatar\">\n          </a>\n          <div class=\"c-details\">\n            <h2>{{user?.Name}}</h2>\n          <div class=\"img share\">{{user?.City}}, {{user?.State}}</div>\n          </div>\n\n      </div>\n  </div>\n  <div *ngIf=\"user\" class=\"chat\">\n      <div *ngIf=\"isOnline==false\" class=\"chat-header clearfix\">\n        Last seen: <i class=\"fa fa-circle offline\"></i>&nbsp; <div class=\"message-data-time\" timeago [date]=\"LastActive\"></div>\n      </div>\n\n      <div *ngIf=\"isOnline==true\" class=\"chat-header clearfix\">\n        <div class=\"status\"> <i class=\"fa fa-circle online\"></i>&nbsp;  <b>Online</b></div>\n      </div>\n      <div  class=\"chat-history\">\n          <ul *ngFor=\"let item of msgInboxArray\" class=\"m-b-0\">\n\n              <li *ngIf=\"item.SenderContent==null\" class=\"clearfix\">\n                  <div class=\"message-data\">\n                      <img src=\"{{user?.ImageUrl}}\" alt=\"avatar\">\n                      <div class=\"message other-message\"> {{item.Content}}</div>\n                  </div>\n                  <div  class=\"message-data-time\" timeago [date]=\"item?.MessageSent\"></div>\n              </li>\n              <li *ngIf=\"item.SenderContent!=null\" class=\"clearfix\">\n                  <div class=\"md_chat\">\n                      <div class=\"message my-message\">{{item.Content}}</div>\n\n                      <div   class=\"message-data-time\" timeago [date]=\"item?.MessageSent\"></div>\n                  </div>\n              </li>\n\n          </ul>\n          <span class=\"message-sending\" *ngIf=\"isSending\">sending...</span>\n      </div>\n\n      <div class=\"chat-message_btn clearfix\">\n          <!-- <div class=\"input-group-prepend\">\n              <img class=\"img send\" src=\"./../../../assets/Logo/upload.svg\" alt=\"img\">\n          </div> -->\n          <input type=\"text\" (keyup.enter)=\"SendMsg()\" class=\"form-control\" id=\"msg\" value=\"\" placeholder=\"Type here...\">\n          <div class=\"send_wrap\">\n              <img (click)=\"SendMsg()\" class=\"img send\" src=\"./../../../assets/Logo/send.svg\" alt=\"img\">\n          </div>\n      </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { UserChatService } from '../../services/Chat/User/UserChat.service';\nimport { SharedService } from '../../services/SharedServices/Shared.service';\n\n@Component({\n  selector: \"app-Chats\",\n  templateUrl: \"./Chats.component.html\",\n  styleUrls: [\"./Chats.component.css\"],\n})\nexport class ChatsComponent implements OnInit {\n  userId:number;\n  userlist:any;\n  constructor(private _userchatServices: UserChatService, private _sharedServices:SharedService, private _navigaterouter:Router) {\n    this._sharedServices.checkInterNetConnection();\n    let user= JSON.parse(localStorage.getItem('user')!);\n    this.userId=user.Id;\n\n  }\n  ngOnInit(){\n    this.LoadUserChatList();\n  }\n\n  LoadUserChatList() {\n    this._userchatServices.getUserchatList(this.userId).subscribe((data:any)=>{\n      this.userlist=data.data;\n    })\n  }\n\nRedirectToUser(userId:number){\n  this._navigaterouter.navigate(['/profile'], { queryParams: {target: userId}});\n}\n}\n","<div class=\"chat-app\">\n    <div id=\"plist\" class=\"people-list\">\n        <!-- <div class=\"input-group\">\n            <div class=\"input-group-prepend\">\n                <span class=\"input-group-text\"><i class=\"fa fa-search\"></i></span>\n            </div>\n            <input type=\"text\" class=\"form-control\" placeholder=\"Search...\">\n        </div> -->\n        <ul *ngFor=\"let item of userlist\"  class=\"list-unstyled chat-list\">\n\n            <li *ngIf=\"item.Id!==userId\" [routerLink]=\"['/chatbox']\" [queryParams]=\"{uid: item.Id}\" class=\"clearfix\">\n                <img src=\"{{item.ImageUrl}}\" alt=\"avatar\">\n                <div class=\"about\">\n                    <div class=\"name\">{{item.Name}}</div>\n                     <div class=\"status\">  {{item?.City}}, {{item?.State}} </div>\n                </div>\n                <i  class=\"fa fa-angle-right\"></i>\n            </li>\n\n\n        </ul>\n    </div>\n\n</div>\n","import { SocialAuthentication } from './../../Model/User/SocialAuthentication';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { SignalrService } from '../../services/signalr.service';\nimport {Location} from '@angular/common';\nimport { TimeagoIntl } from 'ngx-timeago';\nimport {strings as englishStrings} from 'ngx-timeago/language-strings/en';\nimport { JobPostService } from '../../services/JobPost/JobPost.service';\nimport { JobModel } from '../../Model/Job/JobModel';\nimport { JobMessages } from '../../Model/Message/JobMessages';\nimport { JobChatService } from '../../services/Chat/JobChat/JobChat.service';\nimport { HotToastService } from '@ngneat/hot-toast';\n@Component({\n  selector: 'app-JobChat',\n  templateUrl: './JobChat.component.html',\n  styleUrls: ['./../Chatbox/Chatbox.component.scss']\n})\nexport class JobChatComponent implements OnInit {\n  senderId!: number;\n  recipientId!: number;\n  jobId!:number;\n  job!:JobModel;\n  user!: SocialAuthentication;\n  messages: Array<any>=[];\n  jobMessages:any[]=[];\n  isSending:boolean=false;\n  constructor(\n    intl: TimeagoIntl,\n    private _jobServices:JobPostService,\n    private _jobchatServices:JobChatService,\n    public _signalR:SignalrService,\n    private route: ActivatedRoute,\n    private _location: Location,\n    private toast: HotToastService\n  ) {\n    intl.strings = englishStrings;\n    intl.changes.next();\n    let user = JSON.parse(localStorage.getItem(\"user\")!);\n    this.route.queryParams.subscribe((params) => {\n      this.jobId = params[\"jobId\"];\n      this.senderId = params[\"senderId\"];\n      this.recipientId = params[\"recipientId\"];\n    });\n    this.LoadJobDetailsById();\n    this.getJobChat();\n    this.UpdateSeenResponces();\n  }\n  ngOnInit() {\n    setInterval(()=>{\n      this.getJobChat();\n    },2000)\n  }\n  getJobChat(){\n    this._jobchatServices.getJobchatList(this.jobId,this.senderId,this.recipientId).subscribe((data:any)=>{\n      this.jobMessages=data;\n    })\n  }\n  LoadJobDetailsById(){\n    this._jobServices.GetJobById(this.jobId).subscribe((data:any)=>{\n      this.job=data[0];\n    })\n  }\n\n  SendMsg():any {\n    let message = (document.getElementById(\"msg\") as HTMLInputElement).value;\n    if(message==\"\")\n    return this.toast.info('please type to send.', {\n      position: 'top-center',\n    });\n    this.isSending=true;\n\n    let messageObj = {\n      JobId:this.jobId,\n      SenderId: this.senderId,\n      SenderContent:message,\n      RecipientId: this.recipientId,\n      Content: message,\n      MessageSent:new Date()\n    };\n    this._signalR.broadcastJobMessage(messageObj);\n    (document.getElementById(\"msg\") as HTMLInputElement).value=\"\";\n     this._signalR.sendMessageToJobApi(this.jobId,this.recipientId,this.senderId,messageObj).subscribe((data:any)=>{\n       this.isSending=false;\n\n     },err=>{\n       this.isSending=false;\n\n     })\n  }\n\n  UpdateSeenResponces(){\n    this._jobchatServices.updateJobReponcesCount(this.jobId,this.recipientId,this.senderId).subscribe(()=>{});\n  }\n   //Back loacation History\n   backClicked() {\n    this._location.back();\n  }\n}\n","<div class=\"chat-app\">\n  <div class=\"chat_top_sec\">\n      <div class=\"back_arrow_chat\">\n          <i (click)=\"backClicked()\" aria-hidden=\"true\" class=\"back fa fa-2x fa fa-angle-left\"></i>\n      </div>\n      <div class=\"tp_user\">\n          <a *ngIf=\"job?.ImagesUrl\" [routerLink]=\"['/jobDetails']\" [queryParams]=\"{target: job?.Id}\" data-toggle=\"modal\" data-target=\"#view_info\">\n              <img src=\"{{job?.ImagesUrl}}\" alt=\"hooz\">\n          </a>\n          <h2>You are messaging to Job Id {{job?.Id}}</h2>\n      </div>\n  </div>\n  <div *ngIf=\"job\" class=\"chat\">\n      <div class=\"chat-header clearfix\">\n\n      </div>\n      <div  class=\"chat-history\">\n          <ul *ngFor=\"let item of jobMessages\" class=\"m-b-0\">\n              <li *ngIf=\"item.SenderContent==null\" class=\"clearfix\">\n                  <div class=\"message-data\">\n                      <img src=\"{{item?.RecipientPhotoUrl}}\" alt=\"avatar\">\n                      <div class=\"message other-message\"> {{item.Content}}</div>\n                  </div>\n                  <div class=\"message-data-time\" timeago [date]=\"item.MessageSent\"></div>\n              </li>\n              <li *ngIf=\"item.SenderContent!=null\" class=\"clearfix\">\n                  <div class=\"md_chat\">\n                      <div class=\"message my-message\">{{item.Content}}</div>\n\n                      <div class=\"message-data-time\" timeago [date]=\"item.MessageSent\"></div>\n                  </div>\n              </li>\n\n          </ul>\n          <span class=\"message-sending\" *ngIf=\"isSending\">sending...</span>\n      </div>\n\n      <div class=\"chat-message_btn clearfix\">\n          <!-- <div class=\"input-group-prepend\">\n              <img class=\"img send\" src=\"./../../../assets/Logo/upload.svg\" alt=\"img\">\n          </div> -->\n          <input (keyup.enter)=\"SendMsg()\" type=\"text\" class=\"form-control\" id=\"msg\" value=\"\" placeholder=\"Enter text here...\">\n          <div class=\"send_wrap\">\n              <img  (click)=\"SendMsg()\" class=\"img send\" src=\"./../../../assets/Logo/send.svg\" alt=\"img\">\n          </div>\n      </div>\n  </div>\n</div>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { JobModel } from '../../Model/Job/JobModel';\nimport { SocialAuthentication } from '../../Model/User/SocialAuthentication';\nimport { JobPostService } from '../../services/JobPost/JobPost.service';\nimport {Location} from '@angular/common';\nimport swal from 'sweetalert2';\nimport { UserJobs } from '../../Model/Job/UserJobs';\nimport { ReportJobService } from '../../services/JobPost/ReportJob.service';\nimport { JobResponces } from '../../Model/Job/JobResponces';\nimport { NavbarCommunicationService } from '../../Shared/services/NavbarCommunication.service';\nimport { ClipboardService } from 'ngx-clipboard'\nimport { HotToastService } from '@ngneat/hot-toast';\nimport { TimeagoIntl } from 'ngx-timeago';\nimport {strings as englishStrings} from 'ngx-timeago/language-strings/en';\nimport { SharedService } from 'src/app/services/SharedServices/Shared.service';\nimport { Meta, Title } from '@angular/platform-browser';\nimport { SeoServiceService } from 'src/app/services/SeoService.service';\n@Component({\n  selector: 'app-JobDetail',\n  templateUrl: './JobDetail.component.html',\n  styleUrls: ['./JobDetail.component.scss']\n})\nexport class JobDetailComponent implements OnInit {\njob!:JobModel;\njobId:number=0;\nloggedUserId!:number;\nloggeduser!: SocialAuthentication;\nuserJob!:UserJobs;\nisJobAdded:boolean=false;\nIsOnResponces:boolean=false;\ntotalResponces:number=0;\njobResponces:JobResponces[]=[];\npublic sharedLink: string='';\nisCopied!:boolean;\npublic Des:string=JSON.stringify(localStorage.getItem('des'));\nmetaDescription:string='Details jobs here'\n  constructor(private _jobServices:JobPostService,\n    private title:Title,\n    intl: TimeagoIntl,\n    private navServices:NavbarCommunicationService,\n    private _reportServices:ReportJobService,\n    private activatedRoute: ActivatedRoute,\n    private _clipboardService: ClipboardService,\n    private toast: HotToastService,\n    private _navigaterouter:Router,\n    private _shareService:SharedService,\n   private _location: Location) {\n     this.title.setTitle(this.Des);\n     \n     this._shareService.checkInterNetConnection();\n      intl.strings = englishStrings;\n    intl.changes.next();\n\n      this.activatedRoute.queryParams.subscribe(params => {\n       this.jobId = params['target'];\n        this.LoadJobDetailsById(this.jobId);\n        this.loadUserData();\n      });\n\n  }\n  //Load Basic User Data\n  loadUserData(){\n    if (localStorage.getItem('user')) {\n      this.loggeduser = JSON.parse(localStorage.getItem('user')!);\n      this.loggedUserId = this.loggeduser.Id;\n      this.loadResponcesData(this.loggedUserId);\n    }\n  }\n\n\n  ngOnInit() {\n\n    setInterval(() => {\n     this.loadResponcesData(this.loggedUserId);\n    }, 2000);\n  }\n  showToast() {\n    this.toast.success('Link copied!', {\n      position: 'top-center',\n    });\n  }\n  LoadJobDetailsById(id:number){\n    this._jobServices.GetJobById(id).subscribe((data:any)=>{\n      this.job=data[0];\n      this.IsAddedJob(this.loggedUserId,this.jobId);\n\n    })\n\n  }\n\n\n  loadResponcesData(userId:number){\n    this._jobServices.GetResponceCount(this.jobId,userId).subscribe((data:any)=>{\n      this.totalResponces=data;\n    })\n  }\n\n  //Job status update\n  UpdateStatus($event:any){\n    swal.fire({\n      text: `Are you sure to update status to ${$event.target.value}`,\n      showDenyButton: true,\n      confirmButtonText: 'Yes',\n      denyButtonText: `No`,\n    }).then((result) => {\n      /* Read more about isConfirmed, isDenied below */\n      if (result.isConfirmed) {\n        this._jobServices.UpdateJobStatus(this.jobId,$event.target.value).subscribe(()=>{\n          swal.fire('Job status updated successfully!', '', 'success')\n        },err=>{\n          console.log(err);\n        })\n      } else if (result.isDenied) {\n        this._navigaterouter.navigateByUrl('/jobDetails/'+this.jobId);\n      }\n    })\n  }\n\n  //Check is this job added already\n  IsAddedJob(userId: number, jobId: number) {\n    this._jobServices.IsAddedJob(userId,jobId).subscribe((data:any)=>{\n      if(data.Status==200){\n       this.isJobAdded=false;\n      }else{\n        this.isJobAdded=true;\n      }\n    })\n  }\n  // Job Added\n  AddToJob(){\n    let userJob={\n      jobModelId:this.jobId,\n      socialAuthenticationId:this.loggedUserId\n    };\n    swal.fire({\n      text:'Please wait.. Adding job',\n      showConfirmButton:false,\n      icon:'info'\n    })\n    this._jobServices.AddJobToUser(userJob).subscribe((data:any)=>{\n      if(data._responce.Status==422){\n        swal.fire(`Job ${this.jobId} removed successfully!`, '', 'info')\n        this.IsAddedJob(this.loggedUserId,this.jobId);\n      }else{\n        swal.fire(`Job ${this.jobId} Added successfully!`, '', 'success')\n        this.IsAddedJob(this.loggedUserId,this.jobId);\n      }\n    },err=>{\n      console.log(err);\n    })\n    // swal.fire({\n    //   text: `Confirm to add Job Post Id: ${this.job.Id}`,\n    //   showDenyButton: true,\n    //   confirmButtonText: 'Yes',\n    //   confirmButtonColor:'#00fa9a',\n    //   denyButtonText: `No`,\n    //   denyButtonColor:'black'\n    // }).then((result) => {\n    //   /* Read more about isConfirmed, isDenied below */\n    //   if (result.isConfirmed) {\n\n    //   } else if (result.isDenied) {\n\n    //   }\n    // })\n  }\n\n  // Job Removed\n  RemoveToJob(){\n    let userJob={\n      jobModelId:this.jobId,\n      socialAuthenticationId:this.loggedUserId\n    };\n    swal.fire({\n      text:'Please wait.. Removing job',\n      showConfirmButton:false,\n      icon:'info'\n    })\n    this._jobServices.AddJobToUser(userJob).subscribe((data:any)=>{\n      if(data._responce.Status==422){\n        swal.fire(`Job ${this.jobId} removed successfully!`, '', 'info')\n        this.IsAddedJob(this.loggedUserId,this.jobId);\n      }else{\n\n      }\n    },err=>{\n      console.log(err);\n    })\n  }\n\n  //Edit Job\n  Edit(jobId:any){\n  sessionStorage.setItem(\"EditJobId\",jobId);\n  this._navigaterouter.navigate(['/jobEdit'])\n  }\n  ResponceTab(){\n    this.IsOnResponces=!this.IsOnResponces;\n  }\n  Report(){\n    swal.fire({\n      title: `Report Post`,\n      input: 'textarea',\n      showDenyButton: true,\n      confirmButtonText: 'Report',\n      denyButtonText: `Cancel`\n    }).then((result) => {\n      /* Read more about isConfirmed, isDenied below */\n      if (result.isConfirmed) {\n        let reportJob={\n          jobModelId:this.jobId,\n          socialAuthenticationId:this.loggedUserId,\n          Isusue:result.value\n        };\n        swal.fire({\n          text:'Please wait... Reporting',\n          showConfirmButton:false,\n          icon:'info'\n        })\n        this._reportServices.ReportJob(reportJob).subscribe((data:any)=>{\n          swal.fire(`Job ${this.job.Id} Reported!`, '', 'success')\n        },err=>{\n          console.log(err);\n        })\n      } else if (result.isDenied) {\n       // swal.fire('Changes are not saved', '', 'info')\n      }\n    })\n  }\n  //Back loacation History\n  backClicked() {\n    this._location.back();\n  }\n  hideEvent(){\n    this.navServices.Toggle();\n }\n public shareFB() {\n  return window.open('https://www.facebook.com/sharer/sharer.php?'+'u=http://hoozonline.com/jobDetails?target='+this.jobId,\"Hooz\",\n  `scrollbars=no,resizable=no,status=no,location=no,toolbar=no,menubar=no,\n        width=600,height=300,left=100,top=100`\n  );\n}\n\npublic shareTwitter() {\n  return window.open('http://twitter.com/share?'+'url=http://hoozonline.com/jobDetails?target='+this.jobId, \"Hooz\",\n  `scrollbars=no,resizable=no,status=no,location=no,toolbar=no,menubar=no,\n        width=600,height=300,left=100,top=100`);\n}\npublic shareWhatsApp() {\n  return window.open(\n    \"https://api.whatsapp.com/send?text=http://hoozonline.com/jobDetails?target=\" +\n    this.jobId,\n    \"_blank\"\n  );\n}\n\n//Shared Link\nGetSharedLink() {\n  this.sharedLink=\"http://hoozonline.com/jobDetails?target=\"+this.jobId;\n  this._clipboardService.copy(this.sharedLink);\n  this.showToast();\n}\nRedirectToUser(userId:number){\n  this._navigaterouter.navigate(['/profile'], { queryParams: {target: userId}});\n}\n}\n","<div (click)=\"hideEvent()\" class=\"main_cnt_wrap\">\n  <div  class=\"back_arrow\">\n    <i  (click)=\"backClicked()\"  class=\"back fa fa-2x fa-arrow-left\" aria-hidden=\"true\"></i>\n    <!-- <h3 class=\"hc1\">Job Detail</h3> -->\n  </div>\n  <!--  Tab Toggle -->\n  <div *ngIf=\"loggedUserId==job?.User?.Id\" class=\"container-sm mt-0 mb-4\">\n    <div class=\"row col-sm-12\">\n        <div class=\"d-flex switch_button_wrap\">\n          <div class=\"d-flex flex-row justify-content-between\">\n            <div   class=\"switch-button\">\n              <input (change)=\"ResponceTab()\" class=\"switch-button-checkbox\" type=\"checkbox\" />\n              <label  class=\"switch-button-label\" for=\"\"><span class=\"switch-button-label-span\">Post</span>\n              </label>\n              <label  class=\"ll\" for=\"\">\n                <span>\n                  Response\n                 <span *ngIf=\"totalResponces!=0\" class=\"badge rounded-pill bg-Responce\">\n                    {{totalResponces}}\n                  </span>\n              </span>\n              </label>\n\n            </div>\n          </div>\n        </div>\n    </div>\n  </div>\n\n  <div class=\"my_container\">\n    <div id=\"custom-button\" class=\"img_wrap desk_view left_sec\">\n\n        <div style=\"cursor: pointer\" data-bs-toggle=\"modal\" data-bs-target=\"#exampleModal\"  *ngIf=\"job?.ImagesUrl\">\n          <img class=\"img img-responsive img-fluid\" [src]=\"job?.ImagesUrl\" alt=\"post image\" />\n        </div>\n    </div>\n    <!-- User Sections -->\n      <div  *ngIf=\"IsOnResponces==false\" class=\"right_sec\">\n        <div class=\"d-flex job_details\">\n          <div  class=\"user_details\">\n            <div class=\"icon\">\n              <img class=\"rounded-circle img-fluid\"\n                [src]=\"job?.IsAnonymous==false?job?.User?.UserImage:job?.AnonmousUserPic\"/>\n            </div>\n            <div class=\"c-details\">\n              <h6 (click)=\"RedirectToUser(job.User.Id)\" *ngIf=\"job?.IsAnonymous==false\">{{job?.User?.Name}}  <span timeago></span></h6>\n              <h6 *ngIf=\"job?.IsAnonymous==true\">Anonymous  <span timeago ></span></h6>\n            </div>\n          </div>\n          <div class=\"share_sec\">\n            <div class=\"dropdown\">\n                <span><img class=\"img share\" src=\"./../../../assets/Logo/3dots.svg\" /></span>\n                <div class=\"dropdown-content JobdetailDroupdown mt-0\">\n                  <a *ngIf=\"loggedUserId!=job?.User?.Id && loggedUserId && isJobAdded\" style=\"cursor: pointer;\" (click)=\"AddToJob()\">Add to My Jobs</a>\n                  <a *ngIf=\"loggedUserId!=job?.User?.Id && loggedUserId && !isJobAdded\" style=\"cursor: pointer;\" (click)=\"RemoveToJob()\">Remove Job</a>\n                  <a *ngIf=\"loggedUserId!=job?.User?.Id && loggedUserId\" style=\"cursor: pointer;\" (click)=\"Report()\">Report</a>\n                  <a  data-bs-toggle=\"modal\" data-bs-target=\"#staticBackdrop\" style=\"cursor: pointer;\">Share</a>\n                </div>\n            </div>\n          </div>\n        </div>\n\n          <!-- Section-2 Job Status -->\n          <div class=\"\">\n            <!-- If Other Job Details -->\n            <div *ngIf=\"loggedUserId!=job?.User?.Id\" class=\"job_status\">\n              <div class=\"title\">\n                <p>Job Status</p>\n              </div>\n              <div class=\"job_opt\">\n                <div class=\"select\">\n                  <div class=\"select__field\">\n                    {{job?.JobStatus}}\n                  </div>\n                </div>\n              </div>\n              <!-- <div *ngIf=\"loggedUserId!=job?.User?.Id\"  class=\"chat_sec\">\n                <button  [routerLink]=\"['/jobchatbox']\" [queryParams]=\"{jobId: job.Id,senderId:loggedUserId,recipientId:job.User.Id}\" type=\"button\" class=\"btn\">Chat</button>\n              </div> -->\n            </div>\n\n             <!-- If Other Job Details -->\n             <div *ngIf=\"loggedUserId==job?.User?.Id\" class=\"job_status\">\n              <div class=\"title\">\n                <p>Job status</p>\n              </div>\n              <div class=\"job_opt\">\n                 <div class=\"select\">\n                  <i class=\"fa fa-caret-down\"></i>\n                     <select (change)=\"UpdateStatus($event)\" name=\"nameValueSelect\" class=\"select__field\" required>\n                         <option [selected]=\"job?.JobStatus==='OPEN'\" value=\"OPEN\">Open</option>\n                         <option [selected]=\"job?.JobStatus==='ON HOLD'\" value=\"ON HOLD\">On hold</option>\n                         <option [selected]=\"job?.JobStatus==='CLOSED'\" value=\"CLOSED\">Closed</option>\n                         <option [selected]=\"job?.JobStatus==='DELETED'\" value=\"DELETED\">Delete</option>\n                     </select>\n                   </div>\n              </div>\n\n              <div *ngIf=\"loggedUserId==job?.User?.Id\" class=\"edit_sec\">\n                  <button (click)=\"Edit(job.Id)\" type=\"button\" class=\"btn\">Edit</button>\n              </div>\n            </div>\n          </div>\n\n      <!-- Image Section-2 -->\n       <div class=\"\">\n        <div class=\"d-flex\">\n            <label id=\"custom-button\" class=\"img_wrap mob_view\">\n\n              <div class=\"overlay_bg\">\n                <img class=\"img img-responsive img-fluid\" [src]=\"job?.ImagesUrl\" alt=\"job image\" />\n              </div>\n          </label>\n        </div>\n      </div>\n\n      <!-- Job Descriptions -->\n      <div class=\"job_des\">\n          <p>{{job?.Descriptions}}</p>\n      </div>\n\n      <!-- Locations -->\n      <div class=\"locations\">\n        <!-- <label for=\"exampleInputPassword1\"  class=\"form-label\">Location</label> -->\n        <p>{{job?.Address}}</p>\n    </div>\n\n      <!-- Tags -->\n      <div class=\"badgeTagWrap\" >\n        <div *ngFor=\"let item of job?.Tags\" class=\"badgeTag\" >\n          {{item.TagName}}\n        </div>\n      </div>\n\n    </div>\n    <div *ngIf=\"IsOnResponces==true\"  class=\"right_sec\">\n      <div class=\"d-flex job_details\">\n        <app-JobResponce></app-JobResponce>\n      </div>\n\n     </div>\n  </div>\n\n\n\n</div>\n\n<!-- SHARE MODAL -->\n <div class=\"modal fade \" id=\"staticBackdrop\" data-bs-backdrop=\"static\" data-bs-keyboard=\"false\" tabindex=\"-1\" aria-labelledby=\"staticBackdropLabel\" aria-hidden=\"true\">\n  <div class=\"modal-dialog modal-dialog-centered modal-dialog-scrollable \">\n    <div class=\"modal-content ShareModel\">\n      <div class=\"modal-header\">\n        <h5 class=\"modal-title\" id=\"staticBackdropLabel\">Share with</h5>\n        <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n      </div>\n      <div class=\"modal-body\">\n        <div class=\"row\">\n          <div class=\"social-buttons\">\n            <a (click)=\"shareFB()\" class=\"social-buttons__button social-button social-button--facebook\" aria-label=\"Facebook\">\n              <i class=\"fab fa-facebook-f\"></i>\n            </a>\n            <a (click)=\"shareTwitter()\" class=\"social-buttons__button social-button social-button--twitter\" aria-label=\"Twitter\">\n              <i class=\"fab fa-twitter\"></i>\n            </a>\n            <a (click)=\"GetSharedLink()\"\n              class=\"social-buttons__button social-button social-button--snapchat\" aria-label=\"SnapChat\">\n              <i class=\"fa fa-link\"></i>\n            </a>\n            <a  (click)=\"shareWhatsApp()\" class=\"social-buttons__button social-button social-button--steam\" aria-label=\"Whatsapp\">\n              <i class=\"fab fa-whatsapp\"></i>\n            </a>\n          </div>\n\n\n        </div>\n      </div>\n\n    </div>\n  </div>\n</div>\n\n\n\n<!--Image Modal -->\n<div class=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n  <div class=\"modal-dialog\">\n    <div class=\"modal-content\">\n\n      <div class=\"modal-body\">\n        <img class=\"img img-responsive img-fluid\" [src]=\"job?.ImagesUrl\" alt=\"job image\" />\n      </div>\n\n    </div>\n  </div>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { JobModel } from '../../Model/Job/JobModel';\nimport { HotToastService } from '@ngneat/hot-toast';\nimport { Location } from '@angular/common';\nimport { SharedService } from '../../services/SharedServices/Shared.service';\nimport { JobPostService } from '../../services/JobPost/JobPost.service';\nimport { Router } from '@angular/router';\nimport { NavbarCommunicationService } from '../../Shared/services/NavbarCommunication.service';\n @Component({\n  selector: 'app-JobEdit',\n  templateUrl: './JobEdit.component.html',\n  styleUrls: ['../JobPost/JobPost.component.scss']\n})\nexport class JobEditComponent implements OnInit {\n  public btnLoader!: boolean;\n  jobPostForm!:FormGroup;\n  jobModel!:JobModel;\n  public imagePath='';\n  imgURL: any;\n  filetoPost:any;\n  public message!: string;\n  public Tagmessage!: string;\n  ischeckedAnonymously:boolean=false;\n  ischeckedPublic:boolean=true;\n  userId:number;\n  editJobId:number=0;\n  latitude!: number;\n  longitude!: number;\n  constructor(private fb:FormBuilder,\n    private _jobServices:JobPostService,\n    private navServices:NavbarCommunicationService,\n    private _router:Router,\n    private toast: HotToastService,\n    private _sharedServices:SharedService,\n    private _location: Location) {\n    this._sharedServices.checkInterNetConnection();\n    let user= JSON.parse(localStorage.getItem('user')!);\n    this.userId=user.Id;\n   this.editJobId = parseInt(sessionStorage.getItem('EditJobId')!);\n   }\n\n  ngOnInit() {\n    this.createJobPostForm();\n    this.loadJobEditDetails(this.editJobId);\n  }\n  createJobPostForm() {\n    this.jobPostForm = this.fb.group({\n      Descriptions: ['',Validators.required],\n      ImagesUrl:[''],\n      Address:[''],\n      Latitude:[''],\n      Longitude:[''],\n      IsAnonymous:[false],\n      IsPublic:[true]\n    })\n  }\n\n   loadJobEditDetails(jobId:number) {\n     this._jobServices.GetJobById(jobId).subscribe((data: any) => {\n     this.jobModel=data[0];\n       this.jobPostForm.controls['Descriptions'].setValue(this.jobModel.Descriptions);\n       this.jobPostForm.controls['IsAnonymous'].setValue(this.jobModel.IsAnonymous);\n       this.jobPostForm.controls['IsPublic'].setValue(this.jobModel.IsPublic);\n       this.jobPostForm.controls['ImagesUrl'].setValue(this.jobModel.ImagesUrl);\n       this.jobPostForm.controls['Address'].setValue(this.jobModel.Address);\n       this.ischeckedAnonymously = this.jobModel.IsAnonymous;\n       this.ischeckedPublic = this.jobModel.IsPublic;\n       this.imgURL = this.jobModel.JobDetailImage;\n     })\n   }\n\n   public uploadFile = (jobId:number,files:any) => {\n    if (files.length === 0)\n    return;\n\n    let fileToUpload = <File>files[0];\n    const formData = new FormData();\n    formData.append('file', fileToUpload, fileToUpload.name);\n   this._jobServices.AddPostImages(jobId,formData).subscribe(()=>{\n    this.btnLoader=false;\n    this.showToast();\n    this._router.navigate(['/joblist'], { queryParams: {target: 'MyPost'}});\n   },error=>{\n     console.log(error);\n   })\n  }\n\n  FileUpload(files:any): void {\n    if (files.length === 0)\n      return;\n\n    var mimeType = files[0].type;\n    if (mimeType.match(/image\\/*/) == null) {\n      this.message = \"Only images are supported.\";\n      return;\n    }\n\n    var reader = new FileReader();\n    this.imagePath = files;\n    reader.readAsDataURL(files[0]);\n    reader.onload = (_event) => {\n      this.imgURL = reader.result;\n      this.filetoPost=files;\n      this.message = \"\";\n\n    }\n  }\n\n\n  changePostAnonymously() {\n    this.ischeckedAnonymously=!this.ischeckedAnonymously;\n    this.jobPostForm.controls['IsAnonymous'].setValue(this.ischeckedAnonymously);\n  }\n  changePostPublic(){\n    this.ischeckedPublic=!this.ischeckedPublic;\n    this.jobPostForm.controls['IsPublic'].setValue(this.ischeckedPublic);\n  }\n\n  showToast() {\n    this.toast.success('Job update Successfully', {\n      position: 'top-center',\n    });\n  }\n  AddJobPost() {\n    this.btnLoader=true;\n    this.jobModel = Object.assign({}, this.jobPostForm.value);\n    this._jobServices.UpdateJobPost(this.editJobId,this.jobModel).subscribe((data:any)=>{\n      if(this.filetoPost==undefined){\n        this.btnLoader = false;\n        this._router.navigate(['/joblist'], { queryParams: {target: 'MyPost'}});\n        return this.showToast();\n      }\n      this.uploadFile(this.editJobId, this.filetoPost);\n    })\n  }\n\n   //Back loacation History\n   backClicked() {\n    this._location.back();\n  }\n  hideEvent(){\n    this.navServices.Toggle();\n }\n}\n","<div (click)=\"hideEvent()\" class=\"main_cnt_wrap\">\n  <div  class=\"back_arrow\">\n    <i  (click)=\"backClicked()\" class=\"back fa fa-2x fa-arrow-left\" aria-hidden=\"true\"></i>\n  </div>\n\n  <div class=\"jobpost_wrap\">\n    <div class=\"jobpost_top\">\n      <div class=\"j_left\">\n        <p>Update YOUR REQUIREMENT</p>\n        <h2>Update post</h2>\n      </div>\n\n      <div class=\"j_right\">\n        <button type=\"submit\"   form=\"postForm\" id=\"post\" [disabled]=\"!jobPostForm.valid || btnLoader\"  class=\"btn btn-hoozOn\">\n          <span class=\"button-content\">\n            <span *ngIf=\"this.btnLoader\"  class=\"load-text\"> Updating...</span>\n            <span *ngIf=\"!this.btnLoader\" class=\"btn-text\"> Update</span>\n          </span>\n        </button>\n      </div>\n    </div>\n\n    <div class=\"jobpost_main\">\n        <form (keydown.enter)=\"$event.preventDefault()\" id=\"postForm\" [formGroup]?=\"jobPostForm\"   (ngSubmit)=\"AddJobPost()\">\n          <div class=\"jobpost_left\">\n            <label id=\"custom-button\" class=\"add_post\">\n              <div  *ngIf=\"!imgURL && !jobModel.ImagesUrl==null\">\n                <i  class=\"fas fa-plus\"></i>\n                <p>Add image</p>\n              </div>\n              <div *ngIf=\"imgURL\" class=\"ap_img_wrp\">\n                <img [src]=\"imgURL\" alt=\"your image\" />\n              </div>\n              <input  formControlName=\"ImagesUrl\" #file id=\"real-file\" (change)=\"FileUpload(file.files)\" type=\"file\" size=\"60\" >\n            </label>\n            <small class=\"text text-danger\">{{message}}</small>\n          </div>\n\n          <div class=\"jobpost_right\">\n            <div class=\"mb-20\">\n              <label for=\"exampleInputEmail1\" class=\"form-label\">Add description*\n                <!-- <span class=\"smallDetails\"> Raise your issues, describe your requirements, ask for anything</span> -->\n              </label>\n              <textarea  type=\"text\"\n                formControlName=\"Descriptions\"\n                class=\"form-control one\" placeholder=\"What are you looking for?\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\">\n              </textarea>\n              <small\n              *ngIf=\"jobPostForm.get('Descriptions')!.hasError('required') && jobPostForm.get('Descriptions')!.touched\"\n              id=\"emailHelp\" class=\"form-text text text-danger\">Description is requires.</small>\n            </div>\n\n            <div class=\"mb-20 location\">\n                <label for=\"exampleInputPassword1\"  class=\"form-label\">Location</label>\n                <div class=\"location_sec\">\n                  <span id=\"location\" >{{this.jobModel.Address}}</span>\n                  <!-- <button class=\"btn btn-hoozOn-2\">Edit</button> -->\n                </div>\n            </div>\n\n            <div class=\"mb-20\">\n              <div class=\"form-check\">\n                <input class=\"form-check-input\" (change)=\"changePostAnonymously()\" [checked]=\"ischeckedAnonymously\" type=\"checkbox\" id=\"flexcheckboxDefault1\">\n                <label class=\"check\" for=\"flexcheckboxDefault1\">\n                  <i class=\"fa fa-check\" aria-hidden=\"true\"></i>\n                </label>\n                <div>\n                  <label class=\"form-label\" for=\"flexcheckboxDefault1\">\n                    Post Anonymously\n                  </label>\n                  <p class=\"parapost\">Post as anonymous user, creators information will not be shown</p>\n                </div>\n              </div>\n            </div>\n\n            <div class=\"mb-20\">\n              <div class=\"form-check\">\n                <input class=\"form-check-input\" (change)=\"changePostPublic()\" [checked]=\"ischeckedPublic\"  type=\"checkbox\" name=\"flexcheckDefault\" id=\"flexcheckboxDefault2\" checked>\n                <label class=\"check\" for=\"flexcheckboxDefault2\">\n                  <i class=\"fa fa-check\" aria-hidden=\"true\"></i>\n                </label>\n                <div>\n                  <label class=\"form-label\" for=\"flexcheckboxDefault2\">\n                    Post Locally\n                  </label>\n                  <p class=\"parapost\">Post will be shown to your nearby users only upto 80 kms</p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </form>\n    </div>\n\n      <!-- <div class=\"row\">\n        <div class=\"col-md-6\">\n          <p class=\"headingparapost\">Local or Global decides the reach of your post</p>\n          <div class=\"row\">\n            <div class=\"col-md-6\">\n            <div class=\"form-check\">\n              <input class=\"form-check-input\"   type=\"radio\" name=\"flexRadioDefault\" id=\"flexRadioDefault1\">\n              <label class=\"form-check-label\" for=\"flexRadioDefault1\">\n                Local\n              </label>\n            </div>\n            </div>\n            <div class=\"col-md-6\">\n            <div class=\"form-check\">\n              <input class=\"form-check-input\"   type=\"radio\" name=\"flexRadioDefault\" id=\"flexRadioDefault2\" checked >\n              <label class=\"form-check-label\" for=\"flexRadioDefault2\">\n                Global\n              </label></div>\n            </div>\n          </div>\n        </div>\n        <div class=\"col-md-6 col-sm-6\">\n          <div class=\"form-check\">\n            <p class=\"headingparapost1\">Set local post reach   <span id=\"rangeValue\">0&nbsp;kms</span></p>\n            <input class=\"range\" type=\"range\"   value=\"0\" min=\"0\" max=\"1000\" onChange=\"rangeSlide(this.value)\" onmousemove=\"rangeSlide(this.value)\"/>\n          </div>\n        </div>\n      </div> -->\n      <div class=\"post_button\">\n        <button type=\"submit\"   form=\"postForm\" id=\"post\" [disabled]=\"!jobPostForm.valid || btnLoader\"  class=\"btn btn-hoozOn\">\n          <span class=\"button-content\">\n            <span *ngIf=\"this.btnLoader\"  class=\"load-text\"> Updating...</span>\n            <span *ngIf=\"!this.btnLoader\" class=\"btn-text\"> Update</span>\n          </span>\n        </button>\n      </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { JobResponces } from '../../Model/Job/JobResponces';\nimport { Pagination } from '../../Model/Pagination';\nimport { SocialAuthentication } from '../../Model/User/SocialAuthentication';\nimport { JobPostService } from '../../services/JobPost/JobPost.service';\nimport swal from 'sweetalert2';\nimport { TimeagoIntl } from 'ngx-timeago';\nimport {strings as englishStrings} from 'ngx-timeago/language-strings/en';\nimport {Location} from '@angular/common';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { SharedService } from '../../services/SharedServices/Shared.service';\nimport { ReportJobService } from '../../services/JobPost/ReportJob.service';\nimport { NavbarCommunicationService } from '../../Shared/services/NavbarCommunication.service';\n@Component({\n  selector: 'app-JobList',\n  templateUrl: './JobList.component.html',\n  styleUrls: ['./JobList.component.scss']\n})\nexport class JobListComponent implements OnInit {\n  jobModel!: JobResponces;\n  jobModels: any[]=[];\n  pagination!: Pagination;\n  currentPage: number = 1;\n  itemsPerPage: number = 4;\n  user!: SocialAuthentication;\n  userId!: number;\n  isLogedIn: boolean = false;\n  isLoading: boolean = false;\n\n  //Scroll Variable\n  NotEmptPost: boolean = true;\n  notScrollY: boolean = true;\n\n  // TabToggleTrackVariable\n  IsOnJob: boolean = true;\n  JobStatus:string='OPEN';\n  constructor(private _jobServices: JobPostService,\n    intl: TimeagoIntl,\n    private _reportServices:ReportJobService,\n    private navServices:NavbarCommunicationService,\n    private activatedRoute: ActivatedRoute,\n    private _sharedServices:SharedService,\n    private _router:Router,\n    private _location: Location) {\n      this._sharedServices.checkInterNetConnection();\n      intl.strings = englishStrings;\n      intl.changes.next();\n     this.loadUserData();\n    }\n\n  ngOnInit() {\n  }\n\n  //Load Jobs Post Tab\n  LoadAllWithAddedJob(currentPage: number, itemsPerPage: number,Jobstatus:string) {\n    this._jobServices.GetAllWithAddedJob(this.userId, currentPage, itemsPerPage,Jobstatus)\n    .subscribe({\n      next:(res: any) => {\n        this.jobModel = res.result;\n        this.jobModels = res.result.data;\n        this.pagination = res.pagination;\n        this.isLoading = false;\n      }\n    })\n\n  }\n  //Load Post Tab\n  LoadAllPost(userId: number, currentPage: number, itemsPerPage: number,Jobstatus:string) {\n    this._jobServices.GetPostJob(userId, currentPage, itemsPerPage,Jobstatus)\n    .subscribe({\n      next:(res: any) => {\n        this.jobModel = res.result;\n        this.jobModels = res.result.data;\n        this.pagination = res.pagination;\n        if(this.jobModels.length===0){\n          this.NotEmptPost = false;\n        }\n      }\n    })\n  }\n\n  LoadNextPost() {\n    this.currentPage = this.currentPage + 1;\n    if (this.IsOnJob == true) {\n\n      this._jobServices.GetAllWithAddedJob(this.userId, this.currentPage, this.itemsPerPage,this.JobStatus).subscribe((res: any) => {\n        const newData = res.result.data;\n        this.isLoading = false;\n        if (newData.length === 0) {\n          this.NotEmptPost = false;\n        }\n\n        this.jobModels = this.jobModels.concat(newData);\n        this.notScrollY = true;\n        this.pagination = res.pagination;\n\n      },err=>{\n        this.isLoading=false;\n      })\n    } else {\n      this._jobServices.GetPostJob(this.currentPage, this.itemsPerPage).subscribe((res: any) => {\n        const newData = res.result.data;\n        this.isLoading = false;\n        if (newData.length === 0) {\n          this.NotEmptPost = false;\n        }\n\n        this.jobModels = this.jobModels.concat(newData);\n        this.notScrollY = true;\n        this.pagination = res.pagination;\n\n      },err=>{\n        this.isLoading=false;\n      })\n    }\n  }\n  onScroll() {\n    if (this.notScrollY && this.NotEmptPost) {\n      this.isLoading = true;\n      this.notScrollY = false;\n      this.LoadNextPost();\n    }\n\n  }\n\n    // Job Added\n    AddToJob(jobId:number){\n      swal.fire({\n        text: `Confirm to add Job Post Id: ${jobId}`,\n        showDenyButton: true,\n        confirmButtonText: 'Yes',\n        denyButtonText: `No`\n      }).then((result) => {\n        /* Read more about isConfirmed, isDenied below */\n        if (result.isConfirmed) {\n          let userJob={\n            jobModelId:jobId,\n            socialAuthenticationId:this.userId\n          };\n          swal.fire({\n            text:'Please wait.. Adding job',\n            showConfirmButton:false,\n            icon:'info'\n          })\n          this._jobServices.AddJobToUser(userJob).subscribe((data:any)=>{\n            swal.fire(`Job ${jobId} Added successfully!`, '', 'success')\n          },err=>{\n            console.log(err);\n          })\n        } else if (result.isDenied) {\n\n        }\n      })\n    }\n\n    //Report Job\n    Report(jobId:number){\n      swal.fire({\n        title: `Report Post`,\n        input: 'textarea',\n        showDenyButton: true,\n        confirmButtonText: 'Report',\n        denyButtonText: `Cancel`\n      }).then((result) => {\n        /* Read more about isConfirmed, isDenied below */\n        if (result.isConfirmed) {\n          let reportJob={\n            jobModelId:jobId,\n            socialAuthenticationId:this.userId,\n            Isusue:result.value\n          };\n          swal.fire({\n            text:'Please wait... Reporting',\n            showConfirmButton:false,\n            icon:'info'\n          })\n          this._reportServices.ReportJob(reportJob).subscribe((data:any)=>{\n            swal.fire(`Job ${jobId} Reported!`, '', 'success')\n          },err=>{\n            console.log(err);\n          })\n        } else if (result.isDenied) {\n\n        }\n      })\n    }\n\n  //Checkbox toggle method\n  checkValue(event: any) {\n    this.isLoading=false;\n    this.IsOnJob = event;\n    this.currentPage = 1;\n    this.itemsPerPage = 4;\n    this.notScrollY = true;\n    this.NotEmptPost = true;\n    this.jobModels = [];\n    //this.jobModel = null;\n    if (this.IsOnJob == true) {\n      this.LoadAllWithAddedJob(this.currentPage, this.itemsPerPage,this.JobStatus);\n    } else {\n      this.LoadAllPost(this.user.Id, this.currentPage, this.itemsPerPage,this.JobStatus);\n    }\n  }\n  //Job status dropdown\n  JobStatusChange($event:any){\n    this.JobStatus=$event.target.value.trim();\n    this.currentPage=1;\n    this.itemsPerPage=4;\n    if(this.IsOnJob==true){\n      this.LoadAllWithAddedJob(this.currentPage, this.itemsPerPage,this.JobStatus);\n    }else{\n      this.LoadAllPost(this.user.Id,this.currentPage, this.itemsPerPage,this.JobStatus);\n    }\n  }\n\n   //Back loacation History\n   backClicked() {\n    this._location.back();\n  }\n\n\n  //Load Basic User Data\n  loadUserData(){\n    if (localStorage.getItem('user')) {\n      this.user = JSON.parse(localStorage.getItem('user')!);\n      this.userId = this.user.Id;\n      this.isLogedIn = true;\n      this.activatedRoute.queryParams.subscribe(params => {\n        const paramVal = params['target'];\n       if(paramVal=='MyPost'){\n       this.checkValue(false);\n       }else{\n        this.LoadAllWithAddedJob(this.currentPage, this.itemsPerPage,this.JobStatus);\n       }\n      });\n    } else {\n      this.isLogedIn = false;\n      window.location.href = '/login';\n    }\n\n  }\n  hideEvent(){\n    this.navServices.Toggle();\n }\n RedirectToJob(jobId:number){\n  this._router.navigate(['/jobDetails'], { queryParams: {target: jobId}});\n}\n}\n","<div (click)=\"hideEvent()\">\n  <div  class=\"back_arrow\">\n    <i  (click)=\"backClicked()\" class=\"back fa fa-2x fa-arrow-left\" aria-hidden=\"true\"></i>\n  </div>\n\n<!-- MAIN CONTENT -->\n<div class=\"job_list_wrap\">\n   <!-- User Sections -->\n   <!-- <h3 class=\"hc1\">Job List</h3> -->\n    <!--  Tab Toggle -->\n    <div class=\"container-sm mt-0 mb-1\">\n      <div class=\"row col-sm-12\">\n          <div class=\"d-flex switch_button_wrap\">\n            <div class=\"d-flex flex-row\">\n              <div class=\"switch-button\">\n                <input [(ngModel)]=\"!IsOnJob\" (change)=\"checkValue(IsOnJob?false:true)\" class=\"switch-button-checkbox\" type=\"checkbox\" />\n                <label  class=\"switch-button-label\" for=\"\"><span class=\"switch-button-label-span\">Jobs</span></label>\n              </div>\n            </div>\n          </div>\n      </div>\n    </div>\n   <div class=\"content\">\n      <div class=\"d-flex job_list_text\">\n          <div class=\"title\">\n            List of all posts with status\n          </div>\n          <div class=\"job_opt\">\n            <div class=\"select\">\n              <i class=\"fa fa-caret-down\"></i>\n              <select (change)=\"JobStatusChange($event)\" name=\"nameValueSelect\" class=\"select__field\" required>\n                  <option value=\"OPEN\">Open</option>\n                  <option value=\"ON HOLD\">On hold</option>\n                  <option value=\"CLOSED\">Closed</option>\n                  <option value=\"DELETED\">Delete</option>\n              </select>\n            </div>\n          </div>\n      </div>\n    <div infiniteScroll [infiniteScrollDistance]=\"7\" (scrolled)=\"onScroll()\" class=\"search-results\">\n    <div *ngFor=\"let item of jobModels; let i = index\">\n        <!-- post Sections -->\n        <div (click)=\"RedirectToJob(item.Id)\" class=\"job_list_item\">\n            <div id=\"custom-button\" class=\"img_wrap\">\n\n                <div class=\"overlay_bg\">\n                  <img [src]=\"item.JobDetailImage\" alt=\"hooz image\" />\n                </div>\n            </div>\n            <div class=\"right_sec\">\n              <div class=\"title\">\n                <span>{{item.Descriptions |  slice:0:50}}</span>\n                <i class=\"fa fa-angle-right\"></i>\n              </div>\n              <div class=\"bt_sec\">\n                <div *ngIf=\"item.Descriptions.length<=33\"><span timeago [date]=\"item?.CreatedBy\"></span></div>\n                <div *ngIf=\"item.Descriptions.length>=34\"><span timeago [date]=\"item?.CreatedBy\"></span></div>\n                <div *ngIf=\"!IsOnJob\" class=\"ResponceBadge\">Response&nbsp;\n                  <span *ngIf=\"item.TotalResponces>0\" class=\"badge rounded-pill bg-Responce\">{{item.TotalResponces}}</span>\n                  <span *ngIf=\"item.TotalResponces==0\" class=\"badge rounded-pill bg-NoResponce\">{{item.TotalResponces}}</span>\n                </div>\n              </div>\n            </div>\n        </div>\n    </div>\n    <div *ngIf=\"isLoading\" class=\"lds-ring\">\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <br><br>\n    </div>\n\n  </div>\n\n   </div>\n   <div *ngIf=\"!NotEmptPost\">\n    <br><br> <br>\n    <div class=\"col-md-12 d-flex justify-content-center\">\n      <div class=\"Search-result\">No Results</div>\n    </div>\n  </div>\n</div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { ComponentCanDeactivate } from './../../guard/activate-guard';\nimport { HostListener } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators }  from '@angular/forms';\nimport { JobModel } from '../../Model/Job/JobModel';\nimport { JobTags } from '../../Model/Job/JobTags';\nimport { TagMaster } from '../../Model/TagMaster';\nimport { JobPostService } from '../../services/JobPost/JobPost.service';\nimport { HotToastService } from '@ngneat/hot-toast';\nimport {Location} from '@angular/common';\nimport { Router } from '@angular/router';\nimport { SharedService } from '../../services/SharedServices/Shared.service';\nimport { TagService } from '../../services/Tags/Tag.service';\nimport { NavbarCommunicationService } from '../../Shared/services/NavbarCommunication.service';\nimport { MapsAPILoader } from '@agm/core';\nimport { Observable } from 'rxjs';\n\n var addressLocation='';\n@Component({\n  selector: 'app-JobPost',\n  templateUrl: './JobPost.component.html',\n  styleUrls: ['./JobPost.component.scss']\n})\nexport class JobPostComponent implements OnInit,ComponentCanDeactivate {\n  public btnLoader!: boolean;\n  jobPostForm!:FormGroup;\n  Tags:JobTags[]=[];\n  jobTag!:JobTags;\n  tagMaster!:TagMaster;\n  jobModel!:JobModel;\n  public imagePath='';\n  imgURL: any;\n  filetoPost:any;\n  public message!: string;\n  public Tagmessage!: string;\n  ischeckedAnonymously:boolean=false;\n  ischeckedPublic:boolean=true;\n  isPostClick:boolean=false;\n  userId!:number;\n  latitude!: number;\n  longitude!: number;\n  constructor(private fb:FormBuilder,\n    private navServices:NavbarCommunicationService,\n    private _jobServices:JobPostService,\n    private _tagService:TagService,\n    private toast: HotToastService,\n    private _router:Router,\n    private apiloader: MapsAPILoader,\n    private _sharedServices:SharedService,\n    private _location: Location) {\n      this.AskForLocation();\n      window.scrollTo(0,0);\n      this._sharedServices.checkInterNetConnection();\n    if(localStorage.getItem('user')){\n      let user= JSON.parse(localStorage.getItem('user')!);\n    this.userId=user.Id;\n    }else{\n      window.location.href='/login';\n    }\n   }\n\n  ngOnInit() {\n    this.createJobPostForm();\n    this.isPostClick=false;\n  }\n  @HostListener('window:beforeunload')\n  canDeactivate(): Observable<boolean> | boolean {\n    if(!this.isPostClick){\n      let description= this.jobPostForm.controls['Descriptions'].value;\n      if(description!=''){\n        return false;\n      }else\n      return true;\n    }else{\n      return true;\n    }\n  }\n  createJobPostForm() {\n    this.jobPostForm = this.fb.group({\n      UserId:[],\n      Descriptions: ['',Validators.required],\n      Tags:[''],\n      ImagesUrl:[''],\n      Address:[''],\n      Latitude:[''],\n      Longitude:[''],\n      IsAnonymous:[false],\n      IsPublic:[true]\n    })\n  }\n\n  changePostAnonymously() {\n    this.ischeckedAnonymously=!this.ischeckedAnonymously;\n    this.jobPostForm.controls['IsAnonymous'].setValue(this.ischeckedAnonymously);\n  }\n  changePostPublic(){\n    this.ischeckedPublic=!this.ischeckedPublic;\n    this.jobPostForm.controls['IsPublic'].setValue(this.ischeckedPublic);\n  }\n\n  showToast() {\n    this.toast.success('Job created Successfully', {\n      position: 'top-center',\n    });\n  }\n\n  AskForLocation(){\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition((position: any) => {\n          if (position) {\n              this.latitude = position.coords.latitude;\n              this.longitude = position.coords.longitude;\n                 this.apiloader.load().then(() => {\n                  let geocoder = new google.maps.Geocoder;\n                  let latlng = {\n                      lat: this.latitude,\n                      lng: this.longitude\n                  };\n\n                  geocoder.geocode({\n                      'location': latlng\n                  }, function(results, status) {\n                    if (status == google.maps.GeocoderStatus.OK) {\n                      if (results[1]) {\n                        addressLocation= results[1].formatted_address;\n                        window.document.getElementById('location')!.innerHTML=addressLocation;\n                      }\n                  }\n                    else {\n                          console.log('Not found');\n                      }\n                  });\n              });\n\n\n          }else{\n            this.showToast();\n            return;\n          }\n      })\n  }else{\n    this.toast.info('location not supported by this browser', {\n      position: 'top-center',\n    });\n  }\n  }\n  AddJobPost() {\n    if(this.Tags.length==0){\n      this.toast.warning('Tag is required!', {\n        position: 'top-center',\n      });\n      return;\n    }\n\n              this.btnLoader=true;\n              this.isPostClick=true;\n              this.jobPostForm.controls['UserId'].setValue(this.userId);\n              this.jobPostForm.controls['Tags'].setValue(this.Tags);\n              this.jobPostForm.controls[\"Latitude\"].setValue(this.latitude);\n              this.jobPostForm.controls[\"Longitude\"].setValue(this.longitude);\n              this.jobPostForm.controls['IsAnonymous'].setValue(this.ischeckedAnonymously);\n              this.jobPostForm.controls['IsPublic'].setValue(this.ischeckedPublic);\n              this.jobPostForm.controls['Address'].setValue(addressLocation);\n              this.jobModel = Object.assign({}, this.jobPostForm.value);\n              this._jobServices.AddJobPost(this.jobModel).subscribe((data: any) => {\n                if (this.filetoPost == undefined) {\n                  this._jobServices.AddPostImages(data.CreatedJob.Id, null).subscribe(() => {\n                  }, error => {\n                    console.log(error);\n                  })\n                  this.jobPostForm.controls['Tags'].setValue('');\n                  this.Tags = [];\n                  this.Tagmessage = '';\n                  this.btnLoader = false;\n                  this.imgURL = null;\n                  this.showToast();\n                  this.jobPostForm.reset();\n                  this._router.navigate(['/joblist'], { queryParams: {target: 'MyPost'}});\n                } else {\n                  this.uploadFile(data.CreatedJob.Id, this.filetoPost);\n                }\n\n              }, error => {\n                console.log(error);\n              })\n\n\n  }\n\n  public uploadFile = (jobId:number,files:any) => {\n    if (files.length === 0)\n    return;\n\n    let fileToUpload = <File>files[0];\n    const formData = new FormData();\n    formData.append('file', fileToUpload, fileToUpload.name);\n   this._jobServices.AddPostImages(jobId,formData).subscribe(()=>{\n    this.jobPostForm.controls['Tags'].setValue('');\n    this.Tags=[];\n    this.Tagmessage='';\n    this.btnLoader=false;\n    this.imgURL=null;\n    this.jobPostForm.reset();\n    this._router.navigate(['/joblist'], { queryParams: {target: 'MyPost'}});\n   },error=>{\n     console.log(error);\n   })\n  }\n\n  AddTagging() {\n    if(this.jobPostForm.controls['Tags'].value == ''){\n      this.toast.warning('Tag is required!', {\n        position: 'top-center',\n      });\n      return;\n    }\n    this.jobTag = {\n      TagName: this.jobPostForm.controls['Tags'].value.trim(),\n      TagMasterId: 0\n    };\n    this.Tags.push(this.jobTag);\n    this.Tagmessage = '';\n\n    // Add Tag To TagMaster for Later show suggetions\n    this.tagMaster = {\n      Id:0,\n      TagName: this.jobPostForm.controls['Tags'].value.trim()\n    };\n    this.jobPostForm.controls['Tags'].setValue(null);\n    this._tagService.AddTag(this.tagMaster).subscribe((data)=>{\n    },err=>{\n      console.log(\"Tag Adding to master Failed\");\n    });\n  }\n\n  RemoveTagging(item:string) {\n    this.Tags = this.Tags.filter(function (obj) {\n      return obj.TagName != item;\n    });\n  }\n\n  FileUpload(files:any): void {\n    if (files.length === 0)\n      return;\n\n    var mimeType = files[0].type;\n    if (mimeType.match(/image\\/*/) == null) {\n      this.message = \"Only images are supported.\";\n      return;\n    }\n\n    var reader = new FileReader();\n    this.imagePath = files;\n    reader.readAsDataURL(files[0]);\n    reader.onload = (_event) => {\n      this.imgURL = reader.result;\n      this.filetoPost=files;\n      this.message = \"\";\n    }\n  }\n   //Back loacation History\n   backClicked() {\n    this._location.back();\n  }\n\n  hideEvent(){\n    this.navServices.Toggle();\n }\n}\n","\n<div (click)=\"hideEvent()\" class=\"main_cnt_wrap\">\n  <div  class=\"back_arrow\">\n    <i  (click)=\"backClicked()\" class=\"back fa fa-2x fa-arrow-left\" aria-hidden=\"true\"></i>\n  </div>\n\n  <div class=\"jobpost_wrap\">\n      <div class=\"jobpost_top\">\n        <div class=\"j_left\">\n          <p>POST YOUR REQUIREMENT </p>\n          <h2>Create post</h2>\n        </div>\n        <div class=\"j_right\">\n          <button type=\"submit\"   form=\"postForm\" id=\"post\" [disabled]=\"!jobPostForm.valid || btnLoader\"  class=\"btn btn-hoozOn\">\n            <span class=\"button-content\">\n              <span *ngIf=\"this.btnLoader\"  class=\"spinner-border text-light spinner-border-sm\" role=\"status\"></span>\n              <span *ngIf=\"this.btnLoader\"  class=\"load-text\"> Posting...</span>\n              <span *ngIf=\"!this.btnLoader\" class=\"btn-text\">  Post</span>\n              <!-- <i *ngIf=\"!this.btnLoader\" class=\"fa fa-paper-plane\"></i> -->\n            </span>\n          </button>\n        </div>\n      </div>\n\n     <div class=\"jobpost_main\">\n        <form (keydown.enter)=\"$event.preventDefault()\" id=\"postForm\" [formGroup]=\"jobPostForm\"   (ngSubmit)=\"AddJobPost()\">\n          <div class=\"jobpost_left\">\n            <label id=\"custom-button\" class=\"add_post\">\n              <div  *ngIf=\"!imgURL\">\n                <i  class=\"fas fa-plus\"></i>\n                <p>Add image</p>\n              </div>\n              <div *ngIf=\"imgURL\" class=\"ap_img_wrp\">\n                <img [src]=\"imgURL\" alt=\"your image\" />\n              </div>\n              <input  formControlName=\"ImagesUrl\" #file id=\"real-file\" (change)=\"FileUpload(file.files)\" type=\"file\" size=\"60\" >\n              </label>\n              <small class=\"text text-danger\">{{message}}</small>\n          </div>\n\n          <div class=\"jobpost_right\">\n            <div class=\"mb-20\">\n              <label for=\"exampleInputEmail1\" class=\"form-label\">\n                Add description<sup>*</sup>\n              </label>\n              <textarea  type=\"text\"\n                formControlName=\"Descriptions\"\n                class=\"form-control one\" placeholder=\"What are you looking for?\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\">\n              </textarea>\n              <small\n                *ngIf=\"jobPostForm.get('Descriptions')!.hasError('required') && jobPostForm.get('Descriptions')!.touched\"\n                id=\"emailHelp\" class=\"form-text text text-danger\">Description is required.</small>\n            </div>\n\n            <div class=\"mb-20\">\n              <label for=\"exampleInputPassword1\" class=\"form-label form-label1\">Add tags<sup>*</sup></label>\n              <div class=\"add_tag\">\n                <input (keyup.enter)=\"AddTagging()\" formControlName=\"Tags\" placeholder=\" add tags to your post\"  class=\"form-control taginput\"  type=\"text\">\n                <button type=\"button\" (click)=\"AddTagging()\" class=\"btn btn-hoozOn-2\" id=\"showPassword\">Add</button>\n              </div>\n            </div>\n\n            <div class=\"badgeTagWrap\" >\n              <span *ngFor=\"let item of Tags\" class=\"badgeTag\">\n                {{item.TagName}} <i (click)=\"RemoveTagging(item.TagName)\" class=\"fa fa-times\" aria-hidden=\"true\"></i>\n              </span>\n            </div>\n\n            <div class=\"mb-20 location\">\n              <label for=\"exampleInputPassword1\"  class=\"form-label\">Location*</label>\n              <div class=\"location_sec\">\n                <span id=\"location\" >featching location...</span>\n                <!-- <button class=\"btn btn-hoozOn-2\">Edit</button> -->\n              </div>\n            </div>\n\n            <div class=\"mb-20\">\n              <div class=\"form-check\">\n                <input class=\"form-check-input\" (change)=\"changePostAnonymously()\" [checked]=\"ischeckedAnonymously\" type=\"checkbox\" id=\"flexcheckboxDefault1\">\n                <label class=\"check\" for=\"flexcheckboxDefault1\">\n                  <i class=\"fa fa-check\" aria-hidden=\"true\"></i>\n                </label>\n                <div>\n                  <label class=\"form-label\" for=\"flexcheckboxDefault1\">\n                    Post Anonymously\n                  </label>\n                  <p class=\"parapost\">Post as anonymous user, creators information will not be shown</p>\n                </div>\n              </div>\n            </div>\n\n            <div class=\"mb-20\">\n              <div class=\"form-check\">\n                <input class=\"form-check-input\" (change)=\"changePostPublic()\" [checked]=\"ischeckedPublic\"  type=\"checkbox\" name=\"flexcheckDefault\" id=\"flexcheckboxDefault2\" checked>\n                <label class=\"check\" for=\"flexcheckboxDefault2\">\n                  <i class=\"fa fa-check\" aria-hidden=\"true\"></i>\n                </label>\n                <div>\n                  <label class=\"form-label\" for=\"flexcheckboxDefault2\">\n                    Post Locally\n                  </label>\n                  <p class=\"parapost\">Post will be shown to your nearby users only upto 80 kms</p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </form>\n      </div>\n      <div class=\"post_button\">\n        <button type=\"submit\"   form=\"postForm\" id=\"post\" [disabled]=\"!jobPostForm.valid || btnLoader\"  class=\"btn btn-hoozOn\">\n          <span class=\"button-content\">\n            <span *ngIf=\"this.btnLoader\"  class=\"spinner-border text-light spinner-border-sm\" role=\"status\"></span>\n            <span *ngIf=\"this.btnLoader\"  class=\"load-text\"> Posting...</span>\n            <span *ngIf=\"!this.btnLoader\" class=\"btn-text\">  Post</span>\n            <!-- <i *ngIf=\"!this.btnLoader\" class=\"fa fa-paper-plane\"></i> -->\n          </span>\n        </button>\n      </div>\n\n    <!-- <div class=\"row\">\n    <div class=\"col-md-12\">\n      <div class=\"mt-4\">\n        <label for=\"exampleInputPassword1\"  class=\"form-label\">Location* &nbsp; </label>\n        <button class=\"EditBtn\"><i class=\"fas fa-pencil-alt\"></i></button>\n      <p id=\"location\" style=\"font-size: 12px; font-weight: bold;\"></p>\n      </div>\n    </div>\n    </div> -->\n      <div class=\"row\">\n\n      <!-- <div class=\"row\">\n        <div class=\"col-md-6\">\n          <p class=\"headingparapost\">Local or Global decides the reach of your post</p>\n          <div class=\"row\">\n            <div class=\"col-md-6\">\n            <div class=\"form-check\">\n              <input class=\"form-check-input\"   type=\"radio\" name=\"flexRadioDefault\" id=\"flexRadioDefault1\">\n              <label class=\"form-check-label\" for=\"flexRadioDefault1\">\n                Local\n              </label>\n            </div>\n            </div>\n            <div class=\"col-md-6\">\n            <div class=\"form-check\">\n              <input class=\"form-check-input\"   type=\"radio\" name=\"flexRadioDefault\" id=\"flexRadioDefault2\" checked >\n              <label class=\"form-check-label\" for=\"flexRadioDefault2\">\n                Global\n              </label></div>\n            </div>\n          </div>\n        </div>\n        <div class=\"col-md-6 col-sm-6\">\n          <div class=\"form-check\">\n            <p class=\"headingparapost1\">Set local post reach   <span id=\"rangeValue\">0&nbsp;kms</span></p>\n            <input class=\"range\" type=\"range\"   value=\"0\" min=\"0\" max=\"1000\" onChange=\"rangeSlide(this.value)\" onmousemove=\"rangeSlide(this.value)\"/>\n          </div>\n        </div>\n      </div> -->\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { UserChatService } from '../../services/Chat/User/UserChat.service';\nimport { JobResponcesService } from '../../services/JobPost/JobResponces.service';\nimport { SharedService } from '../../services/SharedServices/Shared.service';\n\n@Component({\n  selector: 'app-JobResponce',\n  templateUrl: './JobResponce.component.html',\n  styleUrls: ['./../../ChatModule/Chats/Chats.component.css']\n})\nexport class JobResponceComponent implements OnInit {\n  userId!:number;\n  userlist!:any;\n  jobId!:number;\n  constructor(private _jobresponceServices: JobResponcesService,  private activatedRoute: ActivatedRoute, private _sharedServices:SharedService, private _navigaterouter:Router) {\n    this._sharedServices.checkInterNetConnection();\n    let user= JSON.parse(localStorage.getItem('user')!);\n    this.userId=user.Id;\n    this.activatedRoute.queryParams.subscribe(params => {\n      this.jobId = params['target'];\n\n     });\n  }\n  ngOnInit(){\n    this.LoadUserChatList();\n  }\n\n  LoadUserChatList() {\n    this._jobresponceServices.GetJobResponces(this.jobId, this.userId).subscribe((data:any)=>{\n      this.userlist=data;\n      console.log(this.userlist);\n    })\n  }\n\nRedirectToUser(userId:number){\n  this._navigaterouter.navigate(['/profile'], { queryParams: {target: userId}});\n}\n}\n","\n      <!-- <div class=\"input-group\">\n          <div class=\"input-group-prepend\">\n              <span class=\"input-group-text\"><i class=\"fa fa-search\"></i></span>\n          </div>\n          <input type=\"text\" class=\"form-control\" placeholder=\"Search...\">\n      </div> -->\n      <div *ngIf=\"userlist.length>=1\">\n        <ul *ngFor=\"let item of userlist\"  class=\"list-unstyled chat-list\">\n          <li *ngIf=\"item.Sender.Id!==userId\"\n          [routerLink]=\"['/jobchatbox']\" [queryParams]=\"{jobId: jobId,senderId:item.RecipientId,recipientId:item.SenderId}\"\n          class=\"clearfix\">\n              <img src=\"{{item.Sender.ImageUrl}}\" alt=\"avatar\">\n              <div class=\"about\">\n                  <div class=\"name\">{{item.Sender.Name}}</div>\n                  <!-- <div class=\"status\"> <i class=\"fa fa-circle offline\"></i> left 7 mins ago </div> -->\n              </div>\n              <i  class=\"fa fa-angle-right\"></i>\n          </li>\n      </ul>\n      </div>\n\n      <div *ngIf=\"userlist.length==0\" class=\"col-md-12 d-flex justify-content-center\">\n        <div class=\"Search-result\">No response received yet</div>\n      </div>\n","export class RealChatDtos {\n  SenderId!: number;\n  RecipientId!: number;\n  Content!:string;\n  RecipientContent!:string;\n  SenderContent!:string;\n  MessageSent!:Date;\n}\n","export interface Pagination {\r\n    currentPage: number;\r\n    itemsPerPage: number;\r\n    totalItems: number;\r\n    totalPages: number;\r\n}\r\n\r\nexport class PaginatedResult<T> {\r\n    result!: T;\r\n    pagination!: Pagination;\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators }  from '@angular/forms';\nimport { HotToastService } from '@ngneat/hot-toast';\nimport { SocialAuthentication } from '../../Model/User/SocialAuthentication';\nimport { Tags } from '../../Model/User/Tags';\nimport { ProfileService } from '../../services/Auth/Profile.service';\nimport swal from 'sweetalert2';\nimport {Location} from '@angular/common';\nimport { SharedService } from '../../services/SharedServices/Shared.service';\nimport { Router } from '@angular/router';\nimport { NavbarCommunicationService } from '../../Shared/services/NavbarCommunication.service';\nimport { TagMaster } from '../../Model/TagMaster';\nimport { TagService } from '../../services/Tags/Tag.service';\n@Component({\n  selector: 'app-Edit',\n  templateUrl: './Edit.component.html',\n  styleUrls: ['./Edit.component.css']\n})\nexport class EditComponent implements OnInit {\n  authUser!: SocialAuthentication;\n  userId:number;\n  userForm!:FormGroup;\n  Tags:Tags[]=[];\n  userTag!:Tags;\n  tagname!:string;\n  public imagePath='';\n  imgURL: any;\n  filetoPost:any;\n\n  public btnLoader!: boolean;\n  showAlert:boolean=false;\n  profileImgUploading:boolean=false;\n  coverImgUploading:boolean=false;\n\n  public message!: string;\n  public Tagmessage!: string;\n  tagMaster!:TagMaster;\n  ImageUrl!:string;\n  CoverImageUrl!:string;\n  constructor(private _profileServices: ProfileService,\n    private _sharedServices:SharedService,\n    private _tagService:TagService,\n    private fb:FormBuilder,private toast: HotToastService,\n    private navServices:NavbarCommunicationService,\n    private _router:Router,\n    private _location: Location) {\n      this._sharedServices.checkInterNetConnection();\n  let user= JSON.parse(localStorage.getItem('user')!);\n  this.userId=user.Id;\n  }\n\n  ngOnInit() {\n    this.createUserForm();\n    this.loadUserDetais(this.userId);\n\n  }\n  showToast() {\n    this.toast.success('Profile Updated Successfully', {\n      position: 'top-center',\n    });\n  }\n\n  createUserForm() {\n    this.userForm = this.fb.group({\n      UserName:['',Validators.required],\n      ImageUrl: [''],\n      Email:[''],\n      CoverImageUrl: [''],\n      Name: ['',[Validators.required,Validators.maxLength(25)]],\n      MobileNumber: [''],\n      WebSiteUrl: [''],\n      Latitude: [''],\n      Longitude: [''],\n      UserAddress: [''],\n      AboutUs: [''],\n      tags: [],\n      stringTags:['']\n    })\n  }\n\n  loadUserDetais(userId: number) {\n    this._profileServices.GetUserProfile(userId).subscribe((data: any) => {\n      this.authUser = data;\n      this.userForm.controls['ImageUrl'].setValue(this.authUser.ImageUrl);\n      this.userForm.controls['Email'].setValue(this.authUser.Email);\n      this.userForm.controls['CoverImageUrl'].setValue(this.authUser.CoverImageUrl);\n      this.userForm.controls['Name'].setValue(this.authUser.Name);\n      this.userForm.controls['MobileNumber'].setValue(this.authUser.MobileNumber);\n      this.userForm.controls['UserAddress'].setValue(this.authUser.UserAddress);\n      this.userForm.controls['AboutUs'].setValue(this.authUser.AboutUs);\n      this.userForm.controls['tags'].setValue(this.authUser.tags);\n      this.userForm.controls['Latitude'].setValue(this.authUser.Latitude);\n      this.userForm.controls['Longitude'].setValue(this.authUser.Longitude);\n      this.userForm.controls['WebSiteUrl'].setValue(this.authUser.WebSiteUrl);\n      this.userForm.controls['UserName'].setValue(this.authUser.UserName);\n      this.ImageUrl=this.authUser.ImageUrl;\n      this.CoverImageUrl=this.authUser.CoverImageUrl;\n      this.Tags=this.authUser.tags;\n      this.authUser = Object.assign({}, this.userForm.value);\n    })\n  }\n  // File Upload Cover\n  FileUploadCover(files:any): void {\n    if (files.length === 0)\n      return;\n\n    var mimeType = files[0].type;\n    if (mimeType.match(/image\\/*/) == null) {\n      this.message = \"Only images are supported.\";\n      return;\n    }\n\n    var reader = new FileReader();\n    this.imagePath = files;\n    reader.readAsDataURL(files[0]);\n    reader.onload = (_event) => {\n      this.imgURL = reader.result;\n      this.CoverImageUrl=this.imgURL;\n      this.filetoPost=files;\n      this.message = \"\";\n    }\n\n    let fileToUpload = <File>files[0];\n    const formData = new FormData();\n    formData.append('file', fileToUpload, fileToUpload.name);\n    this._profileServices.AddAuthUserCoverImage(this.userId,formData).subscribe((data)=>{\n      console.log(data);\n    })\n  }\n  //File Upload User\n  FileUploadUser(files:any): void {\n    if (files.length === 0)\n      return;\n\n      this.profileImgUploading=true;\n    var mimeType = files[0].type;\n    if (mimeType.match(/image\\/*/) == null) {\n      this.message = \"Only images are supported.\";\n      return;\n    }\n\n    var reader = new FileReader();\n    this.imagePath = files;\n    reader.readAsDataURL(files[0]);\n    reader.onload = (_event) => {\n      this.imgURL = reader.result;\n      this.ImageUrl=this.imgURL;\n      this.filetoPost=files;\n      this.message = \"\";\n    }\n\n    let fileToUpload = <File>files[0];\n    const formData = new FormData();\n    formData.append('file', fileToUpload, fileToUpload.name);\n    this._profileServices.UpdateUserPhoto(this.userId,formData).subscribe((data)=>{\n      this.profileImgUploading=false;\n    })\n  }\n\n  UpdateProfile() {\n    this.btnLoader=true;\n    this.authUser=this.userForm.value;\n    this._profileServices.UpdateUser(this.userId, this.authUser).subscribe((data: any) => {\n      this.btnLoader=false;\n      this.showAlert=true;\n      this.showToast();\n      this._router.navigate(['/profile'], { queryParams: {target: this.userId}});\n    })\n  }\n\n  AddTagging() {\n    if(this.userForm.controls['stringTags'].value==''){\n        this.toast.warning('Tag is required!', {\n          position: 'top-center',\n        });\n      return;\n    }\n    this.userTag = {\n      TagName:   this.userForm.controls['stringTags'].value,\n       UserId:this.userId,\n    };\n    this.Tags.push(this.userTag);\n    this.userForm.controls['tags'].setValue(this.Tags);\n    this.Tagmessage = '';\n\n    // Addv TAG TO TAG MASTER TABLE\n     // Add Tag To TagMaster for Later show suggetions\n     this.tagMaster = {\n      Id:0,\n      TagName:  this.userForm.controls['stringTags'].value.trim()\n    };\n    this._tagService.AddTag(this.tagMaster).subscribe((data)=>{\n      this.userForm.controls['stringTags'].setValue('');\n    },err=>{\n      console.log(\"Tag Adding to master Failed\");\n    });\n  }\n  RemoveTagging(item:string) {\n    this.Tags = this.Tags.filter(function (obj) {\n      return obj.TagName != item;\n    });\n    this.userForm.controls['tags'].setValue(this.Tags);\n  }\n\n  //Reset Profile\n  Reset(){\n    swal.fire({\n      text: `Are you sure to reset`,\n      showDenyButton: true,\n      confirmButtonText: 'Yes',\n      denyButtonText: `No`,\n    }).then((result) => {\n      /* Read more about isConfirmed, isDenied below */\n      if (result.isConfirmed) {\n        this.userForm.reset();\n      } else if (result.isDenied) {\n        swal.fire('Reset Abort', '', 'info')\n      }\n    })\n\n  }\n\n  //Remove Profile Photo\n  RemoveProfilePhotos(){\n    swal.fire({\n      text: `Are you sure to Delete you photo`,\n      showDenyButton: true,\n      confirmButtonText: 'Yes',\n      denyButtonText: `No`,\n    }).then((result) => {\n      /* Read more about isConfirmed, isDenied below */\n      if (result.isConfirmed) {\n        this._profileServices.RemoveUserPhoto(this.userId).subscribe((data:any)=>{\n          this.loadUserDetais(this.userId);\n        })\n      } else if (result.isDenied) {\n      }\n    })\n  }\n  //Back loacation History\n  backClicked() {\n    this._location.back();\n  }\n\n  hideEvent(){\n    this.navServices.Toggle();\n }\n}\n"," <div (click)=\"hideEvent()\" class=\"main_cnt_wrap\">\n<!-- Main Content -->\n  <div  class=\"back_arrow\">\n    <i  (click)=\"backClicked()\" class=\"back fa fa-2x fa-arrow-left\" aria-hidden=\"true\"></i>\n    <!-- <h3 class=\"hc1\">Edit Profile</h3> -->\n  </div>\n  <div class=\"edit_profile\">\n     <!-- User Card Section-1 -->\n     <div class=\"edit_profile_top\">\n       <div class=\"\">\n         <div class=\"outer-div\">\n           <div class=\"inner-div\">\n             <div class=\"front\">\n              <label class=\"cover_pic\">\n                <div\n                  style=\"background-image: url({{CoverImageUrl}});\"\n                  class=\"front__bkg-photo overlay_bg\">\n                </div>\n                <input #file  (change)=\"FileUploadCover(file.files)\" type=\"file\" size=\"60\" >\n                <span  class=\"upload_cover\">\n                  <i class=\"fa-solid fa-upload\"></i>\n                </span>\n              </label>\n               <label>\n                <div style=\"background-image: url({{ImageUrl}});\"\n                  class=\"front__face-photo overlay_bg overlay_radius\">\n                  <span *ngIf=\"this.profileImgUploading\"  class=\"spinner-border text-dark mt-5\" role=\"status\"></span>\n                </div>\n                <input #file1 (change)=\"FileUploadUser(file1.files)\" type=\"file\" size=\"60\" >\n                </label>\n                <a type=\"button\" class=\"btn btn-default btn-circle\">\n                  <i  (click)=\"RemoveProfilePhotos()\" class=\"fa fa-2x fa-camera\"></i>\n                </a>\n             </div>\n           </div>\n         </div>\n       </div>\n     </div>\n\n    <form (keydown.enter)=\"$event.preventDefault()\" id=\"postForm\" [formGroup]=\"userForm\"  (ngSubmit)=\"UpdateProfile()\">\n  <!-- Name Section -->\n    <div class=\"row mb-4\">\n      <div class=\"col-lg-6\">\n        <div class=\"\">\n          <label for=\"exampleInputEmail1\" class=\"form-label\">Name &nbsp; </label>\n          <input autocomplete=\"off\" type=\"text\" formControlName=\"Name\"\n          class=\"form-control one\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\">\n          <small class=\"text text-center\"\n          *ngIf=\"userForm.get('Name')!.hasError('required') && userForm.get('Name')!.touched\"\n          id=\"emailHelp\" class=\"form-text text text-danger\">Name is requires.</small>\n          <small class=\"text text-center\"\n          *ngIf=\"userForm.get('Name')!.hasError('maxlength') && userForm.get('Name')!.touched\"\n          id=\"emailHelp\" class=\"form-text text text-danger\">Name length should be less than 20.</small>\n        </div>\n       </div>\n       <div class=\"col-lg-6\">\n        <div class=\"\">\n          <label for=\"exampleInputEmail1\" class=\"form-label form-label1\">UserName &nbsp; </label>\n          <input autocomplete=\"off\" type=\"text\" formControlName=\"UserName\"\n          class=\"form-control one\"  id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\">\n          <small\n          *ngIf=\"userForm.get('UserName')!.hasError('required') && userForm.get('UserName')!.touched\"\n          id=\"emailHelp\" class=\"form-text text text-danger\">UserName is requires.</small>\n        </div>\n       </div>\n  </div>\n\n  <!-- Tag Sections -->\n  <div class=\"row mb-0\">\n    <div class=\"col-md-12\">\n      <div class=\"\">\n        <label for=\"exampleInputEmail1\" class=\"form-label\">Tags &nbsp; </label>\n        <div class=\"buttonInside\">\n          <input autocomplete=\"off\" (keyup.enter)=\"AddTagging()\" type=\"text\" formControlName=\"stringTags\" class=\"form-control taginput \" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\">\n          <button type=\"button\" (click)=\"AddTagging()\" class=\"tagbutton btn-hoozOn-2\" id=\"showPassword\">Add</button>\n        </div>\n      </div>\n     </div>\n  </div>\n\n  <div class=\"badgeTagWrap\">\n    <div *ngFor=\"let item of Tags\" class=\"badgeTag\" >\n        {{item.TagName}} <i (click)=\"RemoveTagging(item.TagName)\" class=\"fa fa-times\" aria-hidden=\"true\"></i>\n    </div>\n  </div>\n\n  <!-- AboutMe sections -->\n  <div class=\"row mb-4\">\n    <div class=\"col-md-12\">\n      <div class=\"\">\n        <label for=\"exampleInputEmail1\" class=\"form-label\">About Me &nbsp; </label>\n\n        <textarea autocomplete=\"off\" style=\"height: 80px;\"\n        placeholder=\"Short bio\" type=\"text\" formControlName=\"AboutUs\"\n\n        class=\"form-control about\"  id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\"\n        ></textarea>\n      </div>\n     </div>\n\n  </div>\n\n  <!-- Link sections -->\n  <div class=\"row mb-4\">\n    <div class=\"col-md-12\">\n      <div class=\"\">\n        <label for=\"exampleInputEmail1\" class=\"form-label\">Links &nbsp; </label>\n        <input placeholder=\"Link\" autocomplete=\"off\" type=\"text\" formControlName=\"WebSiteUrl\"\n        class=\"form-control about\"  id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\">\n      </div>\n     </div>\n\n  </div>\n  </form>\n</div>\n  <footer id=\"footer\" class=\"d-flex fixed-bottom\">\n    <div class=\"container d-flex align-items-center justify-content-center   text-center\">\n      <button (click)=\"Reset()\"  role=\"button\" class=\"btn btn-lg btn-reset\">Reset</button>\n      <button  type=\"submit\" form=\"postForm\" [disabled]=\"!userForm.valid || btnLoader\" class=\"btn-hoozOn-2\">\n          <span *ngIf=\"this.btnLoader\"  class=\"spinner-border spinner-border-sm\" role=\"status\"></span>\n          <span *ngIf=\"this.btnLoader\"  class=\"load-text\"> Saving...</span>\n          <span *ngIf=\"!this.btnLoader\" class=\"btn-text\">  Save  </span>\n      </button>\n    </div>\n  </footer>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { SocialAuthentication } from '../../Model/User/SocialAuthentication';\nimport { ProfileService } from '../../services/Auth/Profile.service';\nimport {Location} from '@angular/common';\nimport { SharedService } from '../../services/SharedServices/Shared.service';\nimport { NavbarCommunicationService } from '../../Shared/services/NavbarCommunication.service';\n@Component({\n  selector: 'app-UserProfile',\n  templateUrl: './UserProfile.component.html',\n  styleUrls: ['./UserProfile.component.scss']\n})\nexport class UserProfileComponent implements OnInit {\n  userId!: number;\n  loggedUserId!:number;\n  loggeduser!: SocialAuthentication;\n  user!: SocialAuthentication;\n  constructor(private _userServices: ProfileService\n    ,private _location: Location,\n    private navServices:NavbarCommunicationService,\n    private _sharedServices:SharedService,\n    private activatedRoute: ActivatedRoute,\n    private _router: ActivatedRoute) {\n      this._sharedServices.checkInterNetConnection();\n    this.activatedRoute.queryParams.subscribe(params => {\n      this.userId = params['target'];\n     });\n    if(localStorage.getItem('user')){\n      this.loggeduser= JSON.parse(localStorage.getItem('user')!);\n      this.loggedUserId=this.loggeduser.Id;\n    }\n  }\n\n  ngOnInit() {\n    this.LoadUserData(this.userId);\n  }\n  LoadUserData(id: number) {\n    this._userServices.GetUserProfile(id).subscribe((data: any) => {\n      this.user = data;\n    })\n  }\n  //Back loacation History\n  backClicked() {\n    this._location.back();\n  }\n\n  hideEvent(){\n    this.navServices.Toggle();\n }\n}\n","<div (click)=\"hideEvent()\" class=\"main_cnt_wrap\">\n  <div  class=\"back_arrow\">\n    <i  (click)=\"backClicked()\" class=\"back fa fa-2x fa-arrow-left\" aria-hidden=\"true\"></i>\n  </div>\n  <div class=\"user_profile\">\n    <!-- <h3 class=\"hc1\">User Profile</h3> -->\n  <!-- User Card Section-1 -->\n    <div class=\"\">\n      <div class=\"outer-div\">\n        <div class=\"inner-div\">\n          <div class=\"front\">\n            <div\n              style=\"background-image: url({{user?.CoverImageUrl}});\"\n              class=\"front__bkg-photo overlay_bg\">\n            </div>\n            <div\n              style=\"background-image: url({{user?.UserImage}});\"\n              class=\"front__face-photo overlay_bg overlay_radius\">\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"user_name_wrap\">\n        <div class=\"user_name\">\n          <h5 >{{user?.Name}}</h5>\n          <div>{{user?.UserAddress}}</div>\n        </div>\n        <div class=\"chat_sec\">\n            <button type=\"button\" *ngIf=\"userId!=loggedUserId\" [routerLink]=\"['/chatbox']\" [queryParams]=\"{uid: user.Id}\" class=\"btn\">Chat</button>\n        </div>\n        <div class=\"edit_sec\">\n          <button type=\"button\" *ngIf=\"userId==loggedUserId\"  [routerLink]=\"['/editProfile']\" routerLinkActive=\"router-link-active\" class=\"btn-hoozOn-2\">Edit</button>\n        </div>\n      </div>\n  </div>\n\n    <!-- Tag Section-2 -->\n    <div class=\"badgeTagWrap\">\n      <h5 class=\"title\">Tags</h5>\n      <div>\n        <div *ngFor=\"let item of user?.tags\" class=\"badgeTag\" >\n          {{item.TagName}}\n        </div>\n      </div>\n    </div>\n\n    <!-- AboutMe Section-3 -->\n    <div class=\"about_sec\">\n      <h5 class=\"title\">About me</h5>\n      <div>\n          {{user?.AboutUs}}\n      </div>\n    </div>\n\n    <!-- Link Section-3 -->\n    <div class=\"links_url\">\n      <h5 class=\"title\">URL's</h5>\n      <div class=\"lnk\">\n          <a target=\"_blank\" href=\"{{user?.WebSiteUrl}}\">{{user?.WebSiteUrl}}</a>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {Location} from '@angular/common';\nimport { NavbarCommunicationService } from '../../Shared/services/NavbarCommunication.service';\nimport { Router } from '@angular/router';\nimport { Meta, Title } from '@angular/platform-browser';\n\n@Component({\n  selector: 'app-Download',\n  templateUrl: './Download.component.html',\n  styleUrls: ['./Download.component.css']\n})\nexport class DownloadComponent implements OnInit {\n\n  constructor(private _location: Location,\n    private titleService: Title, private metaService: Meta,\n    private navServices:NavbarCommunicationService) { }\n\n  ngOnInit() {\n    this.titleService.setTitle(\"Download List\");\n    this.metaService.updateTag({property:'og:title',content:'Download new'})\n  }\n //Back loacation History\n backClicked() {\n  this._location.back();\n}\nhideEvent(){\n  this.navServices.Toggle();\n}\n}\n"," <div (click)=\"hideEvent()\">\n<div class=\"d-flex justify-content-start mt-4\">\n  <i  (click)=\"backClicked()\"  class=\"back fa fa-2x fa-arrow-left\" aria-hidden=\"true\"></i>\n</div>\n\n<body>\n  <img class=\"img-responsove img-fluid desktopImg\" style=\"float: right;\" src=\"../../../assets/Logo/DownloadBG.png\"/>\n  <div class=\"InDestop\">\n    <div   class=\"d-flex mt-5\">\n      <div class=\"ContentSection mt-2\">\n        <p class=\"mb-5\">\n          Get complete feature rich<br>\nexperience on your phone\n        </p>\n<h2 class=\"mb-4\" style=\"font-weight: bold;\">Download Hooz app</h2>\n<img class=\"mb-2\" src=\"../../../assets/Logo/googleplayDownload.png\"/><br>\n<span>Available on Google Play only</span>\n      </div>\n    </div>\n  </div>\n  <img class=\"img-responsove img-fluid mobileImg mt-4\" style=\"float: right;\" src=\"../../../assets/Logo/DownloadBG.png\"/>\n</body>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\nimport {Location} from '@angular/common';\nimport { NavbarCommunicationService } from '../../Shared/services/NavbarCommunication.service';\nimport { Meta, Title } from '@angular/platform-browser';\n@Component({\n  selector: 'app-HelpDesk',\n  templateUrl: './HelpDesk.component.html',\n  styleUrls: ['./HelpDesk.component.css']\n})\nexport class HelpDeskComponent implements OnInit {\nisGS:boolean=true;\nisEX:boolean=false;\nisSP:boolean=false;\nisCU:boolean=false;\nisGetServices:boolean=false;\n  constructor(private _location: Location,\n    private titleService: Title, private metaService: Meta,\n    private navServices:NavbarCommunicationService) { }\n  ngOnInit() {\n    this.titleService.setTitle(\"Help List\");\n    this.metaService.updateTag({property:'og:title',content:'Help new'})\n  }\n\n  GS() {\n    this.isGS=true;\n    this.isEX=false;\n    this.isSP=false;\n    this.isCU=false;\n    this.isGetServices=false;\n  }\n  EX() {\n    this.isGS=false;\n    this.isEX=true;\n    this.isSP=false;\n    this.isCU=false;\n    this.isGetServices=false;\n  }\n  SP() {\n    this.isGS=false;\n    this.isEX=false;\n    this.isSP=true;\n    this.isCU=false;\n    this.isGetServices=false;\n  }\n  GetServices() {\n    this.isGS=false;\n    this.isEX=false;\n    this.isSP=false;\n    this.isCU=false;\n    this.isGetServices=true;\n  }\n  CU() {\n    this.isGS=false;\n    this.isEX=false;\n    this.isSP=false;\n    this.isCU=true;\n    this.isGetServices=false;\n  }\n\n  ChangeEvent(e:any) {\n    if(e.target.value==1){\n      this.GS();\n    }\n    if(e.target.value==2){\n      this.EX();\n    }\n    if(e.target.value==3){\n      this.GetServices();\n    }\n    if(e.target.value==4){\n      this.SP();\n    }\n    if(e.target.value==5){\n      this.CU();\n    }\n  }\n //Back loacation History\n backClicked() {\n  this._location.back();\n}\n\nhideEvent(){\n  this.navServices.Toggle();\n}\n}\n","\n<div (click)=\"hideEvent()\">\n<div class=\"d-flex justify-content-start\">\n  <i  (click)=\"backClicked()\"     class=\"back fa fa-2x fa-arrow-left\" aria-hidden=\"true\"></i>\n  <h3 class=\"hc\">Help Center</h3>\n</div>\n\n<body>\n  <!-- At Destop -->\n  <div class=\"InDestop\">\n    <div style=\"background-color: rgb(252 252 253);\" class=\"d-flex mt-5\">\n      <div class=\"NavSection\">\n        <ul>\n          <a [ngStyle]=\"{color: isGS?'rgb(107 93 240)':'black'}\"  (click)=\"GS()\">Getting Started</a>\n          <a [ngStyle]=\"{color: isEX?'rgb(107 93 240)':'black'}\" (click)=\"EX()\">Explore</a>\n          <a [ngStyle]=\"{color: isGetServices?'rgb(107 93 240)':'black'}\" (click)=\"GetServices()\">Get Service</a>\n          <a [ngStyle]=\"{color: isSP?'rgb(107 93 240)':'black'}\" (click)=\"SP()\">Service Provider</a>\n          <a [ngStyle]=\"{color: isCU?'rgb(107 93 240)':'black'}\" (click)=\"CU()\">Contact Us</a>\n        </ul>\n      </div>\n\n      <ng-container *ngIf=\"isGS\">\n        <div class=\"ContentSection mt-2\">\n          <a>Getting Started</a>\n          <p>Learn how to create an account, set up your profile, and what you can do on HoozOnline</p>\n          <p class=\"mb-5\"></p>\n          <p>Step1. Login to hoozonline using Google or FB</p>\n          <p>Step2. Update your profile with pic and banner.</p>\n          <p class=\"mb-5\">Step3. Add tags to your profile</p>\n          <p><b style=\"color: rgb(107 93 240);\">Explore</b>  other interesting features</p>\n        </div>\n      </ng-container>\n\n\n      <ng-container *ngIf=\"isEX\">\n        <div class=\"ContentSection mt-2\">\n          <a>EXPLORE</a>\n\n        </div>\n      </ng-container>\n\n      <ng-container *ngIf=\"isGetServices\">\n        <div class=\"ContentSection mt-2\">\n          <a>Get Service</a>\n        </div>\n      </ng-container>\n\n      <ng-container *ngIf=\"isSP\">\n        <div class=\"ContentSection mt-2\">\n          <a>Service Provider</a>\n        </div>\n      </ng-container>\n\n      <ng-container *ngIf=\"isCU\">\n        <div class=\"ContentSection mt-2\">\n          <a>Write to us</a>\n          <p class=\"mt-4\">Share your feedback and experience with us</p>\n          <div class=\"\">\n            <input placeholder=\"Email\" autocomplete=\"off\" type=\"email\"\n            class=\"form-control\"  id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\">\n          </div>\n          <div class=\"mt-2\">\n           <textarea autocomplete=\"off\" placeholder=\"Write here...\" class=\"form-control\" cols=\"6\" rows=\"6\"></textarea>\n          </div>\n          <br>\n          <button type=\"submit\"  class=\"btn btn-hoozGreen\">\n            Submit\n          </button>\n          <br>\n          <br>\n        </div>\n      </ng-container>\n    <br>\n    </div>\n  </div>\n\n  <!-- At Mobile -->\n  <div class=\"container-fluid InMobile\">\n    <div style=\"background-color: rgb(252 252 253);\" class=\"row d-flex justify-content-center mt-5\">\n\n            <div class=\"ms-2 c-details\">\n              <div class=\"select\">\n                  <select style=\"color: rgb(107 93 240);\" (change)=\"ChangeEvent($event)\" class=\"select__field\" required>\n                      <option [ngStyle]=\"{color: isGS?'rgb(107 93 240)':'black'}\" value=\"1\">Getting Started&nbsp;</option>\n                      <option [ngStyle]=\"{color: isEX?'rgb(107 93 240)':'black'}\"  value=\"2\">Explore&nbsp;</option>\n                      <option [ngStyle]=\"{color: isGetServices?'rgb(107 93 240)':'black'}\" value=\"3\">Get Service&nbsp;</option>\n                      <option [ngStyle]=\"{color: isSP?'rgb(107 93 240)':'black'}\" value=\"4\">Service Provider&nbsp;</option>\n                      <option [ngStyle]=\"{color: isCU?'rgb(107 93 240)':'black'}\" value=\"5\">Contact Us&nbsp;</option>\n                  </select>\n                </div>\n          </div>\n    </div>\n  </div>\n<div class=\"container-fluid InMobile\">\n  <div class=\"row d-flex justify-content-center\">\n    <ng-container *ngIf=\"isGS\">\n      <div class=\"ContentSection1 mt-2\">\n        <a>Getting Started</a>\n        <p>Learn how to create an account, set up your profile, and what you can do on HoozOnline</p>\n        <p class=\"mb-5\"></p>\n        <p>Step1. Login to hoozonline using Google or FB</p>\n        <p>Step2. Update your profile with pic and banner.</p>\n        <p class=\"mb-5\">Step3. Add tags to your profile</p>\n        <p><b style=\"color: rgb(107 93 240);\">Explore</b>  other interesting features</p>\n      </div>\n    </ng-container>\n\n\n    <ng-container *ngIf=\"isEX\">\n      <div class=\"ContentSection1 mt-2\">\n        <a>EXPLORE</a>\n\n      </div>\n    </ng-container>\n\n    <ng-container *ngIf=\"isGetServices\">\n      <div class=\"ContentSection1 mt-2\">\n        <a>Get Service</a>\n      </div>\n    </ng-container>\n\n    <ng-container *ngIf=\"isSP\">\n      <div class=\"ContentSection1 mt-2\">\n        <a>Service Provider</a>\n      </div>\n    </ng-container>\n\n    <ng-container *ngIf=\"isCU\">\n      <div class=\"ContentSection1 mt-2\">\n        <a>Write to us</a>\n        <p class=\"mt-4\">Share your feedback and experience with us</p>\n        <div class=\"\">\n          <input placeholder=\"Email\" autocomplete=\"off\" type=\"email\"\n          class=\"form-control\"  id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\">\n        </div>\n        <div class=\"mt-2\">\n         <textarea autocomplete=\"off\" placeholder=\"Write here...\" class=\"form-control\" cols=\"6\" rows=\"6\"></textarea>\n        </div>\n        <br>\n        <button type=\"submit\"  class=\"btn btn-hoozGreen\">\n          Submit\n        </button>\n        <br>\n        <br>\n      </div>\n    </ng-container>\n  </div>\n</div>\n</body>\n</div>\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { TopNavBarComponent } from './TopNavBar/TopNavBar.component';\r\nimport { FormGroup } from '@angular/forms';\r\n\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  providers: [\r\n    TopNavBarComponent\r\n\r\n  ],\r\n  declarations: []\r\n})\r\nexport class SharedModule { }\r\n","import { MapsAPILoader } from '@agm/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Component, EventEmitter, OnInit, Output, ViewChild } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { fromEvent, of } from 'rxjs';\nimport { debounceTime, distinctUntilChanged, filter, map } from 'rxjs/operators';\nimport { environment } from '../../../environments/environment';\nimport { TagMaster } from '../../Model/TagMaster';\n import { SocialAuthentication } from '../../Model/User/SocialAuthentication';\nimport { ProfileService } from '../../services/Auth/Profile.service';\nimport { NavbarCommunicationService } from '../services/NavbarCommunication.service';\nvar addressLocation=null;\n@Component({\n  selector: 'app-TopNavBar',\n  templateUrl: './TopNavBar.component.html',\n  styleUrls: ['./TopNavBar.component.css']\n})\nexport class TopNavBarComponent implements OnInit {\n@ViewChild(\"movieSearchInput\", { static: true }) movieSearchInput!: any;\nuser!:SocialAuthentication;\nnavbarUserPic:string='https://res.cloudinary.com/drmnyie0t/image/upload/v1652501879/Default_User_1_esjtmm.png';\nisLogedIn:boolean=false;\nhidesearchlist: boolean = false;\nshowClose: boolean = false;\ntag!: any;\nsearchval: any;\nisShowingMenu: boolean = false;\nlocation:any;\nenableMobieSearch:boolean=false;\n@Output() notifyParent: EventEmitter<any> = new EventEmitter();\n  constructor(private _profileServices:ProfileService,private _router:Router,\n    private apiloader: MapsAPILoader,\n    public navServices:NavbarCommunicationService,private _http: HttpClient) {\n    if(localStorage.getItem('user')!){\n      this.user= JSON.parse(localStorage.getItem('user')!);\n      this._profileServices.GetUserProfile(this.user.Id)\n      .subscribe({\n        next:(data:any) => {\n          this.navbarUserPic=data.UserImage;\n        }\n      })\n      this.isLogedIn=true;\n    }else{\n      this.isLogedIn=false;\n    }\n   }\n\n  ngOnInit() {\n    this.fireSearchlist();\n    if(!localStorage.getItem(\"location\")){\n      this.AskForLocation();\n    }else{\n      this.location= JSON.parse(localStorage.getItem('location')!);\n      window.document.getElementById('addressTitle')!.innerText=this.location.address_components[5].long_name;\n      window.document.getElementById('addrDetails')!.innerText= this.location.address_components[0].long_name +', '+ this.location.address_components[1].long_name +', '+ this.location.address_components[2].long_name;\n    }\n  }\n  // ask for location\n  AskForLocation(){\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition((position: any) => {\n          if (position) {\n                 this.apiloader.load().then(() => {\n                  let geocoder = new google.maps.Geocoder;\n                  let latlng = {\n                      lat: position.coords.latitude,\n                      lng: position.coords.longitude\n                  };\n\n                  geocoder.geocode({\n                      'location': latlng\n                  }, function(results, status) {\n                    if (status == google.maps.GeocoderStatus.OK) {\n                      if (results[1]) {\n                        localStorage.setItem('location',JSON.stringify(results[1]))\n                        addressLocation= results[1].address_components[0].long_name +', '+ results[1].address_components[1].long_name +', '+ results[1].address_components[2].long_name;\n                        window.document.getElementById('addressTitle')!.innerText=results[1].address_components[5].long_name;\n                        window.document.getElementById('addrDetails')!.innerText= addressLocation;\n                      }\n                  }\n                    else {\n                          console.log('Not found');\n                      }\n                  });\n              });\n\n\n          }else{\n            window.document.getElementById('addressTitle')!.innerText='No address';\n            window.document.getElementById('addrDetails')!.innerText= '';\n          }\n      })\n  }else{\n\n  }\n  }\n\n   //Search wall by click\n   SearchByClick(searchTerm:string) {\n    this.hidesearchlist = false;\n    (document.getElementById(\"searchTag\") as HTMLInputElement).value =\n      searchTerm;\n      this.notifyParent.emit(searchTerm);\n  }\n  //Search wall by enter\n  SearchByEnter() {\n    this.searchval = (\n      document.getElementById(\"searchTag\") as HTMLInputElement\n    ).value;\n    this.notifyParent.emit(this.searchval);\n    this.hidesearchlist = false;\n\n  }\n  ClearSearch() {\n    (document.getElementById(\"searchTag\") as HTMLInputElement).value = \"\";\n    this.showClose = false;\n    this.hidesearchlist = false;\n    this.SearchByClick(\"\");\n\n  }\n  fireSearchlist() {\n    fromEvent(this.movieSearchInput!.nativeElement, \"keyup\")\n      .pipe(\n        map((event: any) => {\n          return event.target.value;\n        }),\n        // if character length greater then 2\n        filter((res) => res.length > -1),\n\n        // Time in milliseconds between key events\n        debounceTime(0),\n\n        // If previous query is diffent from current\n        distinctUntilChanged()\n\n        // subscription for response\n      )\n      .subscribe((text: string) => {\n        //Search api call\n        if (text == \"\") {\n          this.hidesearchlist = false;\n        }\n        this.searchGetCall(text).subscribe(\n          {\n            next:\n            (res:any) => {\n            if (res.data.length == 0) {\n              this.hidesearchlist = false;\n              return;\n            }\n            this.tag = res;\n            this.hidesearchlist = true;\n            this.showClose = true;\n          }\n\n         }\n          // (res:any) => {\n          //   if (res.data.length == 0) {\n          //     this.hidesearchlist = false;\n          //     return;\n          //   }\n          //   this.tag = res;\n          //   this.hidesearchlist = true;\n          //   this.showClose = true;\n          // },\n          // (err) => {\n          //\n          // }\n        );\n      });\n  }\n\n  searchGetCall(term: string) {\n    if (term === \"\") {\n      return of([]);\n    }\n    return this._http.get(environment.api_url + \"Tag/TagSuggestion/\" + term);\n  }\n    // Suggetion list focous out\n\n    hide(){\n      this.navServices.isShowingMenu=false;\n\n   }\n   ShowMenu(){\n    this.navServices.isShowingMenu=!this.navServices.isShowingMenu;\n   }\n\n  LogoClick() {\n    window.location.href='/';\n  }\n  RedirectToUser(userId:number){\n    this._router.navigate(['/profile'], { queryParams: {target: userId}});\n  }\n  LogOut(){\n    this._profileServices.LogOut(this.user.Id).subscribe(()=>{\n      localStorage.removeItem('user');\n      location.href='/';\n    })\n  }\n  url(){\n    return window.location.pathname.replace('/','')\n  }\n  Search(){\n    this.navServices.Toggle();\n  }\n  EnableSearch(){\n    this.enableMobieSearch=!this.enableMobieSearch;\n  }\n\n}\nfunction next(next: any, arg1: any, error: any, arg3: any) {\n  throw new Error('Function not implemented.');\n}\n\n","<nav class=\"mb-5 navbar sticky-top navbar-light bg-light1 mb-5\">\n  <div *ngIf=\"!enableMobieSearch\" class=\"container-fluid\">\n    <div class=\"logo_location\">\n      <img (click)=\"LogoClick()\" class=\"img-responsive logo\" src=\"../../../assets/Logo/hoozon.svg\" />\n      <img (click)=\"LogoClick()\" class=\"img-responsive logo_mb\" src=\"../../../assets/Logo/hoozon_mb.png\" />\n      <!----------Location----------->\n      <div class=\"location\">\n        <i class=\"fas fa-map-marker-alt\"></i>\n        <div class=\"loc_des\">\n          <div id=\"addressTitle\" class=\"title\">Featching location... <i class=\"fas fa-caret-down\"></i></div>\n          <span id=\"addrDetails\">...</span>\n        </div>\n      </div>\n      <!----------Location end----------->\n    </div>\n\n    <!-- Search on Desktop -->\n    <div class=\"d-flex justify-content-between search_wrap\">\n      <div class=\"input-group\">\n        <form class=\"form\">\n          <input type=\"search\" (click)=\"hide()\"  autocomplete=\"off\" (keyup.enter)=\"SearchByEnter()\"  #movieSearchInput id=\"searchTag\"\n            class=\"form-control form-input\" placeholder=\"Search\" tabindex=\"-1\" aria-activedescendant>\n          <div class=\"searchSuggetion\" *ngIf=\"hidesearchlist\">\n            <ul>\n            <li *ngFor=\"let item of tag.data\" (click)=\"SearchByClick(item.TagName)\">\n                <div tabindex=\"-1\">{{item.TagName}}</div>\n              </li> \n            </ul>\n          </div>\n          <span *ngIf=\"!showClose\" class=\"left-pan\">\n            <i class=\"fa fa-search\" aria-hidden=\"true\"></i>\n          </span>\n          <span (click)=\"ClearSearch()\" *ngIf=\"showClose\" class=\"left-pan\"> <i\n              class=\"fa fa-times-circle\"></i></span>\n        </form>\n      </div>\n    </div>\n     <!-- End Search on Desktop -->\n      <!-- <img [routerLink]=\"['/jobpost']\" class=\"addIco img img-responsive img-fluid tog\" [routerLink]Active=\"router-link-active\"\n        style=\"height: 2.5rem; width: 2.5rem; cursor: pointer;\" src=\"../../../assets/HoozIcon/HoozAdd.png\" /> -->\n      <a *ngIf=\"isLogedIn\" (click)=\"RedirectToUser(user.Id)\"class=\"nav-item dropdown_mb profileimg\">\n        <img src=\"{{navbarUserPic}}\" class=\"rounded-circle img-fluid\"\n          href=\"#\" id=\"navbarDropdown\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\" />\n      </a>\n      <div *ngIf=\"isLogedIn\" type=\"button\" class=\"navbar-toggler tog mb_menu\">\n        <label class=\"for-dropdown\" for=\"dropdown1\">\n            <i class=\"fas fa-chevron-down\"></i>\n        </label>\n      </div>\n      <a class=\"links mb_menu\" *ngIf=\"!isLogedIn\" href=\"/login\" >Login</a>\n      <input (click)=\"ShowMenu()\" class=\"dropdown tog\" type=\"checkbox\" id=\"dropdown1\" name=\"dropdown1\" />\n\n    <!-- DropDown Toggle1 -->\n    <!-- <div *ngIf=\"this.navServices.isShowingMenu\" class=\"section-dropdown1 tog\">\n      <div *ngIf=\"isLogedIn\">\n        <a id=\"b\" (click)=\"RedirectToUser(user.Id)\"><i class=\"far fa-user-circle\"></i>MY PROFILE\n        </a><br><br>\n        <a id=\"b\" [routerLink]=\"['/joblist']\"> <i class=\"far fa-newspaper\"></i>Job Listing </a><br><br>\n        <a id=\"b\" [routerLink]=\"['/settings/download']\"> <i class=\"fa fa-download\"></i>Download\n        </a><br><br>\n      </div>\n      <a id=\"b\"> <i class=\"fas fa-cog\"></i>SETTINGS </a><br><br>\n      <a id=\"b\" *ngIf=\"!isLogedIn\" href=\"/login\"> <i class=\"fas fa-cog\"></i>Login </a><br>\n      <input class=\"dropdown-sub\" type=\"checkbox\" id=\"dropdown-sub\" name=\"dropdown-sub\" />\n      <div class=\"section-dropdown-sub\">\n      </div>\n      <a id=\"s\" href=\"#\">About Us <i class=\"uil uil-arrow-right\"></i></a><br><br>\n      <a id=\"s\" [routerLink]=\"['/settings/helpDesk']\">Help & Support<i class=\"uil uil-arrow-right\"></i></a><br><br>\n      <a id=\"s\" href=\"#\">Terms & Conditions<i class=\"uil uil-arrow-right\"></i></a><br><br>\n      <a id=\"s\" href=\"#\">Privacy Policies<i class=\"uil uil-arrow-right\"></i></a><br><br>\n      <a id=\"s\" *ngIf=\"isLogedIn\" (click)=\"LogOut()\">Logout<i class=\"uil uil-arrow-right\"></i></a><br><br>\n    </div> -->\n\n    <div *ngIf=\"isLogedIn && this.navServices.isShowingMenu\" (click)=\"hide()\" class=\"section-dropdown tog\">\n      <div class=\"dr_top\">\n        <div *ngIf=\"isLogedIn\">\n          <a id=\"b\" (click)=\"RedirectToUser(user.Id)\"><i class=\"far fa-user-circle\"></i>MY PROFILE</a>\n          <a [routerLink]=\"['/joblist']\" id=\"b\"> <i class=\"far fa-newspaper\"></i>Job Listing </a>\n          <a id=\"b\" [routerLink]=\"['/settings/download']\"> <i class=\"fa fa-download\"></i>Download</a>\n        </div>\n        <a id=\"b\"><i class=\"fas fa-cog\"></i>SETTINGS </a>\n        <a id=\"b\" *ngIf=\"!isLogedIn\" href=\"/login\"> <i class=\"fas fa-cog\"></i>Login</a>\n      </div>\n      <input class=\"dropdown-sub\" type=\"checkbox\" id=\"dropdown-sub\" name=\"dropdown-sub\" />\n      <div class=\"section-dropdown-sub\">\n        <a id=\"s\" href=\"#\">About Us <i class=\"uil uil-arrow-right\"></i></a>\n        <a id=\"s\" [routerLink]=\"['/settings/helpDesk']\">Help & Support<i class=\"uil uil-arrow-right\"></i></a>\n        <a id=\"s\" href=\"#\">Terms & Conditions<i class=\"uil uil-arrow-right\"></i></a>\n        <a id=\"s\" href=\"#\">Privacy Policies<i class=\"uil uil-arrow-right\"></i></a>\n        <a id=\"s\" *ngIf=\"isLogedIn\" (click)=\"LogOut()\">Logout<i class=\"uil uil-arrow-right\"></i></a>\n      </div>\n    </div>\n  <!--End DropDown Toggle1 -->\n\n <div class=\"collapse navbar-collapse tog justify-content-end\" id=\"navbarCollapse\">\n      <div class=\"navbar-nav mr-auto mt-2 mt-md-0\">\n        <form class=\"d-flex\">\n          <ul (click)=\"hide()\" class=\"navbar-nav \">\n            <li *ngIf=\"isLogedIn\" class=\"nav-item\">\n              <a class=\"nav-link active\" [routerLink]=\"['/joblist']\">Job listing</a>\n            </li>\n            <li *ngIf=\"isLogedIn\" class=\"nav-item\">\n              <a class=\"nav-link active\" [routerLink]=\"['/jobpost']\">Create Posts</a>\n            </li>\n            <li *ngIf=\"!isLogedIn\" class=\"nav-item\">\n              <a class=\"nav-link active\" href=\"/login\">Login</a>\n            </li>\n            <li class=\"nav-item\">\n              <a class=\"nav-link active\" aria-current=\"page\" [routerLink]=\"['/']\">Wall</a>\n            </li>\n            <li [routerLink]=\"['/profile',user.Id]\" *ngIf=\"isLogedIn\" class=\"nav-item dropdown profileimg\">\n              <img src=\"{{user?.ImageUrl}}\" class=\"nav-link dropdown-toggle img-circle\"\n                href=\"#\" id=\"navbarDropdown\" role=\"button\" data-bs-toggle=\"dropdown\"\n                aria-expanded=\"false\" />\n            </li>\n          </ul>\n        </form>\n      </div>\n    </div>\n\n    <div class=\"justify-content-end togs\">\n      <!-- <a [routerLink]=\"['/settings/download']\" class=\"links\">Download App</a>\n      <a class=\"links\" *ngIf=\"isLogedIn\" [routerLink]=\"['/joblist']\">Job Posts</a> -->\n      <a class=\"links add_post\" *ngIf=\"isLogedIn\" [routerLink]=\"['/jobpost']\">\n        <i class=\"fa fa-plus\"></i>\n      </a>\n      <a class=\"links\" *ngIf=\"!isLogedIn\" href=\"/login\" >Login</a>\n\n      <!-- <a  class=\"links\" aria-current=\"page\" [routerLink]=\"['/']\">Wall</a> &nbsp;&nbsp; -->\n      <a *ngIf=\"isLogedIn\" (click)=\"RedirectToUser(user.Id)\" class=\"nav-item dropdown profileimg\">\n        <img src=\"{{navbarUserPic}}\" class=\"rounded-circle img-fluid\"\n          href=\"#\" id=\"navbarDropdown\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\" />\n      </a>\n\n      <label *ngIf=\"isLogedIn\" class=\"for-dropdown menu\" for=\"dropdown\">\n        <i class=\"fas fa-chevron-down\"></i>\n      </label>\n      <input (click)=\"ShowMenu()\" *ngIf=\"isLogedIn\" class=\"dropdown\" type=\"checkbox\" id=\"dropdown\" name=\"dropdown\" />\n\n      <!-- DropDown Toggle2 -->\n\n        <div *ngIf=\"isLogedIn && this.navServices.isShowingMenu\" (click)=\"hide()\" class=\"section-dropdown\">\n          <div class=\"dr_top\">\n            <div *ngIf=\"isLogedIn\">\n              <a id=\"b\" (click)=\"RedirectToUser(user.Id)\"><i class=\"far fa-user-circle\"></i>MY PROFILE</a>\n              <a [routerLink]=\"['/joblist']\" id=\"b\"> <i class=\"far fa-newspaper\"></i>Job Listing </a>\n              <a [routerLink]=\"['/chat']\" id=\"b\"> <i class=\"fa-solid fa-comment-dots\"></i>Chats </a>\n            </div>\n            <a id=\"b\"><i class=\"fas fa-cog\"></i>SETTINGS </a>\n            <a id=\"b\" *ngIf=\"!isLogedIn\" href=\"/login\"> <i class=\"fas fa-cog\"></i>Login</a>\n          </div>\n          <input class=\"dropdown-sub\" type=\"checkbox\" id=\"dropdown-sub\" name=\"dropdown-sub\" />\n          <div class=\"section-dropdown-sub\">\n            <a id=\"s\" href=\"#\">About Us <i class=\"uil uil-arrow-right\"></i></a>\n            <a id=\"s\" [routerLink]=\"['/settings/helpDesk']\">Help & Support<i class=\"uil uil-arrow-right\"></i></a>\n            <a id=\"s\" href=\"#\">Terms & Conditions<i class=\"uil uil-arrow-right\"></i></a>\n            <a id=\"s\" href=\"#\">Privacy Policies<i class=\"uil uil-arrow-right\"></i></a>\n            <a id=\"s\" *ngIf=\"isLogedIn\" (click)=\"LogOut()\">Logout<i class=\"uil uil-arrow-right\"></i></a>\n          </div>\n        </div>\n      <!--End DropDown Toggle2 -->\n\n    </div>\n  </div>\n\n\n  <!-- Enable mobile search -->\n  <div *ngIf=\"enableMobieSearch\" class=\"container-fluid\">\n\n    <!-- Search on Mob -->`\n    <div class=\"d-flex justify-content-between\">\n      <div class=\"input-group\">\n        <form class=\"form\">\n          <input type=\"search\" (click)=\"hide()\"  autocomplete=\"off\" (keyup.enter)=\"SearchByEnter()\"  #movieSearchInput id=\"searchTag\"\n            class=\"form-control form-input\" placeholder=\"Search\" tabindex=\"-1\" aria-activedescendant>\n          <div class=\"searchSuggetion\" *ngIf=\"hidesearchlist\">\n            <ul>\n              <!-- <li *ngFor=\"let item of tag.data\" (click)=\"SearchByClick(item.TagName)\">\n                <div tabindex=\"-1\">{{item.TagName}}</div>\n              </li> -->\n            </ul>\n          </div>\n          <span *ngIf=\"!showClose\" class=\"left-pan\">\n            <i class=\"fa fa-search\" aria-hidden=\"true\"></i>\n          </span>\n          <span (click)=\"ClearSearch()\" *ngIf=\"showClose\" class=\"left-pan\"> <i\n              class=\"fa fa-times-circle\"></i></span>\n        </form>\n      </div>\n    </div>\n     <!-- End Search on Mob -->\n\n  </div>\n</nav>\n\n\n\n<!-- Footer -->\n<nav class=\"footer {{url()}}\">\n  <a class=\"nav-item\" [routerLink]=\"['/']\">\n    <i class=\"fa fa-home\" aria-hidden=\"true\"></i>\n  </a>\n  <a class=\"nav-item\" (click)=\"EnableSearch()\">\n    <i class=\"fa fa-search\" aria-hidden=\"true\"></i>\n  </a>\n  <a class=\"nav-item add_post\" *ngIf=\"isLogedIn\" [routerLink]=\"['/jobpost']\">\n    <i class=\"fa fa-plus\"></i>\n  </a>\n  <a class=\"nav-item jobs\" [routerLink]=\"['/joblist']\" >\n    <img src=\"../../../assets/Logo/jobs.png\" class=\"img-fluid\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\" />\n  </a>\n  <a class=\"nav-item chat\" [routerLink]=\"['/chat']\">\n    <i class=\"fa-solid fa-comment-dots\"></i>\n  </a>\n</nav>\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NavbarCommunicationService {\nisShowingMenu:boolean=false;\nisShowingSearch:boolean=false;\nconstructor() { }\nToggle(){\n  this.isShowingMenu=false;\n  this.isShowingSearch=true;\n}\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Pagination } from '../../Model/Pagination';\nimport { SocialAuthentication } from '../../Model/User/SocialAuthentication';\nimport { UserResponce } from '../../Model/Wall/UserResponce';\nimport { WallService } from '../../services/Wall/Wall.service';\n\n@Component({\n  selector: 'app-userList',\n  templateUrl: './userList.component.html',\n  styleUrls: ['./userList.component.scss']\n})\nexport class UserListComponent implements OnInit {\n  user!:SocialAuthentication;\n  userId:number=0;\n  userParams: string = '';\n  pagination!: Pagination;\n  currentPage: number = 1;\n  itemsPerPage: number = 8;\n  walldata!: UserResponce;\n  walldatas: any[]=[];\n  isLoading: boolean = true;\n  NotEmptPost: boolean = true;\n  noResultText: string = \"Explore more with different keyword\";\n  constructor(private _wallServices:WallService,private activatedRoute: ActivatedRoute) {\n    if(localStorage.getItem('user')){\n      this.user= JSON.parse(localStorage.getItem('user')!);\n      this.userId=this.user.Id;\n    }\n  }\n\n  ngOnInit() {\n    this.activatedRoute.queryParams.subscribe(params => {\n      const paramVal = params['searchTag'];\n       if (paramVal==undefined) {\n\n        this.loadUserList(this.currentPage, this.itemsPerPage, this.userParams,this.userId);\n       }else{\n         this.userParams=paramVal;\n         this.loadUserList(this.currentPage, this.itemsPerPage, this.userParams,this.userId);\n       }\n    });\n\n  }\n  loadUserList(currentPage:number, itemsPerPage:number,userParams:any,userId:number){\n    this.isLoading=true;\n    this._wallServices.GetUserWall(currentPage, itemsPerPage, userParams, userId).subscribe((res: any) => {\n      this.walldata = res.result;\n      this.walldatas = res.result;\n      this.pagination = res.pagination;\n      this.isLoading = false;\n      this.NotEmptPost = true;\n    },\n    (err) => {\n      this.isLoading = false;\n      this.walldatas = [];\n      this.NotEmptPost = false;\n      this.noResultText = `Couldn't find any Profile with tag \"${userParams}\" try a different keyword.`;\n    }\n    )\n  }\n}\n","\n <div class=\"user_list\">\n  <div *ngFor=\"let item of walldatas\">\n      <div [routerLink]=\"['/profile']\" [queryParams]=\"{target: item.User.Id}\"  routerLinkActive=\"router-link-active\"  class=\"user_list_item\">\n          <div class=\"icon\">\n            <img class=\"rounded-circle img-fluid\" [src]=\"item.User?.UserImage\"/>\n          </div>\n          <div class=\"c-details\">\n            <h6>{{item?.User?.Name}}</h6>\n            <div class=\"img share\">{{item?.User?.UserAddress}}</div>\n          </div>\n          <i class=\"fa fa-angle-right\"></i>\n      </div>\n  </div>\n  <div *ngIf=\"!NotEmptPost\">\n    <br><br> <br>\n    <div class=\"col-md-12 d-flex justify-content-center\">\n      <div class=\"Search-result\">{{noResultText}}</div>\n    </div>\n  </div>\n </div>\n","import  swal  from 'sweetalert2';\n\nimport { Component, OnInit} from '@angular/core';\nimport { Pagination } from '../../Model/Pagination';\nimport { TagMaster } from '../../Model/TagMaster';\nimport { SocialAuthentication } from '../../Model/User/SocialAuthentication';\nimport { WallResponce } from '../../Model/Wall/WallResponce';\nimport { SharedService } from '../../services/SharedServices/Shared.service';\nimport { WallService } from '../../services/Wall/Wall.service';\n\nimport { JobPostService } from '../../services/JobPost/JobPost.service';\nimport { ReportJobService } from '../../services/JobPost/ReportJob.service';\nimport { HotToastService } from '@ngneat/hot-toast';\nimport { ClipboardService } from 'ngx-clipboard'\nimport { NavbarCommunicationService } from '../../Shared/services/NavbarCommunication.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { TimeagoIntl } from 'ngx-timeago';\nimport {strings as englishStrings} from 'ngx-timeago/language-strings/en';\nimport { Meta, Title } from '@angular/platform-browser';\n @Component({\n  selector: \"app-wallList\",\n  templateUrl: \"./wallList.component.html\",\n  styleUrls: [\"./wallList.component.scss\"],\n})\nexport class WallListComponent implements OnInit {\n  currentPosition = window.pageYOffset;\n  public flag: boolean = true;\n  userParams: string = \"\";\n  pagination!: Pagination;\n  currentPage: number = 1;\n  itemsPerPage: number = 8;\n  walldata!: WallResponce;\n  walldatas: any[]=[];\n  isLoading: boolean = true;\n  tag!: TagMaster;\n  noResultText: string = \"Explore more with different keyword\";\n  user!: SocialAuthentication;\n  userId: number = 0;\n  //Scroll Variable\n  NotEmptPost: boolean = true;\n  notScrollY: boolean = true;\n  isLogedIn: boolean = false;\n\n  isOnline!: boolean;\n  isJobAdded: boolean = false;\n  shareJobId: number = 0;\n  shareimgUrl!:string;\n  sharedLink!: string;\n\n  // TabToggleTrackVariable\n  IsOnJob: boolean = true;\n  constructor(\n    intl: TimeagoIntl,\n    private _clipboardService: ClipboardService,\n    private titleService: Title, private metaService: Meta,\n    private navServices:NavbarCommunicationService,\n    private _wallServices: WallService,\n    private activatedRoute: ActivatedRoute,\n    private _reportServices: ReportJobService,\n    private _jobServices: JobPostService,\n    public _sharedServices: SharedService,\n    private toast: HotToastService,\n    private _router:Router\n  ) {\n    intl.strings = englishStrings;\n    intl.changes.next();\n    if(localStorage.getItem('user')!){\n      this.user= JSON.parse(localStorage.getItem('user')!);\n      this.userId=this.user.Id;\n      this.isLoading = true;\n    }\n\n  }\n\n  ngOnInit() {\n    this.titleService.setTitle(this.noResultText);\n    this.metaService.updateTag({property:'og:title',content:'Dynamics new'})\n    this._sharedServices.checkInterNetConnection();\n    this.activatedRoute.queryParams.subscribe(params => {\n      const paramVal = params['searchTag'];\n       if (paramVal==undefined) {\n        this.LoadWallData(\n          this.currentPage,\n          this.itemsPerPage,\n          this.userParams,\n          this.userId\n        );\n       }else{\n         this.userParams=paramVal;\n        this.LoadWallData(\n          this.currentPage,\n          this.itemsPerPage,\n          paramVal,\n          this.userId\n        );\n       }\n    });\n\n  }\n\n  //For Nav\n  LogOut() {\n    localStorage.clear();\n    location.href = \"/\";\n  }\n  showToast() {\n    this.toast.success('Link copied!', {\n      position: 'top-center',\n    });\n  }\n\n\n  LoadWallData(currentPage: number, itemsPerPage: number, userParams:any, userId:number) {\n    currentPage=1;\n    this._wallServices\n      .GetWall(currentPage, itemsPerPage, userParams, userId)\n      .subscribe({\n        next:(res:WallResponce|any) => {\n            this.walldatas = res.result;\n            this.pagination = res.pagination;\n            this.isLoading = false;\n            this.noResultText = \"Explore more with different keyword\";\n\n          },\n      });\n  }\n  LoadNextPost() {\n    this.currentPage = this.currentPage + 1;\n    this._wallServices\n      .GetWall(\n        this.currentPage,\n        this.itemsPerPage,\n        this.userParams,\n        this.userId\n      )\n      .subscribe((res: any) => {\n        const newData = res.result;\n        this.isLoading = false;\n        if (newData.length === 0) {\n          this.NotEmptPost = false;\n        }\n        this.walldatas = this.walldatas.concat(newData);\n        this.notScrollY = true;\n        this.pagination = res.pagination;\n      });\n  }\n  onScroll() {\n    if (this.notScrollY && this.NotEmptPost) {\n      this.noResultText = \"Explore more with different keyword\";\n\n      this.notScrollY = false;\n      this.LoadNextPost();\n    }\n  }\n\n  // Job Added\n  AddToJob(jobId:number) {\n    let userJob = {\n      jobModelId: jobId,\n      socialAuthenticationId: this.userId,\n    };\n    swal.fire({\n      text: \"Please wait.. Adding job\",\n      showConfirmButton: false,\n      icon: \"info\",\n    });\n    this._jobServices.AddJobToUser(userJob).subscribe(\n      (data: any) => {\n        if (data._responce.Status == 422) {\n          swal.fire(`This Job ${jobId} is already Added!`, \"\", \"info\");\n        } else {\n          swal.fire(`Job ${jobId} Added successfully!`, \"\", \"success\");\n          this.LoadWallData(\n            this.currentPage,\n            this.itemsPerPage,\n            this.userParams,\n            this.userId\n          );\n        }\n      },\n      (err) => {\n        console.log(err);\n      }\n    );\n  }\n  // Job Removed\n  RemoveToJob(jobId:number) {\n    let userJob = {\n      jobModelId: jobId,\n      socialAuthenticationId: this.userId,\n    };\n    swal.fire({\n      text: \"Please wait.. Removing job\",\n      showConfirmButton: false,\n      icon: \"info\",\n    });\n    this._jobServices.AddJobToUser(userJob).subscribe(\n      (data: any) => {\n        if (data._responce.Status == 422) {\n          swal.fire(`Job ${jobId} Removed successfully!`, \"\", \"success\");\n          this.LoadWallData(\n            this.currentPage,\n            this.itemsPerPage,\n            this.userParams,\n            this.userId\n          );\n        } else {\n        }\n      },\n      (err) => {\n        console.log(err);\n      }\n    );\n  }\n\n  Report(jobId:number) {\n    swal\n      .fire({\n        title: `Report Post`,\n        input: \"textarea\",\n        showDenyButton: true,\n        confirmButtonText: \"Report\",\n        denyButtonText: `Cancel`,\n      })\n      .then((result:any) => {\n        /* Read more about isConfirmed, isDenied below */\n        if (result.isConfirmed) {\n          let reportJob = {\n            jobModelId: jobId,\n            socialAuthenticationId: this.userId,\n            Isusue: result.value,\n          };\n          swal.fire({\n            text: \"Please wait... Reporting\",\n            showConfirmButton: false,\n            icon: \"info\",\n          });\n          this._reportServices.ReportJob(reportJob).subscribe(\n            (data: any) => {\n              swal.fire(`Job ${jobId} Reported!`, \"\", \"success\");\n            },\n            (err) => {\n              console.log(err);\n            }\n          );\n        } else if (result.isDenied) {\n          swal.fire(\"Changes are not saved\", \"\", \"info\");\n        }\n      });\n  }\n\n  // Suggetion list focous out\n  hideEvent(){\n    this.navServices.Toggle();\n }\n\n  //Share Button\n  getJobId(jobId:number,imgUrl:string) {\n    this.shareimgUrl=imgUrl;\n    this.shareJobId = jobId;\n    }\n  public shareFB(jobId:number) {\n    return window.open(\n      \"https://www.facebook.com/sharer/sharer.php?\" +\n        \"u=https://hoozonline.com/jobDetails?target=\" +\n        jobId,\"Hooz\",`scrollbars=no,resizable=no,status=no,location=no,toolbar=no,menubar=no,\n        width=600,height=300,left=100,top=100`\n    );\n  }\n\n  public shareTwitter(jobId:number) {\n    return window.open(\n      \"http://twitter.com/share?\" +\n        \"url=https://hoozonline.com/jobDetails?target=\" +\n        jobId,\n       \"Hooz\",`scrollbars=no,resizable=no,status=no,location=no,toolbar=no,menubar=no,\n       width=600,height=300,left=100,top=100`\n    );\n  }\n  public shareWhatsApp(jobId:number) {\n    return window.open(\n      \"https://api.whatsapp.com/send?text=https://hoozonline.com/jobDetails?target=\" +\n        jobId,\n      \"_blank\"\n    );\n  }\n\n  //Shared Link\n  GetSharedLink(jobId:number) {\n    this.sharedLink = \"https://hoozonline.com/jobDetails?target=\"+jobId;\n    this._clipboardService.copy(this.sharedLink);\n    this.showToast();\n  }\n  //Checkbox toggle method\n  checkValue(event: any) {\n    this.IsOnJob = event;\n  }\n  LogoClick() {\n    window.location.href = \"/\";\n  }\n  RedirectToJob(jobId:any){\n    window.localStorage.setItem(\"des\",\"Descrip\");\n   this._router.navigate(['/jobDetails'], { queryParams: {target: jobId}});\n  }\n\n  RedirectToUser(userId:number){\n    this._router.navigate(['/profile'], { queryParams: {target: userId}});\n  }\n}\n","\n<div (click)=\"hideEvent()\">\n  <!--  Tab Toggle -->\n  <div class=\"container-sm mt-0\">\n   <div class=\"row col-sm-12\">\n     <div class=\"d-flex switch_button_wrap\">\n         <div class=\"switch-button\">\n           <input [(ngModel)]=\"!IsOnJob\" (change)=\"checkValue(IsOnJob?false:true)\" class=\"switch-button-checkbox\" type=\"checkbox\" />\n           <label class=\"switch-button-label\" for=\"\"><span class=\"switch-button-label-span\">Posts</span></label>\n         </div>\n     </div>\n   </div>\n </div>\n\n  <!-- MAIN CONTENT -->\n  <div infiniteScroll [infiniteScrollDistance]=\"7\" (scrolled)=\"onScroll()\" class=\"search-results mt-5\">\n    <div *ngIf=\"IsOnJob\" class=\"row post_list_row\">\n      <div *ngFor=\"let item of walldatas; let i = index\" class=\"post_list\">\n\n        <div class=\"post_card\">\n          <div class=\"d-flex justify-content-between top_sec\">\n            <div class=\"d-flex flex-row align-items-center\">\n              <div class=\"icon\">\n                <img (click)=\"RedirectToUser(item.Job.User.Id)\"  *ngIf=\"item.Job.IsAnonymous===false\"\n                  class=\"rounded-circle img-fluid\" src=\"{{item.Job?.User?.UserImage}}\">\n                <img *ngIf=\"item.Job?.IsAnonymous===true\" class=\"rounded-circle img-fluid\"\n                  src=\"{{item.Job?.AnonmousUserPic}}\">\n              </div>\n              <div class=\"ms-2 c-details\">\n                <h6 (click)=\"RedirectToUser(item.Job.User.Id)\" *ngIf=\"item?.Job.IsAnonymous===false\" class=\"mb-0\">\n                  {{item?.Job.User.Name}}<br> <span timeago [date]=\"item?.Job.CreatedBy\"></span></h6>\n                <h6 *ngIf=\"item.Job.IsAnonymous===true\" class=\"mb-0\">Anonymous<br> <span timeago [date]=\"item?.Job.CreatedBy\"></span>\n                </h6>\n              </div>\n            </div>\n            <div class=\"d-flex justify-content-end share_sec\">\n              <div class=\"dropdown\">\n                <span><img class=\"img img-responsive share\" src=\"./../../../assets/Logo/3dots.svg\" /></span>\n                <div class=\"dropdown-content mt-0\">\n                  <a *ngIf=\"userId!=item.Job?.User?.Id && userId && !item.Job?.IsAdded\" style=\"cursor: pointer;\"\n                    (click)=\"AddToJob(item?.Job?.Id)\">Add to My Jobs</a>\n                  <a *ngIf=\"userId!=item.Job?.User?.Id && userId && item.Job?.IsAdded\" (click)=\"RemoveToJob(item?.Job?.Id)\">Remove Job</a>\n                  <a *ngIf=\"userId!=item.Job?.User?.Id && userId\" style=\"cursor: pointer;\"\n                    (click)=\"Report(item?.Job?.Id)\">Report</a>\n                  <a data-bs-toggle=\"modal\" data-bs-target=\"#staticBackdrop\" (click)=\"getJobId(item?.Job?.Id,item?.Job?.Descriptions)\" style=\"cursor: pointer;\">Share</a>\n                </div>\n              </div>\n            </div>\n          </div>\n          <p class=\"heading\">\n            {{item?.Job.Descriptions | slice:0:70}}{{ item?.Job.Descriptions.length > 70 ? '...' : '' }}\n          </p>\n          <div (click)=\"RedirectToJob(item.Job.Id)\"\n\n          class=\"mt-1\">\n            <div class=\" \">\n\n              <div class=\"col-md-12 bg-white overlay_bg\">\n                <!-- If Job Image Avalable -->\n                <img *ngIf=\"item?.Job.ImagesUrl!=null\" class=\"img-thumbnail img-responsive img-fluid\"\n                  src=\"{{item?.Job.ImagesUrl}}\">\n\n                <!-- If No Job Image Avalable -->\n                <!-- <div *ngIf=\"item?.Job.ImagesUrl==null\" [ngStyle]=\"{background: item?.Job?.ColorCode}\" class=\"card cd\">\n                  <div class=\"content\">\n                    <div class=\"card-body\">\n                      <p *ngIf=\"item?.Job.Descriptions.length>=1 && item?.Job.Descriptions.length<=20\"\n                        class=\"card-text text-center mt-5\"> {{item?.Job.Descriptions | slice:0:20}}</p>\n                      <p *ngIf=\"item?.Job.Descriptions.length>20 && item?.Job.Descriptions.length<=35\"\n                        class=\"card-text text-center mt-2\"> {{item?.Job.Descriptions | slice:0:45}}</p>\n                      <p *ngIf=\"item?.Job.Descriptions.length>35\" class=\"card-text text-center mt-0\">\n                        {{item?.Job.Descriptions | slice:0:45}}{{ item?.Job.Descriptions.length > 50 ? '...' : '' }}\n                      </p>\n                    </div>\n                  </div>\n                </div> -->\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div *ngIf=\"isLoading\" class=\"lds-ring\">\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <br><br>\n      </div>\n\n      <div *ngIf=\"!NotEmptPost\">\n        <br><br> <br>\n        <div class=\"col-md-12 d-flex justify-content-center\">\n          <div class=\"Search-result\">{{noResultText}}</div>\n        </div>\n      </div>\n    </div>\n\n    <div *ngIf=\"!IsOnJob\">\n      <app-userList></app-userList>\n    </div>\n    <br>\n    <br>\n    <br>\n\n  </div>\n</div>\n\n<!-- //Share Model -->\n<div class=\"modal fade \" id=\"staticBackdrop\" data-bs-backdrop=\"static\" data-bs-keyboard=\"false\" tabindex=\"-1\" aria-labelledby=\"staticBackdropLabel\" aria-hidden=\"true\">\n <div class=\"modal-dialog modal-dialog-centered modal-dialog-scrollable \">\n   <div class=\"modal-content ShareModel\">\n     <div class=\"modal-header\">\n       <h5 class=\"modal-title\" id=\"staticBackdropLabel\">Share with</h5>\n       <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n     </div>\n     <div class=\"modal-body\">\n       <div class=\"row\">\n         <div class=\"social-buttons\">\n           <a (click)=\"shareFB(shareJobId)\" class=\"social-buttons__button social-button social-button--facebook\" aria-label=\"Facebook\">\n             <i class=\"fab fa-facebook-f\"></i>\n           </a>\n           <a (click)=\"shareTwitter(shareJobId)\" class=\"social-buttons__button social-button social-button--twitter\" aria-label=\"Twitter\">\n             <i class=\"fab fa-twitter\"></i>\n           </a>\n           <a (click)=\"GetSharedLink(shareJobId)\"  class=\"social-buttons__button social-button social-button--snapchat\" aria-label=\"SnapChat\">\n             <i class=\"fa fa-link\"></i>\n           </a>\n\n           <a (click)=\"shareWhatsApp(shareJobId)\" class=\"social-buttons__button social-button social-button--steam\" aria-label=\"Whatsapp\">\n             <i class=\"fab fa-whatsapp\"></i>\n           </a>\n         </div>\n\n\n       </div>\n     </div>\n\n   </div>\n </div>\n</div>\n\n\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LoginComponent } from './Auth/Login/Login.component';\nimport { ChatboxComponent } from './ChatModule/Chatbox/Chatbox.component';\nimport { ChatsComponent } from './ChatModule/Chats/Chats.component';\nimport { JobChatComponent } from './ChatModule/JobChat/JobChat.component';\nimport { PendingChangesGuard } from './guard/activate-guard';\nimport { authPageGaurd } from './guard/authPage.guard';\nimport { LoginGaurd } from './guard/Login.guard';\nimport { JobDetailComponent } from './Job/JobDetails/JobDetail.component';\nimport { JobEditComponent } from './Job/JobEdit/JobEdit.component';\nimport { JobListComponent } from './Job/JobList/JobList.component';\nimport { JobPostComponent } from './Job/JobPost/JobPost.component';\nimport { EditComponent } from './Profile/EditProfile/Edit.component';\nimport { UserProfileComponent } from './Profile/UserProfile/UserProfile.component';\nimport { DownloadComponent } from './Settings/Download/Download.component';\nimport { HelpDeskComponent } from './Settings/HelpDesk/HelpDesk.component';\nimport { WallListComponent } from './Wall/wallList/wallList.component';\nconst routes: Routes = [\n  {\n    path: 'login',\n    component:LoginComponent,\n    canActivate: [authPageGaurd]\n  },\n  {\n    path: '',\n    component:WallListComponent\n  },\n\n  {\n    path: 'profile',\n    component:UserProfileComponent\n  },\n  {\n    path:'editProfile',\n    component:EditComponent,\n    canActivate: [LoginGaurd]\n  },\n  {\n    path: 'jobDetails',\n    component:JobDetailComponent\n  },\n  {\n    path: 'jobpost',\n    component:JobPostComponent,\n    canActivate: [LoginGaurd],\n    canDeactivate: [PendingChangesGuard]\n  },\n  {\n    path: 'joblist',\n    component:JobListComponent,\n    canActivate: [LoginGaurd]\n  },\n  {\n    path:'editJob',\n    component:JobEditComponent,\n    canActivate: [LoginGaurd]\n  },\n  {\n    path:'chat',\n    component:ChatsComponent,\n    canActivate: [LoginGaurd]\n  },\n  {\n    path:'chatbox',\n    component:ChatboxComponent,\n    canActivate: [LoginGaurd]\n  },\n  {\n    path:'jobchatbox',\n    component:JobChatComponent,\n    canActivate: [LoginGaurd]\n  },\n  {\n    path: 'settings/helpDesk',\n    component:HelpDeskComponent\n  },\n  {\n    path: 'settings/download',\n    component:DownloadComponent\n  },\n];\n\n@NgModule({\n  imports: [ RouterModule.forRoot(routes,{ initialNavigation: 'enabledBlocking' }) ],\n  exports: [ RouterModule ]\n})\nexport class AppRoutingModule {}\n","import { SharedService } from './services/SharedServices/Shared.service';\nimport { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, NavigationEnd, Router } from \"@angular/router\";\nimport { SeoServiceService } from './services/SeoService.service';\n@Component({\n  selector: \"app-root\",\n  templateUrl: \"./app.component.html\",\n})\nexport class AppComponent implements OnInit {\n  token!:string;\n  loggedIn:boolean=false;\n  constructor(private _router: Router, private activatedRoute: ActivatedRoute, private seoService: SeoServiceService,public _sharedServices:SharedService) {\n\n  }\n\n  ngOnInit() {\n\n  this.token = localStorage.getItem('user')!;\n  this.IsLogin();\n  }\n\n  Search(searchTerm:string) {\n    this._router.navigate(['/'], { queryParams: {searchTag:searchTerm }});\n}\n  IsLogin(){\n    if (this.token) {\n      this.loggedIn=true;\n    }\n  }\n}\n","<ngx-loading-bar [includeSpinner]=\"false\" color=\"#00fa9a\" height=\"4px\"></ngx-loading-bar>\n<app-TopNavBar (notifyParent)=\"Search($event)\" *ngIf=\"!this._sharedServices.IslogingPage\"></app-TopNavBar>\n\n<router-outlet></router-outlet>\n","\nimport { JobDetailComponent } from './Job/JobDetails/JobDetail.component';\nimport { SharedModule } from './Shared/Shared.module';\nimport { UserListComponent } from './Wall/UserList/userList.component';\nimport { LoginComponent } from './Auth/Login/Login.component';\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { SweetAlert2Module } from '@sweetalert2/ngx-sweetalert2';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { LoadingBarRouterModule } from '@ngx-loading-bar/router';\nimport { LoadingBarModule } from '@ngx-loading-bar/core';\nimport { AppComponent } from './app.component';\n\nimport { PLATFORM_ID, APP_ID, Inject } from '@angular/core';\nimport { isPlatformBrowser, CommonModule } from '@angular/common';\nimport { TopNavBarComponent } from './Shared/TopNavBar/TopNavBar.component';\nimport { FacebookLoginProvider, GoogleLoginProvider, SocialAuthServiceConfig, SocialLoginModule } from 'angularx-social-login';\nimport { HotToastModule } from '@ngneat/hot-toast';\nimport { SharedService } from './services/SharedServices/Shared.service';\nimport { PendingChangesGuard } from './guard/activate-guard';\nimport { AgmCoreModule } from '@agm/core';\nimport { WallListComponent } from './Wall/wallList/wallList.component';\nimport { InfiniteScrollModule } from 'ngx-infinite-scroll';\nimport { NgxCopyToClipboardModule } from 'ngx-copy-to-clipboard';\nimport { TimeagoCustomFormatter, TimeagoFormatter, TimeagoIntl, TimeagoModule } from 'ngx-timeago';\nimport { DownloadComponent } from './Settings/Download/Download.component';\nimport { HelpDeskComponent } from './Settings/HelpDesk/HelpDesk.component';\nimport { JobEditComponent } from './Job/JobEdit/JobEdit.component';\nimport { JobListComponent } from './Job/JobList/JobList.component';\nimport { JobPostComponent } from './Job/JobPost/JobPost.component';\nimport { JobResponceComponent } from './Job/JobResponce/JobResponce.component';\nimport { ChatboxComponent } from './ChatModule/Chatbox/Chatbox.component';\nimport { ChatsComponent } from './ChatModule/Chats/Chats.component';\nimport { JobChatComponent } from './ChatModule/JobChat/JobChat.component';\nimport { EditComponent } from './Profile/EditProfile/Edit.component';\nimport { UserProfileComponent } from './Profile/UserProfile/UserProfile.component';\nexport class MyIntl extends TimeagoIntl {\n  // do extra stuff here...\n  }\n@NgModule({\n  imports: [\n    BrowserModule.withServerTransition({ appId: 'tour-of-heroes' }),\n   SharedModule,\n   CommonModule,\n   FormsModule,\n   ReactiveFormsModule,\n    AppRoutingModule,\n    HttpClientModule,\n    LoadingBarRouterModule,\n    InfiniteScrollModule,\n    NgxCopyToClipboardModule,\n    TimeagoModule.forRoot({\n      intl: { provide: TimeagoIntl },\n      formatter: { provide: TimeagoFormatter, useClass: TimeagoCustomFormatter },\n    }),\n\n    SocialLoginModule,\n    // for Core use:\n    LoadingBarModule,\n    HotToastModule.forRoot(),\n    SweetAlert2Module.forRoot(),\n    AgmCoreModule.forRoot({\n      apiKey: 'AIzaSyC2FrT93DXiG5u9Ow2LCAie6wIxoQzv5qQ',\n      libraries: ['places']\n    })\n  ],\n  declarations: [\n    AppComponent,\n    TopNavBarComponent,\n    LoginComponent,\n    WallListComponent,\n    UserListComponent,\n    JobDetailComponent,\n    JobEditComponent,\n    JobListComponent,\n    JobPostComponent,\n    JobResponceComponent,\n    ChatboxComponent,\n    ChatsComponent,\n    EditComponent,\n    UserProfileComponent,\n    JobChatComponent,\n    HelpDeskComponent,\n    DownloadComponent\n  ],\n  providers: [\n\n    SharedService,\n    {\n      provide: 'SocialAuthServiceConfig',\n      useValue: {\n        autoLogin: false,\n        providers: [\n          {\n            id: GoogleLoginProvider.PROVIDER_ID,\n            provider: new GoogleLoginProvider(\n              '547202752586-q5lou7tho2mp7ej1g7cfci3hq5offm46.apps.googleusercontent.com'\n            )\n          },\n          {\n            id: FacebookLoginProvider.PROVIDER_ID,\n            provider: new FacebookLoginProvider('529256848841971')\n          },\n\n        ]\n      } as SocialAuthServiceConfig,\n    },\n    PendingChangesGuard\n  ],\n  bootstrap: [ AppComponent]\n})\nexport class AppModule {\n  constructor(\n    @Inject(PLATFORM_ID) private platformId: object,\n    @Inject(APP_ID) private appId: string) {\n    const platform = isPlatformBrowser(platformId) ?\n      'in the browser' : 'on the server';\n    console.log(`Running ${platform} with appId=${appId}`);\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, RouterStateSnapshot, CanActivate, Router } from '@angular/router';\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class LoginGaurd implements CanActivate {\r\n    constructor(private _router: Router) {\r\n    }\r\n    canActivate(\r\n        next:  ActivatedRouteSnapshot,\r\n        state: RouterStateSnapshot): boolean {\r\n        if (localStorage.getItem('user')) {\r\n            return true;\r\n        }\r\n        else {\r\n            window.location.href='/login';\r\n            return false;\r\n        }\r\n    }\r\n}\r\n","import { CanDeactivate } from '@angular/router';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nexport interface ComponentCanDeactivate {\n  canDeactivate: () => boolean | Observable<boolean>;\n}\n\n@Injectable()\nexport class PendingChangesGuard implements CanDeactivate<ComponentCanDeactivate> {\n  canDeactivate(component: ComponentCanDeactivate): boolean | Observable<boolean> {\n    // if there are no pending changes, just allow deactivation; else confirm first\n    return component.canDeactivate() ?\n      true :\n      // NOTE: this warning message will only be shown when navigating elsewhere within your angular app;\n      // when navigating away from your angular app, the browser will show a generic warning message\n      // see http://stackoverflow.com/a/42207299/7307355\n\n     confirm('WARNING: You have unsaved changes. Press Cancel to go back and save these changes, or OK to lose these changes.');\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, RouterStateSnapshot, CanActivate, Router } from '@angular/router';  \r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class authPageGaurd implements CanActivate {\r\n    constructor(private _router: Router) {\r\n      \r\n    }\r\n    canActivate(\r\n        next:  ActivatedRouteSnapshot,\r\n        state: RouterStateSnapshot): boolean {\r\n        if (!localStorage.getItem('user')) {\r\n            return true;\r\n        }\r\n        else {\r\n            window.location.href='/';\r\n            return false;\r\n        }\r\n    }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from '../../../environments/environment';\nimport { SocialAuthentication } from '../../Model/User/SocialAuthentication';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProfileService {\n  baseURL=environment.api_url;\n  constructor(private _http:HttpClient) {  }\n  GetUserProfile(id:number){\n    return this._http.get(this.baseURL+'User/UserById/'+id);\n  }\n  load(){\n   return this._http.get('');\n  }\n  UpdateUser(id:number,user:SocialAuthentication){\n    return this._http.post(this.baseURL+'User/'+id,user);\n  }\n  UpdateUserPhoto(userId: number, file: any) {\n    return this._http.post(this.baseURL + 'AuthLogin/AddAuthUserImage/' + userId, file);\n  }\n  RemoveUserPhoto(userId: number) {\n    return this._http.post(this.baseURL + 'AuthLogin/RemoveAuthUserImage/' + userId, {});\n  }\n  AddAuthUserCoverImage(userId: number, file: any) {\n    return this._http.post(this.baseURL + 'AuthLogin/AddAuthUserCoverImage/' + userId, file);\n  }\n  Login(user:SocialAuthentication){\n    return this._http.post(this.baseURL+'AuthLogin/AddAuthUser',user);\n  }\n  LogOut(loginId:number){\n    return this._http.post(this.baseURL+'AuthLogin/LogOut/'+loginId,{});\n  }\n  IsOnline(loginId:number){\n    return this._http.get(this.baseURL+'AuthLogin/IsOnline/'+loginId);\n  }\n}\n","import { environment } from './../../../../environments/environment.prod';\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class JobChatService {\n  baseURL=environment.api_url;\n  constructor(private _http:HttpClient) {  }\n\n  getJobchatList(jobId:number,senderId:number,recipientId:number){\n   return this._http.get(environment.api_url+'Message/GetSingleUserChatByJob/'+jobId+'/'+senderId+'/'+recipientId);\n  }\n  updateJobReponcesCount(jobId:number,senderId:number,recipentId:number){\n    return this._http.post(environment.api_url+'Message/JobUserMessageResponceUpdate/'+jobId+'/'+senderId+'/'+recipentId,{});\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from '../../../../environments/environment';\nimport { MessageForCreationDto } from '../../../Model/Message/MessageForCreationDto';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserChatService {\n  baseURL=environment.api_url;\n  constructor(private _http:HttpClient) {  }\n  SendMessage(userid:number, message:MessageForCreationDto){\n   return this._http.post(environment.api_url+'Message/Send/'+userid,message)\n  }\n  getUserchatList(loggedUserId:number){\n   return this._http.get(environment.api_url+'Message/AllChatsUser/'+loggedUserId);\n  }\n  getMessages(senderId:number,recipientId:number){\n    return this._http.get(environment.api_url+'Message/UserChat/'+senderId+'/'+recipientId);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams} from '@angular/common/http';\nimport { environment } from '../../../environments/environment';\nimport { JobModel } from '../../Model/Job/JobModel';\nimport { Observable } from 'rxjs';\nimport { PaginatedResult } from '../../Model/Pagination';\nimport { JobResponces } from '../../Model/Job/JobResponces';\nimport { map } from 'rxjs/operators';\nimport { UserJobs } from '../../Model/Job/UserJobs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class JobPostService {\n  public ii='';\n  baseURL=environment.api_url;\n  constructor(private _http:HttpClient) {\n\n   }\n  AddJobPost(job:JobModel){\n    return  this._http.post(this.baseURL + 'Job/AddJob',job);\n    }\n\n  UpdateJobPost(jobId: number, job: JobModel) {\n    return this._http.post(this.baseURL + 'Job/UpdateJob/' + jobId, job);\n  }\n\n    AddPostImages(jobId:number, file:any){\n      return  this._http.post(this.baseURL + 'Job/AddJobImage/'+jobId,file);\n    }\n    GetAllJob(){\n      return this._http.get(this.baseURL+'Job/AllJob');\n    }\n    GetJobById(id:number){\n      return this._http.get(this.baseURL+'Job/WebSingleJobByJobId/'+id);\n    }\n\n    GetResponceCount(jobId:number,senderId:number){\n      return  this._http.get(this.baseURL + 'WebPost/ResponceCount/'+jobId + '/'+senderId);\n    }\n\n    GetAllWithAddedJob(userId:number, page?:number, itemsPerPage?:number,Jobstatus?:any): Observable<PaginatedResult<JobResponces>>{\n      const paginatedResult: PaginatedResult<JobResponces> = new PaginatedResult<JobResponces>();\n      let params = new HttpParams();\n      if (page != null && itemsPerPage != null) {\n        params = params.append('pageNumber', page);\n        params = params.append('pageSize', itemsPerPage);\n        params = params.append('JobStatus', Jobstatus);\n\n      }\n     //  params = params.append('searchTag', searchTerm);\n      return this._http.get<any>(this.baseURL+'Job/GetAllWithAddedJob/'+userId,{ observe: 'response', params })\n      .pipe(\n        map(response => {\n          paginatedResult.result = response.body;\n\n          if (response.headers.get('Pagination') != null) {\n            paginatedResult.pagination = JSON.parse(<any>response.headers.get('Pagination'));\n          }\n          return paginatedResult;\n        })\n      );\n    }\n\n    GetPostJob(userId:number, page?:number, itemsPerPage?:number,Jobstatus?:any): Observable<PaginatedResult<JobResponces>>{\n      const paginatedResult: PaginatedResult<JobResponces> = new PaginatedResult<JobResponces>();\n      let params = new HttpParams();\n      if (page != null && itemsPerPage != null) {\n        params = params.append('pageNumber', page);\n        params = params.append('pageSize', itemsPerPage);\n        params = params.append('JobStatus', Jobstatus);\n      }\n     //  params = params.append('searchTag', searchTerm);\n      return this._http.get<any>(this.baseURL+'Job/JobById/'+userId,{ observe: 'response', params })\n      .pipe(\n        map(response => {\n          paginatedResult.result = response.body;\n\n          if (response.headers.get('Pagination') != null) {\n            paginatedResult.pagination = JSON.parse(<any>response.headers.get('Pagination'));\n          }\n          return paginatedResult;\n        })\n      );\n    }\n\n    //Update Job Status\n    UpdateJobStatus(jobId:number, JobStatus:string){\n      return  this._http.post(this.baseURL + 'Job/UpdateJobStatus/'+jobId+'/'+JobStatus,{});\n    }\n\n    //Add Job By User\n    AddJobToUser(userJobs:UserJobs){\n    return  this._http.post(this.baseURL + 'User/AddUserJobs',userJobs);\n  }\n   //Check is job add to logged user\n   IsAddedJob(userId:number,jobId:number){\n    return  this._http.get(this.baseURL + 'User/IsAddedJob/'+userId+'/'+jobId);\n  }\n}\n","import { environment } from './../../../environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class JobResponcesService {\n  baseURL=environment.api_url;\n  constructor(private _http:HttpClient) {  }\n  GetJobResponces(jobId:number,userId:number){\n    return this._http.get(this.baseURL+'Message/'+jobId+'/'+userId);\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from '../../../environments/environment';\nimport { Reporting } from '../../Model/Report/Reporting';\n@Injectable({\n  providedIn: 'root'\n})\nexport class ReportJobService {\n  baseURL=environment.api_url;\n  constructor(private _http:HttpClient) {  }\n\n  ReportJob(reporting: Reporting) {\n    return this._http.post(this.baseURL + 'Report/AddJobReport', reporting);\n  } \n}\n","import { Injectable } from '@angular/core';\nimport { Meta, MetaDefinition, Title } from '@angular/platform-browser';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SeoServiceService {\n public ii:string='';\n  constructor() {\n      this.ii=\"wow\";\n  }\n  load(){\n    \n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HotToastService } from '@ngneat/hot-toast';\n@Injectable({\n  providedIn: 'root'\n})\nexport class SharedService {\n  public IslogingPage:boolean=false;\nconstructor(private toast: HotToastService,) { }\n\n  checkInterNetConnection():any {\n    if (!navigator.onLine)\n      return this.toast.info('Please check your internet connection', {\n        position: 'top-center',\n      });\n  }\n  LoggedUserData(){\n    if(localStorage.getItem('user')){\n      let user= JSON.parse(localStorage.getItem('user')!);\n      this.IslogingPage=false;\n    }else{\n      window.location.href='/login';\n    }\n  }\n  IsUserIsOnLogInPage(){\n    this.IslogingPage=true;\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from '../../../environments/environment';\nimport { TagMaster } from '../../Model/TagMaster';\n@Injectable({\n  providedIn: 'root'\n})\nexport class TagService {\n  baseURL=environment.api_url;\n  constructor(private _http:HttpClient) {  }\n  AddTag(tag:TagMaster){\n    return  this._http.post(this.baseURL + 'Tag/AddTagMaster',tag); \n    } \n}\n","import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from '../../../environments/environment';\nimport { JobParams } from '../../Model/JobParams';\nimport { PaginatedResult } from '../../Model/Pagination';\nimport { WallResponce } from '../../Model/Wall/WallResponce';\nimport { map } from 'rxjs/operators';\nimport { UserResponce } from '../../Model/Wall/UserResponce';\n@Injectable({\n  providedIn: 'root'\n})\nexport class WallService {\n  userParams!: JobParams;\n  baseURL=environment.api_url;\n  constructor(private _http:HttpClient) {  }\n\n  GetWall(page?:number, itemsPerPage?:number,searchTerm?:any,userId?:any): Observable<PaginatedResult<WallResponce>>{\n    const paginatedResult: PaginatedResult<WallResponce> = new PaginatedResult<WallResponce>();\n    let params = new HttpParams();\n    if (page != null && itemsPerPage != null) {\n      params = params.append('pageNumber', page);\n      params = params.append('pageSize', itemsPerPage);\n    }\n     params = params.append('searchTag', searchTerm);\n     params = params.append('UserId', userId);\n    return this._http.get<WallResponce|any>(this.baseURL+'Wall/WebGetJobsByMultiTags',{ observe: 'response', params })\n    .pipe(\n      map(response => {\n        paginatedResult.result = response.body;\n\n        if (response.headers.get('Pagination') != null) {\n          paginatedResult.pagination = JSON.parse(<any>response.headers.get('Pagination'));\n        }\n        return paginatedResult;\n      })\n    );\n  }\n\n  GetUserWall(page?:number, itemsPerPage?:number,searchTerm?:any,userId?:any): Observable<PaginatedResult<UserResponce>> {\n    const paginatedResult: PaginatedResult<UserResponce> = new PaginatedResult<UserResponce>();\n    let params = new HttpParams();\n    if (page != null && itemsPerPage != null) {\n      params = params.append('pageNumber', page);\n      params = params.append('pageSize', itemsPerPage);\n    }\n    params = params.append('searchTagTerm', searchTerm);\n    params = params.append('UserId', userId);\n    return this._http.get<any>(this.baseURL + 'Wall/WebGetUsersByMultiTags', { observe: 'response', params })\n      .pipe(\n        map(response => {\n          paginatedResult.result = response.body;\n\n          if (response.headers.get('Pagination') != null) {\n            paginatedResult.pagination = JSON.parse(<any>response.headers.get('Pagination'));\n          }\n          return paginatedResult;\n        })\n      );\n  }\n}\n","import { environment } from './../../environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { HttpTransportType, HubConnectionBuilder } from '@microsoft/signalr'\nimport { Observable, Subject } from 'rxjs';\nimport { RealChatDtos } from '../Model/Message/RealChatDtos';\nimport { tap } from 'rxjs/operators';\nimport { JobMessages } from '../Model/Message/JobMessages';\n@Injectable({\n  providedIn: 'root'\n})\nexport class SignalrService {\n  private  connection: any = new HubConnectionBuilder()\n  .withUrl(environment.hubConnectionURL, {\n           skipNegotiation: true,\n           transport:  HttpTransportType.WebSockets\n         })\n         .build();\nreadonly POST_URL = environment.broadcastURL;\nreadonly JobPOST_URL = environment.broadcastJobURL;\n\nprivate receivedMessageObject: RealChatDtos = new RealChatDtos();\nprivate sharedObj = new Subject<RealChatDtos>();\n\n  constructor(private http: HttpClient) {\n    this.connection.onclose(async () => {\n      await this.start();\n    });\n   this.connection.on(\"ReceiveOne\", (data:RealChatDtos) => {   this.mapReceivedMessage(data); });\n   this.start();\n  }\n// Strart the connection\npublic async start() {\n  try {\n    await this.connection.start();\n    console.log(\"connected\");\n  } catch (err) {\n    console.log(err);\n    setTimeout(() => this.start(), 5000);\n  }\n}\n\npublic mapReceivedMessage(user: RealChatDtos): void {\n  this.receivedMessageObject.SenderId = user.SenderId;\n  this.receivedMessageObject.RecipientId = user.RecipientId;\n  this.receivedMessageObject.Content = user.Content;\n  this.receivedMessageObject.RecipientContent = user.RecipientContent;\n  this.receivedMessageObject.SenderContent = user.SenderContent;\n  this.sharedObj.next(this.receivedMessageObject);\n}\n\n/* ****************************** Public Mehods **************************************** */\n\n  // Calls the controller method\n  public broadcastMessage(msgDto: RealChatDtos) {\n    this.http.post(this.POST_URL, msgDto).subscribe(data => {});\n   // this.connection.invoke(\"ReceiveOne\",msgDto).catch(err => console.error(err));    // This can invoke the server method named as \"SendMethod1\" directly.\n  }\n\n  public broadcastJobMessage(msgDto: JobMessages) {\n    this.http.post(this.JobPOST_URL, msgDto).subscribe(data => {});\n   // this.connection.invoke(\"ReceiveOne\",msgDto).catch(err => console.error(err));    // This can invoke the server method named as \"SendMethod1\" directly.\n  }\n\n  public retrieveMappedObject(): Observable<RealChatDtos> {\n\n    return this.sharedObj.asObservable();\n  }\n\n  // public connect = () => {\n  //   this.startConnection();\n  //   this.addListeners();\n  // }\n\n  // // Message user to User\n   public sendMessageToApi(userid:number, message:RealChatDtos) {\n     return this.http.post(environment.api_url+'Message/Send/'+userid,message)\n       .pipe(tap(_ => {}));\n   }\n\n  // // Message to Job\n  public sendMessageToJobApi(jobId:number,recipientId:number,senderId:number, message:JobMessages) {\n    return this.http.post(environment.api_url+'Message/JobChat/'+jobId+'/'+recipientId+'/'+senderId, message)\n      .pipe(tap(_ => console.log()));\n  }\n\n  // public sendMessageToHub(message: MessageForCreationDto) {\n  //   var promise = this.hubConnection.invoke(\"BroadcastAsync\", this.buildChatMessage(message))\n  //     .then(() => { console.log('message sent successfully to hub'); })\n  //     .catch((err) => console.log('error while sending a message to hub: ' + err));\n\n  //   return from(promise);\n  // }\n\n  // private getConnection(): HubConnection {\n  //   return new HubConnectionBuilder().withHubProtocol(new MessagePackHubProtocol())\n  //      .configureLogging(LogLevel.Trace).withUrl(this.connectionUrl, {\n  //       skipNegotiation: true,\n  //       transport:  HttpTransportType.WebSockets\n  //     })\n  //     .build();\n  // }\n\n  // private buildChatMessage(message: MessageForCreationDto): MessageForCreationDto {\n  //   return {\n  //     SenderId: message.SenderId,\n  //     RecipientId:message.RecipientId,\n  //     Content: message.Content,\n  //     RecipientContent:null,\n  //     SenderContent:message.Content\n  //   };\n  // }\n\n  // private buildJobChatMessage(message: JobMessages): JobMessages {\n  //   return {\n  //     JobId:message.JobId,\n  //     SenderId: message.SenderId,\n  //     RecipientId: message.RecipientId,\n  //     Content: message.Content,\n  //   };\n  // }\n\n  // private startConnection() {\n  //   this.hubConnection = this.getConnection();\n  //   this.hubConnection.start()\n  //     .then(() => console.log('connection started'))\n  //     .catch((err) => console.log('error while establishing signalr connection: ' + err))\n  // }\n\n  // private addListeners() {\n  //   this.hubConnection.on(\n  //     \"messageReceivedFromApi\",\n  //     (data: MessageForCreationDto) => {\n  //       this.messages.push(data);\n  //     }\n  //   );\n  //   this.hubConnection.on(\"messageReceivedFromHub\", (data: MessageForCreationDto) => {\n  //     console.log(\"message received from Hub\")\n\n  //   })\n  //   this.hubConnection.on(\"newUserConnected\", _ => {\n  //     console.log(\"new user connected\")\n  //   })\n  // }\n}\n\n\n\n","export const environment = {\n  production: true,\n  api_url: 'https://livsolution.co.in/api/',\n// api_url: 'http://localhost:5000/api/',\n hubConnectionURL: 'https://livsolution.co.in/signalr',\n broadcastURL: 'https://livsolution.co.in/api/Chat/send',\n broadcastJobURL: 'https://livsolution.co.in/api/Chat/Jobsend'\n};\n","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `angular-cli.json`.\n\nexport const environment = {\n  production: false,\n  api_url: 'https://www.livsolution.co.in/api/',\n  //api_url: 'http://localhost:5000/api/',\n  hubConnectionURL: 'http://localhost:5000/signalr',\n  broadcastURL: 'http://localhost:5000/api/Chat/send',\n  broadcastJobURL: 'http://localhost:5000/api/Chat/Jobsend'\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  platformBrowserDynamic().bootstrapModule(AppModule)\n    .catch(err => console.error(err));\n});\n"],"names":["environment","HttpTransportType","HubConnectionBuilder","Subject","RealChatDtos","tap","SignalrService","constructor","http","withUrl","hubConnectionURL","skipNegotiation","transport","WebSockets","build","broadcastURL","broadcastJobURL","connection","onclose","start","on","data","mapReceivedMessage","console","log","err","setTimeout","user","receivedMessageObject","SenderId","RecipientId","Content","RecipientContent","SenderContent","sharedObj","next","broadcastMessage","msgDto","post","POST_URL","subscribe","broadcastJobMessage","JobPOST_URL","retrieveMappedObject","asObservable","sendMessageToApi","userid","message","api_url","pipe","_","sendMessageToJobApi","jobId","recipientId","senderId","i0","factory","providedIn"],"sourceRoot":"webpack:///"}